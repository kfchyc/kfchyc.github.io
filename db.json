{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"node_modules/hexo-theme-next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","path":"images/apple-touch-icon-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","path":"images/avatar.gif","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","path":"images/favicon-16x16-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","path":"images/favicon-32x32-next.png","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","path":"images/logo-algolia-nebula-blue-full.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","path":"images/logo.svg","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/algolia-search.js","path":"js/algolia-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","path":"js/bookmark.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/local-search.js","path":"js/local-search.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","path":"js/motion.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","path":"js/next-boot.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","path":"js/schedule.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","path":"js/schemes/muse.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"ebbcd8ff030d665fa8eb0b642fe36219be03a45a","modified":1617100618817},{"_id":"source/_posts/.DS_Store","hash":"4276f9f70bddb98f15e255714197e9d9ec99e732","modified":1617100518601},{"_id":"source/_posts/2019-12-03-App Store 隐私政策网址(URL).markdown","hash":"c0bef3bb470d1d092d18da10e552bd5a69ce8451","modified":1615544139814},{"_id":"source/_posts/2021-03-26-Terminal Tips.md","hash":"ec4c801ab7873b45502fd58965fc6f9ff6f7ee68","modified":1616753636614},{"_id":"source/_posts/2021-03-12-代码质量总结.md","hash":"bd5d9308516b699e5f8238a0d88964db787b6a6b","modified":1615544509263},{"_id":"source/_posts/2021-03-26-iOS开发Tips.md","hash":"3610760a725e11099cdfc24c737b23906d432452","modified":1616753635623},{"_id":"source/_posts/hello-world.md","hash":"7d98d6592de80fdcd2949bd7401cec12afd98cdf","modified":1617099515165},{"_id":"source/_posts/2021-03-26-macOS Tips.md","hash":"ac56e47544a72f1a24bf2e8034636da900d71893","modified":1616753633166},{"_id":"source/_posts/2021:03:26:Xcode 小技巧.md","hash":"698b34b3b67b96df006912bd71858ca904b7e1bc","modified":1616753638593},{"_id":"source/_posts/2021-03-26-iOS零散知识点.md","hash":"ce450339af7c37a0a0b0df11128bd75333c9feba","modified":1616753860340},{"_id":"node_modules/hexo-theme-next/_vendors.yml","hash":"5b895f0254eac45413efcebc2f8b64f1e220530f","modified":1617099512975},{"_id":"node_modules/hexo-theme-next/_config.yml","hash":"1fb383b7597c4a4efd3153ccd42b7022ac7da1b8","modified":1617099512975},{"_id":"node_modules/hexo-theme-next/LICENSE.md","hash":"68fc9a03d50fd4b5ea97092b05967d1819dea2c4","modified":1617099512973},{"_id":"node_modules/hexo-theme-next/docs/LICENSE.txt","hash":"f5b14f791b7cfa1d16da981d929152e088a5d1b8","modified":1617099512977},{"_id":"node_modules/hexo-theme-next/languages/README.md","hash":"b2567e32805dda79601157351a07e5ca9fe01315","modified":1617099512980},{"_id":"node_modules/hexo-theme-next/languages/ar.yml","hash":"7a62243ec54196e3d1bea7364f05aded490bc234","modified":1617099512980},{"_id":"node_modules/hexo-theme-next/languages/de.yml","hash":"dc448f724c7d436233e9567711a09e0d56e60e3b","modified":1617099512980},{"_id":"node_modules/hexo-theme-next/languages/en.yml","hash":"48a76170d70ef7c1fac96720bc5064b43061708d","modified":1617099512981},{"_id":"node_modules/hexo-theme-next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1617099512976},{"_id":"node_modules/hexo-theme-next/languages/fa.yml","hash":"649823297167b902455c0aec8ddebb462df71c7d","modified":1617099512983},{"_id":"node_modules/hexo-theme-next/languages/es.yml","hash":"c3506dfaa771e827ae6adb322477c6e835cd0f09","modified":1617099512981},{"_id":"node_modules/hexo-theme-next/languages/fr.yml","hash":"8ddfe98e7847ee8f1eaba9119f9fbdc42d7ec120","modified":1617099512983},{"_id":"node_modules/hexo-theme-next/languages/it.yml","hash":"82a93c32b3fcf6517441cdc73f75bc6173beb392","modified":1617099512984},{"_id":"node_modules/hexo-theme-next/languages/ja.yml","hash":"99f6f84f5cb6631b7ae0b5594af2ea2940c3558e","modified":1617099512984},{"_id":"node_modules/hexo-theme-next/README.md","hash":"de109b73e09826f6bccceae60c618739a794f8f7","modified":1617099512974},{"_id":"node_modules/hexo-theme-next/docs/AUTHORS.md","hash":"a648823121563c34a177ae91f5a774b5e29f01a0","modified":1617099512976},{"_id":"node_modules/hexo-theme-next/languages/id.yml","hash":"ac018805190bc4bdc06091f5a6444e612fc700b0","modified":1617099512984},{"_id":"node_modules/hexo-theme-next/languages/nl.yml","hash":"0d3b56613197cb190900311507535db41daec7d4","modified":1617099512985},{"_id":"node_modules/hexo-theme-next/languages/ko.yml","hash":"8342df2f4190ba4ee004b70d1d6ccd341033dbe7","modified":1617099512985},{"_id":"node_modules/hexo-theme-next/languages/pt.yml","hash":"e0e2675261e2e80f7ce7d19c945c08217b068d81","modified":1617099512986},{"_id":"node_modules/hexo-theme-next/languages/pt-BR.yml","hash":"0863899aca1fa0b767fc337116a310815b4fd175","modified":1617099512986},{"_id":"node_modules/hexo-theme-next/languages/ru.yml","hash":"fdf5c623890db24cb56ab5ffe0c49db3542477c8","modified":1617099512986},{"_id":"node_modules/hexo-theme-next/languages/tr.yml","hash":"54de3d8d85e3c7b14b163c3d322411b7301a09b3","modified":1617099512987},{"_id":"node_modules/hexo-theme-next/languages/si.yml","hash":"f7918a1b1400d7c9e86fb6b75ef5a45eac6798f4","modified":1617099512987},{"_id":"node_modules/hexo-theme-next/languages/uk.yml","hash":"1c9a0b8d8160c77cc62064207d57f460f365cae9","modified":1617099512987},{"_id":"node_modules/hexo-theme-next/languages/zh-CN.yml","hash":"6f7c742316c96d5b71da50fddfb060ff7ec1ea99","modified":1617099512988},{"_id":"node_modules/hexo-theme-next/languages/vi.yml","hash":"1f9657b58e11db21f93eb895c90123b8f91751a7","modified":1617099512988},{"_id":"node_modules/hexo-theme-next/languages/zh-HK.yml","hash":"38b99be8cea1cfd79f36deca13be665dedfad9c5","modified":1617099512988},{"_id":"node_modules/hexo-theme-next/layout/_layout.njk","hash":"6915e19058b4b4e2b71707cb5ac6c936ef075e89","modified":1617099513071},{"_id":"node_modules/hexo-theme-next/languages/zh-TW.yml","hash":"8d6f8d90aedcc5c844da93e196bfde0c0161385b","modified":1617099513070},{"_id":"node_modules/hexo-theme-next/package.json","hash":"7f470d58fb0b875a78446801ad7aafdceb687981","modified":1617099513132},{"_id":"node_modules/hexo-theme-next/layout/archive.njk","hash":"d759f4d2cf5ddc6875ea250113a00662c1caf6d1","modified":1617099513127},{"_id":"node_modules/hexo-theme-next/layout/index.njk","hash":"37ec3d1bcd20b8ac1d18e0d68f990450890b46cd","modified":1617099513128},{"_id":"node_modules/hexo-theme-next/layout/page.njk","hash":"9cd3eca2c468bb46c7c5bf391bea4b025af178f6","modified":1617099513129},{"_id":"node_modules/hexo-theme-next/layout/category.njk","hash":"0a590e87af50e57b15fc37695c9a3bf4a97c3d92","modified":1617099513128},{"_id":"node_modules/hexo-theme-next/layout/post.njk","hash":"6abeb85fb3e4c382ed4bb6049b12a807e6226e67","modified":1617099513129},{"_id":"node_modules/hexo-theme-next/layout/tag.njk","hash":"6cd707f846bfd6becbcfb060c26958bb4015c31f","modified":1617099513130},{"_id":"node_modules/hexo-theme-next/docs/ru/README.md","hash":"63df0665005063108e1bc19df3cf8c4e46facb95","modified":1617099512977},{"_id":"node_modules/hexo-theme-next/layout/_macro/post-collapse.njk","hash":"1a30d751871dabfa80940042ddb1f77d07d830b9","modified":1617099513074},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CONTRIBUTING.md","hash":"8ee5ca39ac4a372a5c0f16e344bbe578af4aeae4","modified":1617099512978},{"_id":"node_modules/hexo-theme-next/layout/_macro/post.njk","hash":"b106599106285ecd4c0c1e0ed11c46a36b5a69d5","modified":1617099513074},{"_id":"node_modules/hexo-theme-next/layout/_macro/sidebar.njk","hash":"cbf838ca59646f128c9111bb28921c1d04d8dcaf","modified":1617099513075},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"7a06d443f374bd1e84294067a0ac796afd9fbe60","modified":1617099512978},{"_id":"node_modules/hexo-theme-next/docs/zh-CN/README.md","hash":"9abd8473985f2bf1557b1aac31b436c92d5450a7","modified":1617099512979},{"_id":"node_modules/hexo-theme-next/layout/_scripts/index.njk","hash":"6f0433940680c0f9db37542ca36f76e4bb1c1d50","modified":1617099513108},{"_id":"node_modules/hexo-theme-next/layout/_scripts/pjax.njk","hash":"28a3bcb1ce50924a5a48b0f3756ac3a8736867f1","modified":1617099513109},{"_id":"node_modules/hexo-theme-next/layout/_scripts/noscript.njk","hash":"4f250d0bf80be06dd2c95c1d4c2ba2624b59cf2a","modified":1617099513109},{"_id":"node_modules/hexo-theme-next/layout/_scripts/vendors.njk","hash":"bada07da2a47ed6de6081796367b19dd9e906cfb","modified":1617099513109},{"_id":"node_modules/hexo-theme-next/layout/_partials/comments.njk","hash":"334e8d8117a46c8c097788811322a62627952219","modified":1617099513076},{"_id":"node_modules/hexo-theme-next/layout/_partials/footer.njk","hash":"d16fdaf94d66efc0242b0c26ed539017e3b4f795","modified":1617099513076},{"_id":"node_modules/hexo-theme-next/layout/_partials/languages.njk","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1617099513081},{"_id":"node_modules/hexo-theme-next/layout/_partials/pagination.njk","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1617099513087},{"_id":"node_modules/hexo-theme-next/layout/_partials/widgets.njk","hash":"dfd91d64ebc06b5b139ee97424f4f93e66938e34","modified":1617099513108},{"_id":"node_modules/hexo-theme-next/layout/_third-party/index.njk","hash":"467b45a4912369bcba77908151e76a3f3ad0fed2","modified":1617099513121},{"_id":"node_modules/hexo-theme-next/layout/_third-party/quicklink.njk","hash":"294b7f6a4fa566e369d8be0ce7b28f35b6c14563","modified":1617099513123},{"_id":"node_modules/hexo-theme-next/layout/_third-party/nprogress.njk","hash":"271139c3896a6d294f46f767cb21b2e848050841","modified":1617099513122},{"_id":"node_modules/hexo-theme-next/layout/_third-party/rating.njk","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1617099513123},{"_id":"node_modules/hexo-theme-next/scripts/filters/default-injects.js","hash":"872f01cb10e422a648ea505436532e776e92926b","modified":1617099513146},{"_id":"node_modules/hexo-theme-next/scripts/filters/minify.js","hash":"be0574c64a38210e449c99d38a760452015060a3","modified":1617099513147},{"_id":"node_modules/hexo-theme-next/scripts/filters/locals.js","hash":"374c9211b3b6a5b2ad31f1bea69a22f2727f633a","modified":1617099513146},{"_id":"node_modules/hexo-theme-next/scripts/filters/post.js","hash":"42a9b81c5449afa9d67770604478168333c93804","modified":1617099513148},{"_id":"node_modules/hexo-theme-next/scripts/events/index.js","hash":"89091bc943cd8b8c63b8af3d26fb0a027048e9ba","modified":1617099513133},{"_id":"node_modules/hexo-theme-next/scripts/tags/button.js","hash":"c6ad2ed544fbb25ecb5d820c36e76302504271b7","modified":1617099513154},{"_id":"node_modules/hexo-theme-next/scripts/tags/caniuse.js","hash":"935a311142a409c1896b3ae3f01fe7a9e2db1134","modified":1617099513154},{"_id":"node_modules/hexo-theme-next/scripts/tags/group-pictures.js","hash":"79102d9e9bccff6224e77a77c4d2d363094ae3df","modified":1617099513155},{"_id":"node_modules/hexo-theme-next/scripts/tags/center-quote.js","hash":"92c19d796bdb3320df9caea59bf52df7a95d9da9","modified":1617099513155},{"_id":"node_modules/hexo-theme-next/scripts/tags/index.js","hash":"17f9451ce1f10f78437f52218757d38d4e1591b0","modified":1617099513156},{"_id":"node_modules/hexo-theme-next/scripts/tags/label.js","hash":"8a73348186113bae0a51ea2f891c1bb882fab05a","modified":1617099513158},{"_id":"node_modules/hexo-theme-next/scripts/tags/link-grid.js","hash":"9e2c58d1a4d1dd84fa86144e5b4576b2fd10a37f","modified":1617099513158},{"_id":"node_modules/hexo-theme-next/scripts/tags/mermaid.js","hash":"464effc08e757ce8e1bb094707d06ad829af9d62","modified":1617099513159},{"_id":"node_modules/hexo-theme-next/scripts/tags/note.js","hash":"7b94ddb46b7d4b0fe815f2fbe4bd375f07f55363","modified":1617099513160},{"_id":"node_modules/hexo-theme-next/scripts/tags/pdf.js","hash":"344636b6fd7e27e8831c1e194039afc0d61931cd","modified":1617099513162},{"_id":"node_modules/hexo-theme-next/scripts/tags/tabs.js","hash":"2bf00d56b3b289a7dd27e9b5820430a2457a19f3","modified":1617099513163},{"_id":"node_modules/hexo-theme-next/scripts/tags/video.js","hash":"2ee926448583be8f95af1f2884ae2c9c4830151d","modified":1617099513171},{"_id":"node_modules/hexo-theme-next/scripts/helpers/engine.js","hash":"0208f17281a1afe3da1298dd52350eb838098349","modified":1617099513149},{"_id":"node_modules/hexo-theme-next/scripts/helpers/font.js","hash":"3394185a7f0393c16ce52c8028f90da3e9239c55","modified":1617099513149},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-url.js","hash":"577c510374cf9bcfa8d3a1027e42411a9324805e","modified":1617099513151},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-config.js","hash":"413c51fa3caa87fe95d1d8f95e6023f096515632","modified":1617099513150},{"_id":"node_modules/hexo-theme-next/scripts/helpers/next-vendors.js","hash":"afdd6a188a74c188f0dd154fac70efd4080ca262","modified":1617099513152},{"_id":"node_modules/hexo-theme-next/source/css/_colors.styl","hash":"b37f9847d2f95632e911df670b51921a7d748068","modified":1617099513172},{"_id":"node_modules/hexo-theme-next/source/css/_mixins.styl","hash":"6bca0a5dc96fea392a0da53e0566ec2a113ec382","modified":1617099513323},{"_id":"node_modules/hexo-theme-next/source/css/main.styl","hash":"78ce791cc4ac95386cf6839ca72f5f7b51f86ee9","modified":1617099513338},{"_id":"node_modules/hexo-theme-next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1617099513338},{"_id":"node_modules/hexo-theme-next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1617099513340},{"_id":"node_modules/hexo-theme-next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1617099513340},{"_id":"node_modules/hexo-theme-next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1617099513339},{"_id":"node_modules/hexo-theme-next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1617099513341},{"_id":"node_modules/hexo-theme-next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1617099513342},{"_id":"node_modules/hexo-theme-next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1617099513341},{"_id":"node_modules/hexo-theme-next/source/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1617099513347},{"_id":"node_modules/hexo-theme-next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1617099513346},{"_id":"node_modules/hexo-theme-next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1617099513347},{"_id":"node_modules/hexo-theme-next/source/js/bookmark.js","hash":"e45e1fbb7c6d645e9c410759486216e570d02bef","modified":1617099513348},{"_id":"node_modules/hexo-theme-next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1617099513346},{"_id":"node_modules/hexo-theme-next/source/js/algolia-search.js","hash":"a360423984cdd915d04365c51bcab440e52d7223","modified":1617099513348},{"_id":"node_modules/hexo-theme-next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1617099513347},{"_id":"node_modules/hexo-theme-next/source/js/schedule.js","hash":"71d62fc3584c47ff2d4cc945226e412264399be9","modified":1617099513350},{"_id":"node_modules/hexo-theme-next/source/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":1617099513349},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head.njk","hash":"8f6521714044676e15d924da387b2aef45fc8fe6","modified":1617099513077},{"_id":"node_modules/hexo-theme-next/layout/_partials/head/head-unique.njk","hash":"37bdf020591feb0cf72327c9efd755bf78a0afd6","modified":1617099513077},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/index.njk","hash":"53895b3af95667edc5bf5d7356f8a2b4fe091447","modified":1617099513078},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu-item.njk","hash":"b46f412c0b4f775fd329d50357f722f5d7c1a3ba","modified":1617099513079},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/menu.njk","hash":"c9390824b57f23b7c8a5c23a9834514123673766","modified":1617099513080},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/brand.njk","hash":"ffb6c69a9c90793cbe9bf0544b55f7a41c016d8f","modified":1617099513078},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/breadcrumb.njk","hash":"edb3bb6d644b7407673c5ef3a426a244e98fcf89","modified":1617099513082},{"_id":"node_modules/hexo-theme-next/layout/_partials/header/sub-menu.njk","hash":"75a158a5b54a3a76ee6590f5e0e2dd4a9f0be869","modified":1617099513080},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/categories.njk","hash":"17156d99941f28a225951ffdcfa9a115e20dc2d2","modified":1617099513083},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/schedule.njk","hash":"9d650333160ad1977fe42d9770869ff1660a95fe","modified":1617099513086},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/page-header.njk","hash":"7ed4f102a1825195cff8d7995bf9219f323a9034","modified":1617099513084},{"_id":"node_modules/hexo-theme-next/source/js/local-search.js","hash":"da2051e7cab184ae4aa64457c5db7476b4645fdc","modified":1617099513349},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-copyright.njk","hash":"133942922e34abae9e4de7ea5591d77c0caa4b37","modified":1617099513088},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-followme.njk","hash":"154df0bb323c332d8c25343f258ee865e5553423","modified":1617099513094},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-footer.njk","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1617099513096},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-meta.njk","hash":"1410fad73e0a08a45166e4a055ba150fd06e8636","modified":1617099513097},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-related.njk","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1617099513097},{"_id":"node_modules/hexo-theme-next/layout/_partials/post/post-reward.njk","hash":"a9bb52d0537d27cfe670d80e716da6780786ab8a","modified":1617099513097},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/algolia-search.njk","hash":"efb2b6f19df02ba5ae623a1f274fff52aed21e6f","modified":1617099513098},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/index.njk","hash":"8f6f256ab3b351ffc80f1f3f1d9834e9a7cfac31","modified":1617099513100},{"_id":"node_modules/hexo-theme-next/layout/_partials/search/localsearch.njk","hash":"661f7acae43f0be694266323320f977d84119abe","modified":1617099513105},{"_id":"node_modules/hexo-theme-next/layout/_partials/sidebar/site-overview.njk","hash":"c419158e19805e2db614a5f5651e3e534e4a5e4e","modified":1617099513107},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/baidu-analytics.njk","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1617099513110},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/cloudflare.njk","hash":"c978e9efd472c4825f93b83524b11f1c4f7efaab","modified":1617099513113},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/google-analytics.njk","hash":"ad197fd728dd7ac90f910fdf80ce848eab3ff187","modified":1617099513114},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/growingio.njk","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1617099513114},{"_id":"node_modules/hexo-theme-next/layout/_third-party/analytics/index.njk","hash":"2d36a481a70d5f450f1f166dc556ac1218b18537","modified":1617099513115},{"_id":"node_modules/hexo-theme-next/layout/_partials/page/tags.njk","hash":"a18d1598e36cc72f2b0b24c3cc3c5990dfaa3254","modified":1617099513087},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/tidio.njk","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1617099513116},{"_id":"node_modules/hexo-theme-next/layout/_third-party/chat/chatra.njk","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1617099513116},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqus.njk","hash":"cc1450d62d76e59968bdd25836694b8339207384","modified":1617099513118},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/changyan.njk","hash":"5c2cd9b6f02bcb6248d3f18638a58e329fe8c0d1","modified":1617099513118},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/gitalk.njk","hash":"089e05126e7e4033eff90a26f946c419f2a1e87a","modified":1617099513119},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/disqusjs.njk","hash":"54eab4840443262432ec7c47e56e9859ace2a902","modified":1617099513119},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/livere.njk","hash":"6252b0353c6a36d03c68ebec1073293442221bd1","modified":1617099513120},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/utterances.njk","hash":"7a07bbfb09ddf70b919f0ebe1b00942c96152389","modified":1617099513120},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/index.njk","hash":"47a982aec8830c2f9711b2aff59ff83f09deb09e","modified":1617099513121},{"_id":"node_modules/hexo-theme-next/layout/_third-party/comments/isso.njk","hash":"c1bf0753fc4bc5f21d61eaffbcc915a462c7d830","modified":1617099513120},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/mathjax.njk","hash":"f4fd63b9f9230dadd1190f79d59313751925ed90","modified":1617099513122},{"_id":"node_modules/hexo-theme-next/layout/_third-party/math/katex.njk","hash":"b6746dfad32cc8a46ff8f4194a7a16ca41744803","modified":1617099513122},{"_id":"node_modules/hexo-theme-next/source/js/next-boot.js","hash":"c2a04055d8edec03dc74e1c45d83bd3b51467de0","modified":1617099513349},{"_id":"node_modules/hexo-theme-next/source/js/utils.js","hash":"fcb84304fc3ba06f8c4f840fe1e0843339e0899d","modified":1617099513350},{"_id":"node_modules/hexo-theme-next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1617099513344},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/algolia-search.njk","hash":"97035261aa85c7d39c6ce1211cdefc6248c0446d","modified":1617099513124},{"_id":"node_modules/hexo-theme-next/layout/_third-party/search/localsearch.njk","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1617099513124},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/mermaid.njk","hash":"007da98b913a62946c03a87f8fa25b3db856caa1","modified":1617099513126},{"_id":"node_modules/hexo-theme-next/layout/_third-party/tags/pdf.njk","hash":"b6241ebbb091ef18b3d06cba08ac2e04e3f67a7d","modified":1617099513127},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/busuanzi-counter.njk","hash":"a4bc501da0f22f7e420f0ca47e83988ce90b1368","modified":1617099513125},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/firestore.njk","hash":"0ff61346dc1327054ea2c211ba6fb654cdcdfd8d","modified":1617099513125},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/index.njk","hash":"568ddf7955d11d93fb5e842b403a7ac8b1b7fdb1","modified":1617099513125},{"_id":"node_modules/hexo-theme-next/layout/_third-party/statistics/lean-analytics.njk","hash":"811a3ad58c0a15550100bdc199bef8add1ad526c","modified":1617099513126},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1617099513140},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/default-config.js","hash":"93ee5f9109dad885dc38c49bcee630c10f9dce6e","modified":1617099513143},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqus.js","hash":"cc1e2d5921c6990f94f3cf11b1ff7533a21da9b7","modified":1617099513144},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/disqusjs.js","hash":"32a1d9ad50621a78d0243e176c8b05ff7866fd5b","modified":1617099513144},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/changyan.js","hash":"ecc93ba67af26b6715fc75001fa0c3131b726241","modified":1617099513139},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/gitalk.js","hash":"7c0533bac4400689a0d5ab3a188ce42b9375de46","modified":1617099513145},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/isso.js","hash":"ff8b5b5145220a17d0ecd9508ba9bd2d3b2da47d","modified":1617099513145},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/livere.js","hash":"60be56c9ba590e5bcb80d1607ca7eeedde9fdfaa","modified":1617099513145},{"_id":"node_modules/hexo-theme-next/scripts/filters/comment/utterances.js","hash":"d3bded697bc32dace689d2a6dfb6eb7514169d15","modified":1617099513146},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/highlight.js","hash":"6aec7b2c38c50989a23bfaa0d560e75c7f553e12","modified":1617099513134},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/config.js","hash":"09b58494e9d9d25542d1d218f2d0ffc4d2da9f30","modified":1617099513133},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/utils.js","hash":"b281be775b693f9bf32766c8f6ef703c72ac9b00","modified":1617099513138},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/vendors.js","hash":"d1ecc44f9f6e236bf910e36150767d36be4658b2","modified":1617099513138},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Gemini.styl","hash":"96e0a7c2a65ce68215e17e369085b2ea2f1334f2","modified":1617099513334},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Muse.styl","hash":"e3be898f5ebcf435a26542653a9297ff2c71aeb0","modified":1617099513335},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Mist.styl","hash":"e1fbf169b9b6a194b518240cbd06ec3c48b83d61","modified":1617099513335},{"_id":"node_modules/hexo-theme-next/source/css/_variables/Pisces.styl","hash":"c65536a128b9bc9dbe2fbb1b235a3cded2891002","modified":1617099513335},{"_id":"node_modules/hexo-theme-next/source/css/_variables/base.styl","hash":"32a1b73944561655087d80f025208a84e012b3cf","modified":1617099513336},{"_id":"node_modules/hexo-theme-next/source/js/schemes/muse.js","hash":"9d15d0d6a58b1df74827288f117af22b4b6aafe5","modified":1617099513350},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top-sidebar.styl","hash":"d4809783ded05625675b1b4bbd9e99d7f5f7d7f9","modified":1617099513173},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/back-to-top.styl","hash":"ece860218125bdb2578f373ed4f5040c9670e4b1","modified":1617099513173},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/reading-progress.styl","hash":"ee8fb8348aa76a9b346927ba4cae5666d8d777f7","modified":1617099513183},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/mobile.styl","hash":"9f88d350df8115d26c6adbc2025a27ef9a42d7ff","modified":1617099513209},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/index.styl","hash":"3c7ae405dd30b9b46494a6b9a6cb1b7ec6138ba9","modified":1617099513174},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/index.styl","hash":"0c9f72ad98807521cbdcee7b5bbe2e884311db39","modified":1617099513209},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/buttons.styl","hash":"a042571d85ff7265f799004239a45f36b716b8a6","modified":1617099513215},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/comments.styl","hash":"e4fecc889ba3317a64e9abba5842c79dff9b7827","modified":1617099513216},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1617099513315},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tables.styl","hash":"e840b23d33023e6d45e018f6e84b683dd56efd8d","modified":1617099513316},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/pagination.styl","hash":"41cba8c4c5637a6b8f1b62e67673b33676f5d734","modified":1617099513316},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/base.styl","hash":"db5ddaa8fd2101b0fd7108ce4bbcb9f0649fa223","modified":1617099513215},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/index.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1617099513314},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/toggles.styl","hash":"572a41499391677d84b16d8dbd6a996a3d5ce041","modified":1617099513322},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_header.styl","hash":"4817e77577896ab5c0da434549917ee703a3f4cf","modified":1617099513324},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Gemini/index.styl","hash":"fd49b521d67eaccc629f77b4e095cb7310327565","modified":1617099513324},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_layout.styl","hash":"5604ac1e161099a4d3e5657d53507268866dc717","modified":1617099513325},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/index.styl","hash":"ab16a3dcdc0393b9b582ef59dcc13db9320e917c","modified":1617099513326},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_layout.styl","hash":"82a29572dd90451f75358a2ee2522b87304a0bb8","modified":1617099513327},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_menu.styl","hash":"357b899ac0f0dfbbbebf1ea972030c7cefa463ce","modified":1617099513325},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sidebar.styl","hash":"87e163de866938c668ec33e6ff8972b7a968e0af","modified":1617099513328},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1617099513328},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_header.styl","hash":"06080fd963c904d96c00eff098a284e337953013","modified":1617099513326},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/_menu.styl","hash":"8a70d51d8f7cd113e5fbc9f0e70c46a072f282c8","modified":1617099513327},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1617099513328},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_header.styl","hash":"be5c46b983df08b9dbac1b4749b1a101b54b6b50","modified":1617099513329},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_menu.styl","hash":"dc68f16eceaa006e9735d7ff7821af7f4ef50979","modified":1617099513333},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sidebar.styl","hash":"2d337a12c5c668ee64447bda5a9ed64eaed5b29e","modified":1617099513333},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"778ed2ad5643b93970c95626b325defeb586733f","modified":1617099513333},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/index.styl","hash":"8000075b227749a7495eaf417cac6ccfbe441580","modified":1617099513334},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Pisces/_layout.styl","hash":"6eee86c8f0175d6c09e434053516cd8556f78d44","modified":1617099513329},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/breadcrumb.styl","hash":"8afdc311c6b8db121758371f95cf1c5e77354f42","modified":1617099513175},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/categories.styl","hash":"b6e2eb1550a7845cb2adf86081a4ab6c7bde1e68","modified":1617099513175},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/index.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1617099513176},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/tag-cloud.styl","hash":"1a81d1a71fcf0699629ce6e72dfd0a15f3a2dd0a","modified":1617099513176},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/pages/schedule.styl","hash":"6b816c2511242ee503fb5f34cd3e4dcdafc06b85","modified":1617099513176},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-collapse.styl","hash":"ec37a36e94ba791663607a5022f763915778578f","modified":1617099513179},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-body.styl","hash":"5d61dedb3bec1021d52894f9b379e4d0953f6a35","modified":1617099513178},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-followme.styl","hash":"76d0dfb3a8b873a6180604ac6daecf38b6a963a2","modified":1617099513179},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-footer.styl","hash":"1d284f3ea03ba9b4feb76b375e539a8e0bccf1c3","modified":1617099513179},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-header.styl","hash":"967021e5483495bdefac9e0b3e1c84c366c657fd","modified":1617099513181},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/index.styl","hash":"b3fa752f72ca1413289b76c56fbd33a00e3d25d7","modified":1617099513178},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-nav.styl","hash":"9ac6f477177264c26a46e8333b8456720a0444dc","modified":1617099513181},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-reward.styl","hash":"b1181c5f12a70b8bf710586fcb0d7959841ee512","modified":1617099513182},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1617099513182},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/post/post-gallery.styl","hash":"aa366d37389760c8595529b850f461569577a1c5","modified":1617099513180},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/index.styl","hash":"b457756758f0632767e8a560e3033059cbe4a67b","modified":1617099513187},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/math.styl","hash":"83c6588c51cd418336f4945813410a100ddfe2a4","modified":1617099513187},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/related-posts.styl","hash":"2c534d2b2dbc932ad65d335a720a7ba9612bac04","modified":1617099513187},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/gitalk.styl","hash":"7102f8e819b62cf7d121fd063dc663fd068feaa6","modified":1617099513183},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/search.styl","hash":"2896840ab8ac8ab2a7f76d18df893f290ac31625","modified":1617099513191},{"_id":"node_modules/hexo-theme-next/source/css/_common/components/third-party/utterances.styl","hash":"bf88d9c585d7b00463c46352402cfea415c29493","modified":1617099513192},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/github-banner.styl","hash":"cf194bea1c9e67fde871a04de3bc81df72c54277","modified":1617099513194},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/bookmark.styl","hash":"d6d60f02b5e9f89dbfce180b3884030898022664","modified":1617099513194},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/index.styl","hash":"f1778d2c56974b96dae429456d5c55be325c4946","modified":1617099513205},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-meta.styl","hash":"9a47c9045e443b8d20932f9c564a3a05fa4c6b51","modified":1617099513207},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/site-nav.styl","hash":"9c8abc55c9d94d384a245013951aba5ecca2f4fe","modified":1617099513208},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/header/menu.styl","hash":"392fd53a8dd4e3f33a853ebb24290a622300e0ff","modified":1617099513205},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/index.styl","hash":"d180871d4440090241fc988736c1f3a7efb4b1ba","modified":1617099513210},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"52fc98b1435129eb3edb9293ced9e507741f1350","modified":1617099513211},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"9950c3188a28e1c63b5498b7bdcd14b12ace3e28","modified":1617099513211},{"_id":"node_modules/hexo-theme-next/source/css/_schemes/Mist/_posts-expand.styl","hash":"b332868d76d9f1651efd65abfc0d3c9d699b1a45","modified":1617099513326},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"ab715dbf2b98bfeb5e7b7c43e92e5c02496cc2ea","modified":1617099513212},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"f7ff85fe6c4efb8ff036fab2c3277b7d8bed69a8","modified":1617099513213},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"6394340c28a21f6aa90e786f3bfe24fb26595653","modified":1617099513213},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"432e73bc4f99322af6af1852e0ea6e674919c31a","modified":1617099513213},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/site-state.styl","hash":"69eb1c282a8fd5dbab606cc09c34c5dc8e44e753","modified":1617099513214},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/footer/index.styl","hash":"f11dca93e334b68a29e792f7abe682993fab7568","modified":1617099513193},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"5b38ac4a0f1ade0e681aff0e3366c481d9cf3dcd","modified":1617099513211},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"83ee4993710fc8daa1c8dbfccd5d5091fd244c30","modified":1617099513217},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"393ff96234e4196b569d4b11496774eb78e147de","modified":1617099513317},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/highlight/index.styl","hash":"08e79881d58d01afab6dbed37ab4f52356564d7e","modified":1617099513312},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"15a5e273a8137550c93c8d2a60f9fcf86e04a89e","modified":1617099513317},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/label.styl","hash":"debee14539272fbe3835a7d3853af2230baa3501","modified":1617099513318},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/link-grid.styl","hash":"79ffcf92771cd48f4a686f9d8d7d610f39e9fc1f","modified":1617099513320},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/index.styl","hash":"cef4e779473daa3761709958243c6b8a57bbd814","modified":1617099513318},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/note.styl","hash":"f53e6c12bd4805888f696386d00668f23cd335e7","modified":1617099513321},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1617099513321},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/tabs.styl","hash":"50b00218e854200c4ec0573a841e226d49c45cba","modified":1617099513321},{"_id":"node_modules/hexo-theme-next/scripts/events/lib/injects.js","hash":"7b0ea8d28ced63977dc6539920eb044b1098adcb","modified":1617099513138},{"_id":"node_modules/hexo-theme-next/source/css/_common/scaffolding/tags/mermaid.styl","hash":"3c029a003e9bf747e1b9cc7c0c127f6028374876","modified":1617099513320},{"_id":"node_modules/hexo-theme-next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"fbdb63c6a8887d19b7137325ba7d6806f728139c","modified":1617099513212},{"_id":"public/sitemap.xml","hash":"9260a2b8a20698cbc8c6b5cdc7b7167f1b6b976b","modified":1617100789366},{"_id":"public/2021/03/30/hello-world/index.html","hash":"68b2650e3579bcde35c66cb62bb3fc703b80e057","modified":1617100789366},{"_id":"public/2021/03/26/2021-03-26-Terminal Tips/index.html","hash":"36f310f891fbf877c81efc64308b1c6838c6e634","modified":1617100789366},{"_id":"public/2021/03/26/2021-03-26-iOS开发Tips/index.html","hash":"3625e7e4b4486b3c235cb08d6785e01f33e69294","modified":1617100789366},{"_id":"public/2021/03/26/2021:03:26:Xcode 小技巧/index.html","hash":"5abcb94616f8747cb1b42a7a80e4b038a4512f7f","modified":1617100789366},{"_id":"public/2021/03/12/2021-03-12-代码质量总结/index.html","hash":"65ccf41417ea620d614a1dc240cf570a67ceed38","modified":1617100789366},{"_id":"public/2021/03/12/2019-12-03-App Store 隐私政策网址(URL)/index.html","hash":"3b58db2c246ea6fa1d92c7d1d6b05a55bb9e4103","modified":1617100789366},{"_id":"public/archives/2021/index.html","hash":"3adf7b9c927ec51583165c3fa280b1d85433ce9c","modified":1617100789366},{"_id":"public/archives/index.html","hash":"2b4937b502cd8816f7ff2a420961b5dcca7094a4","modified":1617100789366},{"_id":"public/archives/2021/03/index.html","hash":"3acf67d04bf8be8187f3a1c8e1d83d7aec164d0b","modified":1617100789366},{"_id":"public/2021/03/26/2021-03-26-macOS Tips/index.html","hash":"4dce41ac5dcda63892a16a699deee48b440de87a","modified":1617100789366},{"_id":"public/2021/03/26/2021-03-26-iOS零散知识点/index.html","hash":"85ce5948707e362af0240434e1990670c90257a3","modified":1617100789366},{"_id":"public/index.html","hash":"bff61b4cfe6342684e41e80b68de3c5d4d863c9f","modified":1617100789366},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1617100789366},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1617100789366},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1617100789366},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1617100789366},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1617100789366},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1617100789366},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1617100789366},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1617100789366},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1617100789366},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1617100789366},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1617100789366},{"_id":"public/images/logo-algolia-nebula-blue-full.svg","hash":"b85e274207b1392782476a0430feac98db1e7da0","modified":1617100789366},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1617100789366},{"_id":"public/js/motion.js","hash":"6d4bd07a6f8e1b4083119dca0acb5b289533b619","modified":1617100789366},{"_id":"public/js/utils.js","hash":"fcb84304fc3ba06f8c4f840fe1e0843339e0899d","modified":1617100789366},{"_id":"public/js/next-boot.js","hash":"c2a04055d8edec03dc74e1c45d83bd3b51467de0","modified":1617100789366},{"_id":"public/css/main.css","hash":"b87babae965da9918824a7d646b0babcc30c084b","modified":1617100789366}],"Category":[],"Data":[],"Page":[],"Post":[{"_content":"1. Catch 内尽量简洁\n\n   只做log和保护性操作（e.g. 回滚）\n\n2. assert中的condition一般在assert后会通过if进行过滤","source":"_posts/2021-03-12-代码质量总结.md","raw":"1. Catch 内尽量简洁\n\n   只做log和保护性操作（e.g. 回滚）\n\n2. assert中的condition一般在assert后会通过if进行过滤","slug":"2021-03-12-代码质量总结","published":1,"date":"2021-03-12T10:17:48.429Z","updated":"2021-03-12T10:21:49.263Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmvw22yj0000sgnjdj0b383z","content":"<ol>\n<li><p>Catch 内尽量简洁</p>\n<p>只做log和保护性操作（e.g. 回滚）</p>\n</li>\n<li><p>assert中的condition一般在assert后会通过if进行过滤</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<ol>\n<li><p>Catch 内尽量简洁</p>\n<p>只做log和保护性操作（e.g. 回滚）</p>\n</li>\n<li><p>assert中的condition一般在assert后会通过if进行过滤</p>\n</li>\n</ol>\n"},{"_content":"## 如何解决无法删除苹果开发者证书\n\n> I also faced the same issue today. The following steps fixed my issue.\n>\n> 1. Download https://developer.apple.com/certificationauthority/AppleWWDRCA.cer\n> 2. Double-click to install to Keychain.\n> 3. Then in Keychain, Select View -> \"Show Expired Certificates\" in Keychain app.\n> 4. It will list all the expired certifcates.\n> 5. Delete \"Apple Worldwide Developer Relations Certificate Authority certificates\" from \"login\" tab\n> 6. And also delete it from \"System\" tab.\n>\n> Now you are ready go.\n\n\n\n## **jenkins** 配置安全策略**admin**没有**Overall/Read**权限\n\n\n\n[https://blog.csdn.net/myNameIssls/article/details/70227838](https://blog.csdn.net/myNameIssls/article/details/70227838)\n\nhttps://blog.csdn.net/wangmuming/article/details/22925987\n\n\n\n\n\n","source":"_posts/2021-03-26-iOS开发Tips.md","raw":"## 如何解决无法删除苹果开发者证书\n\n> I also faced the same issue today. The following steps fixed my issue.\n>\n> 1. Download https://developer.apple.com/certificationauthority/AppleWWDRCA.cer\n> 2. Double-click to install to Keychain.\n> 3. Then in Keychain, Select View -> \"Show Expired Certificates\" in Keychain app.\n> 4. It will list all the expired certifcates.\n> 5. Delete \"Apple Worldwide Developer Relations Certificate Authority certificates\" from \"login\" tab\n> 6. And also delete it from \"System\" tab.\n>\n> Now you are ready go.\n\n\n\n## **jenkins** 配置安全策略**admin**没有**Overall/Read**权限\n\n\n\n[https://blog.csdn.net/myNameIssls/article/details/70227838](https://blog.csdn.net/myNameIssls/article/details/70227838)\n\nhttps://blog.csdn.net/wangmuming/article/details/22925987\n\n\n\n\n\n","slug":"2021-03-26-iOS开发Tips","published":1,"date":"2021-03-26T07:46:58.523Z","updated":"2021-03-26T10:13:55.623Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmvw22yn0001sgnj5hl3ecm4","content":"<h2 id=\"如何解决无法删除苹果开发者证书\"><a href=\"#如何解决无法删除苹果开发者证书\" class=\"headerlink\" title=\"如何解决无法删除苹果开发者证书\"></a>如何解决无法删除苹果开发者证书</h2><blockquote>\n<p>I also faced the same issue today. The following steps fixed my issue.</p>\n<ol>\n<li>Download <a href=\"https://developer.apple.com/certificationauthority/AppleWWDRCA.cer\">https://developer.apple.com/certificationauthority/AppleWWDRCA.cer</a></li>\n<li>Double-click to install to Keychain.</li>\n<li>Then in Keychain, Select View -&gt; “Show Expired Certificates” in Keychain app.</li>\n<li>It will list all the expired certifcates.</li>\n<li>Delete “Apple Worldwide Developer Relations Certificate Authority certificates” from “login” tab</li>\n<li>And also delete it from “System” tab.</li>\n</ol>\n<p>Now you are ready go.</p>\n</blockquote>\n<h2 id=\"jenkins-配置安全策略admin没有Overall-Read权限\"><a href=\"#jenkins-配置安全策略admin没有Overall-Read权限\" class=\"headerlink\" title=\"jenkins 配置安全策略admin没有Overall/Read权限\"></a><strong>jenkins</strong> 配置安全策略<strong>admin</strong>没有<strong>Overall/Read</strong>权限</h2><p><a href=\"https://blog.csdn.net/myNameIssls/article/details/70227838\">https://blog.csdn.net/myNameIssls/article/details/70227838</a></p>\n<p><a href=\"https://blog.csdn.net/wangmuming/article/details/22925987\">https://blog.csdn.net/wangmuming/article/details/22925987</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"如何解决无法删除苹果开发者证书\"><a href=\"#如何解决无法删除苹果开发者证书\" class=\"headerlink\" title=\"如何解决无法删除苹果开发者证书\"></a>如何解决无法删除苹果开发者证书</h2><blockquote>\n<p>I also faced the same issue today. The following steps fixed my issue.</p>\n<ol>\n<li>Download <a href=\"https://developer.apple.com/certificationauthority/AppleWWDRCA.cer\">https://developer.apple.com/certificationauthority/AppleWWDRCA.cer</a></li>\n<li>Double-click to install to Keychain.</li>\n<li>Then in Keychain, Select View -&gt; “Show Expired Certificates” in Keychain app.</li>\n<li>It will list all the expired certifcates.</li>\n<li>Delete “Apple Worldwide Developer Relations Certificate Authority certificates” from “login” tab</li>\n<li>And also delete it from “System” tab.</li>\n</ol>\n<p>Now you are ready go.</p>\n</blockquote>\n<h2 id=\"jenkins-配置安全策略admin没有Overall-Read权限\"><a href=\"#jenkins-配置安全策略admin没有Overall-Read权限\" class=\"headerlink\" title=\"jenkins 配置安全策略admin没有Overall/Read权限\"></a><strong>jenkins</strong> 配置安全策略<strong>admin</strong>没有<strong>Overall/Read</strong>权限</h2><p><a href=\"https://blog.csdn.net/myNameIssls/article/details/70227838\">https://blog.csdn.net/myNameIssls/article/details/70227838</a></p>\n<p><a href=\"https://blog.csdn.net/wangmuming/article/details/22925987\">https://blog.csdn.net/wangmuming/article/details/22925987</a></p>\n"},{"_content":"# iOS 零散知识点\n\n\n\n## RunLoop\n\n![](https://tva1.sinaimg.cn/large/008eGmZEly1goxcx5zeedj30u00fmq4q.jpg)\n\n\n\n## 有没有办法将参数的**NSDictionary**附加到**NSURLRequest**而不是手动创建字符串？\n\n[https://cloud.tencent.com/developer/ask/106457](https://cloud.tencent.com/developer/ask/106457)\n\n```objective-c\nNSURLComponents *url = [[NSURLComponents alloc] initWithURL:request.URL resolvingAgainstBaseURL:YES];\nNSMutableArray *queryItems = NSMutableArray.new;\n[params enumerateKeysAndObjectsUsingBlock:^(NSString *name, NSString *value, BOOL *stop) {\n   [queryItems addObject:[NSURLQueryItem queryItemWithName:name \n                          value:[value stringByAddingPercentEncodingWithAllowedCharacters:NSCharacterSet.URLQueryAllowedCharacterSet]\n                         ]\n   ];\n}];\nurl.queryItems = queryItems;\nrequest.URL = url.URL;\n```\n\n\n\n## 获取屏幕尺寸的两种方法\n\n```objective-c\n   CGSize screenSize = UIApplication.sharedApplication.delegate.window.bounds.size;\n```\n\n\n\n```objective-c\n   CGSize screenSize = UIScreen.mainScreen.bounds.size;\n```\n\n\n\n## Date+Extensions: 判断/获取时间戳/时间差\n\n```swift\nextension Date {\n   /**\n    *  是否为今天\n    */\n   func isToday() -> Bool{\n      let calendar = Calendar.current\n      let unit: Set<Calendar.Component> = [.day,.month,.year]\n      let nowComps = calendar.dateComponents(unit, from: Date())\n      let selfCmps = calendar.dateComponents(unit, from: self)\n      \n      return (selfCmps.year == nowComps.year) &&\n      (selfCmps.month == nowComps.month) &&\n      (selfCmps.day == nowComps.day)\n      \n   }\n\n   /**\n    *  是否为昨天\n    */\n   func isYesterday() -> Bool {\n      let calendar = Calendar.current\n      let unit: Set<Calendar.Component> = [.day,.month,.year]\n      let nowComps = calendar.dateComponents(unit, from: Date())\n      let selfCmps = calendar.dateComponents(unit, from: self)\n      if selfCmps.day == nil || nowComps.day == nil {\n         return false\n      }\n      let count = nowComps.day! - selfCmps.day!\n      return (selfCmps.year == nowComps.year) &&\n         (selfCmps.month == nowComps.month) &&\n         (count == 1)\n   }\n   \n   ///只有年月日的字符串\n   func dataWithYMD() -> String {\n      let fmt = DateFormatter()\n      fmt.dateFormat = \"yyyy-MM-dd\"\n      let selfStr = fmt.string(from: self)\n      let result = fmt.date(from: selfStr)!\n      print(result)\n      return selfStr\n   }\n   \n   ///获取当前年月日的时间戳\n   func timeIntervalWithYMDDate() -> TimeInterval {\n      let fmt = DateFormatter()\n      fmt.dateFormat = \"yyyy-MM-dd\"\n      let selfStr = fmt.string(from: self)\n      let result = fmt.date(from: selfStr)!\n      return result.timeIntervalSinceReferenceDate + 24 * 60 * 60\n   }\n   /**\n    *  是否为今年\n    */\n   func isThisYear() -> Bool {\n       let calendar = Calendar.current\n       let nowCmps = calendar.dateComponents([.year], from: Date())\n       let selfCmps = calendar.dateComponents([.year], from: self)\n       let result = nowCmps.year == selfCmps.year\n       return result\n   }\n   /**\n    *  获得与当前时间的差距\n    */\n   func deltaWithNow() -> DateComponents{\n      let calendar = Calendar.current\n      let cmps = calendar.dateComponents([.hour,.minute,.second], from: self, to: Date())\n      return cmps\n   }\n}\n```\n\n\n\n## 正则表达式\n\n### 基本语法\n\n特殊的符号\"^\"与\"$\",分别表示一个字符串的开始与结束。\n\n\"^dog\":表示以\"dog\"开头的字符串（\"dog product\",\"dog123\",\"dog\" ）\n\n类似于:- (BOOL)hasPrefix:(NSString *)aString;\n\n\"dog$\":表示以dog为结尾的字符串（\"Product Manager is a dog\", \"it is a dog\"）\n\n类似于:- (BOOL)hasSuffix:(NSString *)aString;\n\n\"^apple$\":表示以\"apple\"开头且以\"apple\"结尾的字符串\n\n\"banana\":表示任何包含\"banana\"的字符串\n\n类似于 iOS8的新方法- (BOOL)containsString:(NSString *)aString,搜索子串用的。\n\n\n\n\"*\",\"+\",\"?\":分别表示\"没有或更多([0, +∞)取整数)\",\"一个或更多([1,+∞)取整数)\",\"没有或一个([0,1]取整数)\"\n\n\"ab*\":表示一个\"a\"后面按跟着0个或者N个\"b\"(\"a\",\"ab\",\"abbbf\",这里并没有说是以b结尾)\n\n\"ab+\":表示一个\"a\"后面跟着至少一个\"b\"(\"ab\",\"abb\")\n\n\"ab?\":表示一个\"a\"后面跟着一个或者0个\"b\"(\"a\",\"abc\",\"af\")\n\n\"a?b+$\":表示字符串末尾有0个或者1个\"a\"或1个\"a\"跟着1个或者多个\"b\"(\"ab\",\"b\",\"bbb\",\"abbbb\",......)\n\n\n\n可以用大括号括起来（{}），表示一个重复的具体范围。例如\n\n\"ab{4}\":表示一个\"a\"跟着4个\"b\",\"abbbb\"\n\n'''ab{1,}':表示一个\"a\"跟着至少1个\"b\",(\"ab\",\"abb\",....)\n\n\"ab{3,4}\":表示一个\"a\"跟着3个或者4个\"b\"(\"abbb\",\"abbbb\")\n\n所以\"*\"等于{0,},\"+\"等于{1,},\"?\"等于{0,1}。\n\n注意：可以没有上线，但是不能没有下线{,5}为错误写法。\n\n\n\n\"|\"表示“或”操作\n\n\"a|b\":表示一个字符串中含有\"a\"或者\"b\"\n\n\"(a|bcd)ef\":表示\"aef\"或者\"bcdef\"\n\n\"(a|b)*c\":表示\"a\"或者\"b\"后面跟着0或者多个\"c\"(\"a\",\"b\",\"ac\",\"accccc\",\"bc\",\"bcccc\")\n\n方括号”[ ]“表示在括号内的众多字符中，选择1-N个括号内的符合语法的字符作为结果，例如\n\n\"[ab]\":表示一个字符串含有\"a\"或\"b\"，等价于\"a|b\"\n\n\"[a-d]\":表示一个字符串包含a-d中的一个，等价于\"a|b|c|d\"或者\"[abcd]\"\n\n\"^[a-zA-Z]\":表示以字母开头的字符串。\n\n\"[0-9]a\":表示\"a\"前面有一个数字。\n\n\"[a-zA-Z0-9]$\":表示一个字符串以字母或者数字结尾。\n\n\".\":表示除了\"\\n\",\"\\r\"之外的任意单个字符串。\n\n\"a.[a-z]\":表示一个\"a\"后面你跟着一个任意一个字符串和一个小写字母。\n\n\"^.{5}$\":表示任意一个长度是5的字符串。\n\n\n\n“\\num” 其中num是一个正整数。表示”\\num”之前的字符出现相同的个数，例如\n\n\"(.)\\1\":表示两个连续相同的字符。\n\n\"10\\{1,2\\}\":表示\"1\"后面跟着1个或者2个\"0\"(\"10\",\"100\")\n\n\"0\\{3,\\}\":表示至少有3个连续的\"0\"(\"000\",\"0000\")\n\n\n\n在方括号里用’^'表示不希望出现的字符，’^'应在方括号里的第一位。\n\n\"@[^a-zA-Z]@\":表示两个\"@\"之间不应该有字母。\n\n\n\n常用的正则：\n\n\"\\d\":匹配一个数字字符，等价于\"[0-9]\".\n\n\"\\D\":匹配一个非数字字符，等价于\"[^0-9]\"\n\n\"\\w\":匹配包括下划线的任何单词字符，等价于\"[a-zA-Z0-9_]\"\n\n\"\\W\":匹配任何非单词字符，等价于\"[^a-zA-Z0-9_]\"\n\n\n\niOS中书写正则表达式，碰到转义字符，多加一个“\\”,例如：\n\n全数字字符：@”^\\\\d\\+$”\n\n\n\n### 常用正则\n\n(1) 验证电话号码：（”^(\\\\d{3,4}-)\\\\d{7,8}$”） 　\n\n(2) 验证Email地址：(“^\\\\w+([-+.]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\.\\\\w+([-.]\\\\w+)*$”)； 　　\n\n(3) 整数或者小数：^[0-9]+([.]{0,1}[0-9]+){0,1}$ 　　\n\n(4) 只能输入数字：”^[0-9]*$”。 　　\n\n(5) 只能输入由26个英文字母组成的字符串：”^[A-Za-z]+$”。 \n\n(6) 验证是否含有^%&’,;=?$\\”等字符：”[^%&',;=?$\\x22]+”。 　\n\n(7) 只能输入汉字：”^[\\u4e00-\\u9fa5]{0,}$”。 　　\n\n(8) 验证一年的12个月：”^(0?[1-9]|1[0-2])$”正确格式为：”01″～”09″和”10″～”12″。 　　\n\n(9) 验证一个月的31天：”^((0?[1-9])|((1|2)[0-9])|30|31)$”正确格式为；”01″～”09″、”10″～”29″和“30”~“31”。 　　\n\n(10) 获取日期正则表达式：\\\\d{4}[年|\\-|\\.]\\\\d{\\1-\\12}[月|\\-|\\.]\\\\d{\\1-\\31}日? 注：可用来匹配大多数年月日信息。 　　\n\n(11) 匹配空白行的正则表达式：\\n\\s*\\r 注：可以用来删除空白行 \n\n(12) 匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$ 注：表单验证时很实用 \n\n(13) 匹配腾讯QQ号：[1-9][0-9]{4,14} 注：腾讯QQ号从10 000 开始 　　\n\n(14) 匹配中国邮政编码：[1-9]\\\\d{5}(?!\\d) 注：中国邮政编码为6位数字 　　\n\n(15) 匹配ip地址：((2[0-4]\\\\d|25[0-5]|[01]?\\\\d\\\\d?)\\.){3}(2[0-4]\\\\d|25[0-5]|[01]?\\\\d\\\\d?)。\n\n\n\n1. 验证用户名和密码：”^[a-zA-Z]\\w{5,15}$” 　　\n\n2. 验证电话号码：（”^([\\\\d{3,4}-)\\\\d{7,8}$] 　　eg：021-68686868 0511-6868686； 　　\n\n3. 验证手机号码：”^1[3|4|5|7|8][0-9]\\\\d{8}$”； 　　\n\n4. 验证身份证号（15位或18位数字）：”\\\\d{14}[[0-9],0-9xX]”\n\n5. 验证Email地址：(“^\\\\w+([-+.]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\.\\\\w+([-.]\\\\w+)*$”);\n\n6. 只能输入由数字和26个英文字母组成的字符串：(“^[A-Za-z0-9]+$”) ; \n\n7. 整数或者小数：^[0-9]+([.]{0,1}[0-9]+){0,1}$ 　　\n\n8. 只能输入数字：”^[0-9]*$”。 　　\n\n9. 只能输入n位的数字：”^\\\\d{n}$”。 　　\n\n10. 只能输入至少n位的数字：”^\\\\d{n,}$”。 　　\n\n11. 只能输入m~n位的数字：”^\\\\d{m,n}$”。 　　\n\n12. 只能输入零和非零开头的数字：”^(0|[1-9][0-9]*)$”。 　　\n\n13. 只能输入有两位小数的正实数：”^[0-9]+(.[0-9]{2})?$”。 　\n\n14. 只能输入有1~3位小数的正实数：”^[0-9]+(\\.[0-9]{1,3})?$”。 \n\n15. 只能输入非零的正整数：”^\\+?[1-9][0-9]*$”。 　　\n\n16. 只能输入非零的负整数：”^\\-[1-9][]0-9″*$。 　　\n\n17. 只能输入长度为3的字符：”^.{3}$”。 　　\n\n18. 只能输入由26个英文字母组成的字符串：”^[A-Za-z]+$”。 　\n\n19. 只能输入由26个大写英文字母组成的字符串：”^[A-Z]+$”。 \n\n20. 只能输入由26个小写英文字母组成的字符串：”^[a-z]+$”。 \n\n21. 验证是否含有^%&’,;=?$\\”等字符：”[^%&',;=?$\\x22]+”。 \n\n22. 只能输入汉字：”^[\\u4e00-\\u9fa5]{0,}$”。 　　\n\n23. 验证URL：”^http://([\\\\w-]+\\.)+[\\\\w-]+(/[\\\\w-./?%&=]*)?$”。 　　\n\n24. 验证一年的12个月：”^(0?[1-9]|1[0-2])$”正确格式为：”01″～”09″和”10″～”12″。 　　\n\n25. 验证一个月的31天：”^((0?[1-9])|((1|2)[0-9])|30|31)$”正确格式为；”01″～”09″、”10″～”29″和“30”~“31”。 　　\n\n26. 获取日期正则表达式：[\\\\d{4]}[年|\\-|\\.]\\\\d{\\1-\\12}[月|\\-|\\.]\\\\d{\\1-\\31}日? 　　评注：可用来匹配大多数年月日信息。 　　\n\n27. 匹配双字节字符(包括汉字在内)：[^\\x00-\\xff] 　　评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1） 　　\n\n28. 匹配空白行的正则表达式：\\n\\s*\\r 　　评注：可以用来删除空白行 　　\n\n29. 匹配HTML标记的正则表达式：<(\\S*?)[^>]*>.*?</>|<.*? /> 　　评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力 　　\n\n30. 匹配首尾空白字符的正则表达式：^\\s*|\\s*$ 　　评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式 \n\n31. 匹配网址URL的正则表达式：[a-zA-z]+://[^\\s]* 　　评注：网上流传的版本功能很有限，上面这个基本可以满足需求 　　\n\n32. 匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$ 　　评注：表单验证时很实用 　　\n\n33. 匹配腾讯QQ号：[1-9][0-9]{4,14} 　　评注：腾讯QQ号从10 000 开始 \n\n34. 匹配中国邮政编码：[1-9]\\\\d{5}(?!\\d) 　　评注：中国邮政编码为6位数字 　　\n\n35. 匹配ip地址：((2[0-4]\\\\d|25[0-5]|[01]?\\\\d\\\\d?)\\.){3}(2[0-4]\\\\d|25[0-5]|[01]?\\\\d\\\\d?)。 　　下面给出正则表达式的元字符（来自百度百科）\n\n\n\n### 简单应用\n\n- 验证是不是QQ号\n\n```objective-c\n   NSString *pattern = @\"[1-9][0-9]{4,14}\";\n   NSPredicate * pre = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", pattern];\n   BOOL isMatch = [pre evaluateWithObject:self.enterText.text];\n```\n\n\n\n## 网络状态码\n\n- 1XX 提示信息：请求正在处理中\n- 2XX 成功错误码：请求已被接受处理\n- 3XX 重定向：完成请求需要附加操作\n- 4XX 客户端错误：请求资源有误或者请求不合法，服务器无法处理\n- 5XX 服务器错误：服务器处理请求出错\n\n### 常见状态码\n\n- 200 OK\n- 302 Found 暂时重定向\n- 301 Move Permanently永久重定向\n- 304 Not Modified 没有内容更新，使用缓存\n- 400 Bad Request 客户端请求与语法错误\n- 403 Forbidden 服务器拒绝提供服务\n- 404 Not Found 请求资源不存在\n- 500 Internal Server Error服务器发生了不可预期的错误\n- 503 Server Unavailable 服务器当前不能处理客户端的请求，一段时间后可能恢复正常\n\n\n\n## HTTP 请求过程\n\n一个完整的HTTP请求过程如下：\n\n1. 用户在浏览器输入URL\n2. 域名解析（DNS的寻址）\n3. TCP三次握手\n4. 握手成功后建立TCP通道，发起HTTP请求\n5. 服务器响应HTTP请求，返回对应的响应报文\n6. 客户端开始解析渲染\n\n\n\n## URL 和 URI\n\n- URI：统一资源标识符\n- URL：统一资源定位符\n\nURI是一个用于标识互联网资源名称的字符串，最常见的形式是统一资源定位符（URL），经常指定为非正式的网址。更罕见的用法是统一资源名称（URN），其目的是通过提供一种途径。用于在特定的命名空间资源的标识，以补充网址。\n\n即URL和URN 都是 URI的子集，URI是一种抽象的概念，URL是URI的一种常见的具象表达形式。\n\n\n\n## 缩放图片避免内存消耗过大\n\n原有缩放方法如下\n\n```objective-c\n- (UIImage *)scaleImage:(UIImage *)image newSize:(CGSize)newSize {\n   UIGraphicsBeginImageContextWithOptions(newSize, NO, 0);\n   [image drawInRect:CGRectMake(0, 0, newSize.width, newSize.height)];\n   UIImage *newImage = UIGraphicsGetImageFromCurrentImageContext();\n   UIGraphicsEndImgeContext();\n   \n   return newImage;\n}\n```\n\n处理大分辨率图片时，往往容易出现OOM，原因是-[UIImage drawInRect:]在绘制时，先解码图片，再生成原始分辨率大小的bitmap，这是很耗内存的。解决方法是使用更低层的ImageIO接口，避免中间bitmap产生。\n\n```objective-c\n+ (UIImage *)scaledImageWithData:(NSData *)data withSize:(CGSize)size scale:(CGFloat)scale orientation:(UIImageOrientation)orientation {\n   CGFloat maxPixelSize = MAX(size.width, size.height);\n   CGImageSourceRef sourceRef = CGImageSourceCreateWithData((__bridge CFDataRef)data, nil);\n   NSDictionary *options = @{(__bridge id)kCGImageSourceThumnailFromImageAlways:(__bridge id)kCFBooleanTrue,\n   (__bridge id)kCGImageSourceThumbnailMaxPixelSize:[NSNumber numberWithFloat:maxPixelSize]};\n   \n   CGImageRef imageRef = CGImageSourceCreateThumnailAtIndex(sourceRef, 0, (__bridge CFDictionaryRef)options);\n   UIImage *resultImage = [UIImage imageWithCGImage:imageRef scale:scale orientation:orientation];\n   CGImageRelease(imageRef);\n   CFRelease(sourceRef);\n   \n   return resultImage;\n}\n```\n\n\n\n## LocationManager - Combine Version\n\n```swift\nimport CoreLocation\nimport MapKit\n\nfinal class LocationManager: NSObject, ObservableObject {\n  var locationManager = CLLocationManager()\n  @Published var region: MKCoordinateRegion\n  @Published var authorized = false\n\n  override init() {\n    let place = WondersOfTheWorld().places.randomElement() ?? WondersOfTheWorld().places[0]\n    region = MKCoordinateRegion(center: place.location.coordinate, latitudinalMeters: 1000, longitudinalMeters: 1000)\n    super.init()\n    locationManager.delegate = self\n    locationManager.desiredAccuracy = kCLLocationAccuracyBest\n    if locationManager.authorizationStatus == .authorizedWhenInUse {\n      authorized = true\n      locationManager.startUpdatingLocation()\n    }\n  }\n\n  func requestAuthorization() {\n    locationManager.requestWhenInUseAuthorization()\n  }\n}\n\n// MARK: - CLLocationManagerDelegate\nextension LocationManager: CLLocationManagerDelegate {\n  func locationManagerDidChangeAuthorization(_ manager: CLLocationManager) {\n    if locationManager.authorizationStatus == .authorizedWhenInUse {\n      authorized = true\n      locationManager.startUpdatingLocation()\n    }\n  }\n\n  func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) {\n    guard let latest = locations.first else {\n      return\n    }\n    region = MKCoordinateRegion.init(center: latest.coordinate, latitudinalMeters: 1000, longitudinalMeters: 1000)\n    print(\"Region: \\(region)\")\n  }\n\n  func locationManager(_ manager: CLLocationManager, didFailWithError error: Error) {\n    guard let clError = error as? CLError else {\n      return\n    }\n    switch clError {\n    case CLError.denied:\n      print(\"Access denied\")\n    default:\n      print(\"LocationManager didFailWithError: \\(clError.localizedDescription)\")\n    }\n  }\n}\n```\n\n\n\n## 断言\n\n>  使用preconditionFailure（_：file：line :)或fatalError（_：file：line :)而不是assertionFailure（_：file：line :)可以使您的应用在release配置下崩溃。\n\nRef: https://www.jianshu.com/p/91213ee3cecf\n\n\n\n## 字符串国际化中，格式化字符串多参数位置调整\n\ne.g.\n\n/* Message in alert dialog when something fails */\n\n\"%@ Error! %@ failed!\" = \"%2$@ blah blah, %1$@ blah!\";\n\n上例中，两个参数在翻译后的字符串中，前后位置调换。\n\n\n\n## 使用 xib 时的 AutolLayout 和 frame 设置\n\n开起AutoLayout后\n\n方法调用顺序：viewDidLoad -> viewWillLayoutSubviews（这个函数在执行时加载文件对应的xib中设置的约束）-> viewDidLayoutSubviews\n\n因此在viewDidLoad和viewWillLayoutSubviews中设置frame都是无效的，frame会在加载layout约束时重新计算。\n\n想要更改frame有两个方法：\n\n1. 在viewDidLayoutSubviews中设置frame；\n2. 将约束control-drag到代码中，通过IBOutlet设置对应属性。通过这个方式可以在viewDidLoad和viewWillLayoutSubviews中进行设置。\n\n>  Tip：如果要对frame进行修改并产生动画，需要在动画block内的代码块最后调用[被修改frame的view.super layoutIfNeeded];\n\n\n\n## 用 NSKeyedArchiver 和 NSKeyedUnarchiver 实现多层数据结构的完全复制\n\n### 示例：\n\n```objective-c\nNSMutableString *str1 = @“1”;\nNSMutableString *str2 = @“2”;\n\nNSMutabelArray *arr1 = [NSMutableArray arrayWithObjects:str1, str2, nil];\nNSMutableArray *arr2 = [NSMutableArray arrayWithObjects:str1, str2, arr1, nil];\n\nNSMutableArray *arr3 = [[NSMutableArray alloc] initWithArray:arr2 copyItems:YES];\n\nNSMutableString *str3 = [arr1 objectAtIndex:0];\n[str3 appendString:@“1”];\n\nNSLog(@\"arrM2--%@\",arrM2);\nNSLog(@\"arrM3--%@\",arrM3);\n```\n\n### 结果：\n\n```\n2017-03-14 00:55:57.604 深复制和完全复制[6080:438490] arrM2--(\n    11,\n    2,\n        (\n        11,\n        2\n    )\n)\n2017-03-14 00:55:57.606 深复制和完全复制[6080:438490] arrM3--(\n    1,\n    2,\n        (\n        11,\n        2\n    )\n)\n```\n\n### 分析：\n\n外层数据深拷贝，内层数据依然是浅拷贝（只拷贝指针）。\n\n### 修复：\n\n```objective-c\nNSMutableArray *arr3 = [NSKeyedUnarchiver unarchiveObjectWithData:[NSKeyedArchiver archivedDataWithRootObject:arr2]];\n```\n\n\n\n## ARC - MRC 引用计数模式设置\n\nProject设置 -> Build Settings -> Apple LLVM x.x - Language - Objective C -> Weak References in Manual Retain Release: \n\nNO: MRC\n\nYES: ARC\n\n\n\n## tintColorDidChange\n\n当弹出一个alert或者action sheet时，iOS7会自动将后面视图的tint color变暗。此时，我们可以在自定义视图中重写tintColorDidChange方法来执行我们想要的操作。\n\n\n\n## UIView 不能接受事件处理的情况\n\n1. alpha < 0.01\n2. userInteractionEnable = NO\n3. hidden = YES\n\n\n\n## 如何重写自己的 hash 方法\n\nhash方法是NSObject中声明的，默认实现是返回对象的内存地址。\n\n那么hash方法的最佳实践到底是什么呢?\n 大神[Mattt Thompson](https://link.jianshu.com/?t=http://nshipster.com/authors/mattt-thompson/)在[Equality](https://link.jianshu.com/?t=http://nshipster.com/equality/)中给出的结论就是\n\nIn reality, a simple XOR over the hash values of critical properties is sufficient 99% of the time(对关键属性的hash值进行位异或运算作为hash值)\n\n比如对于Person类的hash方法实现如下\n\n```objective-c\n- (NSUInteger)hash {\n  \n   return [self.name hash] ^ [self.birthday hash];\n}\n```\n\n\n\n## xib 动画\n\nXib中的控件，通过约束更改尺寸/位置等属性后，需要调用控件的父视图的layoutIfNeed方法。\n\n如果是使用UIView的animateWith…动画方法，需要在动画block内部的最后调用该方法。\n\n\n\n## ios 开发 loaded the \"ViewController\" nib but the view outlet was not set.'\n\n遇到loaded the \"ViewController\" nib but the view outlet was not set.'时，解决办法为：http://blog.sina.com.cn/s/blog_8f38d3410101a1rb.html，需要将Files's Owner中的view变量做一下关联。\n\n但是，有时候做关联时并没有看到view变量，这时，需要设置一下Files's Owner的class，之后就可以做关联了。详情参考：https://stackoverflow.com/questions/10750082/loaded-the-controller-nib-but-the-view-outlet-was-not-set\n\n\n\n## How to avoid clipboard warning as possibly as you can\n\nAlways check **UIPasteboard.hasStrings** before reading **UIPasteboard.string**, you can **potentially** save one clipboard warning.\n\n——from ying Chong\n\n\n\n## 怎么使用 GeometryReader 传入的 GeometryProxy 类型的参数，又不会因为在视图层级中加入 GeometryReader 导致占用了全部的可用屏幕空间，导致布局出现错误。\n\n![](https://tva1.sinaimg.cn/large/008eGmZEly1goxgunt0cmj30ay07taa2.jpg)\n\n```swift\nstruct Graph: View {\n  @State private var width = UIScreen.main.bounds.width // just initial constant\n  var body: some View {\n      HStack(spacing: 0) {\n        Color.red.frame(width: width / 3, height: 80)\n        Color.blue.frame(width: width / 3, height: 120)\n        Color.green.frame(width: width / 3, height: 180)\n      }.background(GeometryReader { gp -> Color in\n        let frame = gp.frame(in: .local)\n        DispatchQueue.main.async {\n            self.width = frame.size.width // << dynamic, on layout !!\n        }\n        return Color.clear\n      })\n  }\n}\n```\n\n\n\n\n\n## 收到键盘通知后自动调整 scrollview 的 contentOffset\n\n```objective-c\n- (void)keyboardWillShow:(NSNotification *)notification\n{\n    NSDictionary *info = [notification userInfo];\n    CGFloat kbH = [[info objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue].size.height;\n    NSIndexPath *indexPath = [NSIndexPath indexPathForRow:self.classes.count inSection:0];\n    CGRect p = [self.baseTableView rectForRowAtIndexPath:indexPath];\n    CGRect rectInSelfview = [self.baseTableView convertRect:p toView:self.view];\n    CGFloat cellBottomY = rectInSelfview.origin.y + rectInSelfview.size.height;\n    \n    if (cellBottomY < kbH) {\n        \n        return;\n    }\n    \n    [UIView animateWithDuration:0.2 animations:^{\n        \n        self.baseTableView.contentOffset = CGPointMake(0, cellBottomY - (self.baseTableView.height - kbH));\n    }];\n}\n```\n\n\n\n# 避免锁死Tip\n\n1. dispatch_once 中不要有同步到主线程执行的方法。\n\n2. CTTelephonyNetworkInfo 最好在 +load方法或者 main 方法之前的其他时机提前初始化一个共享的实例，避免踩到子线程懒加载时候要求主线程同步响应的坑。\n\n3. 有可能存在锁竞争的代码尽量不在主线程同步执行。\n\n4. 如果主线程与子线程不可避免的存在竞争时，加锁的粒度要尽量小，操作要尽量轻。、\n\n5. 数据库读写，文件压缩/解压缩等磁盘 IO 行为不放在主线程执行。\n\n6. 如果存在主线程将任务同步到串行队列中执行的场景，确保这些任务不与子线程可能存在的耗时操作复用同一个串行队列。\n\n7. 对于一些启动阶段非必要同步加载并且有比较密集磁盘 IO 行为的 SDK，如各种支付分享等第三方 SDK 都可以延迟，错开加载。\n\n8. NSUserDefaults 底层实现中存在直接或者间接的跨进程通信，在主线程同步调用容易发生卡死。➡️重度使用参考MMKV，轻度使用参考firebase自己写歌轻量的UserDefaults类\n\n9. [[UIApplication sharedApplication] openURL]接口，内部实现也存在同步的跨进程通信。➡️iOS10 及以上的系统版本使用[[UIApplication sharedApplication] openURL:options:completionHandler:]这个接口替换，此接口可以异步调起，不会造成卡死。","source":"_posts/2021-03-26-iOS零散知识点.md","raw":"# iOS 零散知识点\n\n\n\n## RunLoop\n\n![](https://tva1.sinaimg.cn/large/008eGmZEly1goxcx5zeedj30u00fmq4q.jpg)\n\n\n\n## 有没有办法将参数的**NSDictionary**附加到**NSURLRequest**而不是手动创建字符串？\n\n[https://cloud.tencent.com/developer/ask/106457](https://cloud.tencent.com/developer/ask/106457)\n\n```objective-c\nNSURLComponents *url = [[NSURLComponents alloc] initWithURL:request.URL resolvingAgainstBaseURL:YES];\nNSMutableArray *queryItems = NSMutableArray.new;\n[params enumerateKeysAndObjectsUsingBlock:^(NSString *name, NSString *value, BOOL *stop) {\n   [queryItems addObject:[NSURLQueryItem queryItemWithName:name \n                          value:[value stringByAddingPercentEncodingWithAllowedCharacters:NSCharacterSet.URLQueryAllowedCharacterSet]\n                         ]\n   ];\n}];\nurl.queryItems = queryItems;\nrequest.URL = url.URL;\n```\n\n\n\n## 获取屏幕尺寸的两种方法\n\n```objective-c\n   CGSize screenSize = UIApplication.sharedApplication.delegate.window.bounds.size;\n```\n\n\n\n```objective-c\n   CGSize screenSize = UIScreen.mainScreen.bounds.size;\n```\n\n\n\n## Date+Extensions: 判断/获取时间戳/时间差\n\n```swift\nextension Date {\n   /**\n    *  是否为今天\n    */\n   func isToday() -> Bool{\n      let calendar = Calendar.current\n      let unit: Set<Calendar.Component> = [.day,.month,.year]\n      let nowComps = calendar.dateComponents(unit, from: Date())\n      let selfCmps = calendar.dateComponents(unit, from: self)\n      \n      return (selfCmps.year == nowComps.year) &&\n      (selfCmps.month == nowComps.month) &&\n      (selfCmps.day == nowComps.day)\n      \n   }\n\n   /**\n    *  是否为昨天\n    */\n   func isYesterday() -> Bool {\n      let calendar = Calendar.current\n      let unit: Set<Calendar.Component> = [.day,.month,.year]\n      let nowComps = calendar.dateComponents(unit, from: Date())\n      let selfCmps = calendar.dateComponents(unit, from: self)\n      if selfCmps.day == nil || nowComps.day == nil {\n         return false\n      }\n      let count = nowComps.day! - selfCmps.day!\n      return (selfCmps.year == nowComps.year) &&\n         (selfCmps.month == nowComps.month) &&\n         (count == 1)\n   }\n   \n   ///只有年月日的字符串\n   func dataWithYMD() -> String {\n      let fmt = DateFormatter()\n      fmt.dateFormat = \"yyyy-MM-dd\"\n      let selfStr = fmt.string(from: self)\n      let result = fmt.date(from: selfStr)!\n      print(result)\n      return selfStr\n   }\n   \n   ///获取当前年月日的时间戳\n   func timeIntervalWithYMDDate() -> TimeInterval {\n      let fmt = DateFormatter()\n      fmt.dateFormat = \"yyyy-MM-dd\"\n      let selfStr = fmt.string(from: self)\n      let result = fmt.date(from: selfStr)!\n      return result.timeIntervalSinceReferenceDate + 24 * 60 * 60\n   }\n   /**\n    *  是否为今年\n    */\n   func isThisYear() -> Bool {\n       let calendar = Calendar.current\n       let nowCmps = calendar.dateComponents([.year], from: Date())\n       let selfCmps = calendar.dateComponents([.year], from: self)\n       let result = nowCmps.year == selfCmps.year\n       return result\n   }\n   /**\n    *  获得与当前时间的差距\n    */\n   func deltaWithNow() -> DateComponents{\n      let calendar = Calendar.current\n      let cmps = calendar.dateComponents([.hour,.minute,.second], from: self, to: Date())\n      return cmps\n   }\n}\n```\n\n\n\n## 正则表达式\n\n### 基本语法\n\n特殊的符号\"^\"与\"$\",分别表示一个字符串的开始与结束。\n\n\"^dog\":表示以\"dog\"开头的字符串（\"dog product\",\"dog123\",\"dog\" ）\n\n类似于:- (BOOL)hasPrefix:(NSString *)aString;\n\n\"dog$\":表示以dog为结尾的字符串（\"Product Manager is a dog\", \"it is a dog\"）\n\n类似于:- (BOOL)hasSuffix:(NSString *)aString;\n\n\"^apple$\":表示以\"apple\"开头且以\"apple\"结尾的字符串\n\n\"banana\":表示任何包含\"banana\"的字符串\n\n类似于 iOS8的新方法- (BOOL)containsString:(NSString *)aString,搜索子串用的。\n\n\n\n\"*\",\"+\",\"?\":分别表示\"没有或更多([0, +∞)取整数)\",\"一个或更多([1,+∞)取整数)\",\"没有或一个([0,1]取整数)\"\n\n\"ab*\":表示一个\"a\"后面按跟着0个或者N个\"b\"(\"a\",\"ab\",\"abbbf\",这里并没有说是以b结尾)\n\n\"ab+\":表示一个\"a\"后面跟着至少一个\"b\"(\"ab\",\"abb\")\n\n\"ab?\":表示一个\"a\"后面跟着一个或者0个\"b\"(\"a\",\"abc\",\"af\")\n\n\"a?b+$\":表示字符串末尾有0个或者1个\"a\"或1个\"a\"跟着1个或者多个\"b\"(\"ab\",\"b\",\"bbb\",\"abbbb\",......)\n\n\n\n可以用大括号括起来（{}），表示一个重复的具体范围。例如\n\n\"ab{4}\":表示一个\"a\"跟着4个\"b\",\"abbbb\"\n\n'''ab{1,}':表示一个\"a\"跟着至少1个\"b\",(\"ab\",\"abb\",....)\n\n\"ab{3,4}\":表示一个\"a\"跟着3个或者4个\"b\"(\"abbb\",\"abbbb\")\n\n所以\"*\"等于{0,},\"+\"等于{1,},\"?\"等于{0,1}。\n\n注意：可以没有上线，但是不能没有下线{,5}为错误写法。\n\n\n\n\"|\"表示“或”操作\n\n\"a|b\":表示一个字符串中含有\"a\"或者\"b\"\n\n\"(a|bcd)ef\":表示\"aef\"或者\"bcdef\"\n\n\"(a|b)*c\":表示\"a\"或者\"b\"后面跟着0或者多个\"c\"(\"a\",\"b\",\"ac\",\"accccc\",\"bc\",\"bcccc\")\n\n方括号”[ ]“表示在括号内的众多字符中，选择1-N个括号内的符合语法的字符作为结果，例如\n\n\"[ab]\":表示一个字符串含有\"a\"或\"b\"，等价于\"a|b\"\n\n\"[a-d]\":表示一个字符串包含a-d中的一个，等价于\"a|b|c|d\"或者\"[abcd]\"\n\n\"^[a-zA-Z]\":表示以字母开头的字符串。\n\n\"[0-9]a\":表示\"a\"前面有一个数字。\n\n\"[a-zA-Z0-9]$\":表示一个字符串以字母或者数字结尾。\n\n\".\":表示除了\"\\n\",\"\\r\"之外的任意单个字符串。\n\n\"a.[a-z]\":表示一个\"a\"后面你跟着一个任意一个字符串和一个小写字母。\n\n\"^.{5}$\":表示任意一个长度是5的字符串。\n\n\n\n“\\num” 其中num是一个正整数。表示”\\num”之前的字符出现相同的个数，例如\n\n\"(.)\\1\":表示两个连续相同的字符。\n\n\"10\\{1,2\\}\":表示\"1\"后面跟着1个或者2个\"0\"(\"10\",\"100\")\n\n\"0\\{3,\\}\":表示至少有3个连续的\"0\"(\"000\",\"0000\")\n\n\n\n在方括号里用’^'表示不希望出现的字符，’^'应在方括号里的第一位。\n\n\"@[^a-zA-Z]@\":表示两个\"@\"之间不应该有字母。\n\n\n\n常用的正则：\n\n\"\\d\":匹配一个数字字符，等价于\"[0-9]\".\n\n\"\\D\":匹配一个非数字字符，等价于\"[^0-9]\"\n\n\"\\w\":匹配包括下划线的任何单词字符，等价于\"[a-zA-Z0-9_]\"\n\n\"\\W\":匹配任何非单词字符，等价于\"[^a-zA-Z0-9_]\"\n\n\n\niOS中书写正则表达式，碰到转义字符，多加一个“\\”,例如：\n\n全数字字符：@”^\\\\d\\+$”\n\n\n\n### 常用正则\n\n(1) 验证电话号码：（”^(\\\\d{3,4}-)\\\\d{7,8}$”） 　\n\n(2) 验证Email地址：(“^\\\\w+([-+.]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\.\\\\w+([-.]\\\\w+)*$”)； 　　\n\n(3) 整数或者小数：^[0-9]+([.]{0,1}[0-9]+){0,1}$ 　　\n\n(4) 只能输入数字：”^[0-9]*$”。 　　\n\n(5) 只能输入由26个英文字母组成的字符串：”^[A-Za-z]+$”。 \n\n(6) 验证是否含有^%&’,;=?$\\”等字符：”[^%&',;=?$\\x22]+”。 　\n\n(7) 只能输入汉字：”^[\\u4e00-\\u9fa5]{0,}$”。 　　\n\n(8) 验证一年的12个月：”^(0?[1-9]|1[0-2])$”正确格式为：”01″～”09″和”10″～”12″。 　　\n\n(9) 验证一个月的31天：”^((0?[1-9])|((1|2)[0-9])|30|31)$”正确格式为；”01″～”09″、”10″～”29″和“30”~“31”。 　　\n\n(10) 获取日期正则表达式：\\\\d{4}[年|\\-|\\.]\\\\d{\\1-\\12}[月|\\-|\\.]\\\\d{\\1-\\31}日? 注：可用来匹配大多数年月日信息。 　　\n\n(11) 匹配空白行的正则表达式：\\n\\s*\\r 注：可以用来删除空白行 \n\n(12) 匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$ 注：表单验证时很实用 \n\n(13) 匹配腾讯QQ号：[1-9][0-9]{4,14} 注：腾讯QQ号从10 000 开始 　　\n\n(14) 匹配中国邮政编码：[1-9]\\\\d{5}(?!\\d) 注：中国邮政编码为6位数字 　　\n\n(15) 匹配ip地址：((2[0-4]\\\\d|25[0-5]|[01]?\\\\d\\\\d?)\\.){3}(2[0-4]\\\\d|25[0-5]|[01]?\\\\d\\\\d?)。\n\n\n\n1. 验证用户名和密码：”^[a-zA-Z]\\w{5,15}$” 　　\n\n2. 验证电话号码：（”^([\\\\d{3,4}-)\\\\d{7,8}$] 　　eg：021-68686868 0511-6868686； 　　\n\n3. 验证手机号码：”^1[3|4|5|7|8][0-9]\\\\d{8}$”； 　　\n\n4. 验证身份证号（15位或18位数字）：”\\\\d{14}[[0-9],0-9xX]”\n\n5. 验证Email地址：(“^\\\\w+([-+.]\\\\w+)*@\\\\w+([-.]\\\\w+)*\\.\\\\w+([-.]\\\\w+)*$”);\n\n6. 只能输入由数字和26个英文字母组成的字符串：(“^[A-Za-z0-9]+$”) ; \n\n7. 整数或者小数：^[0-9]+([.]{0,1}[0-9]+){0,1}$ 　　\n\n8. 只能输入数字：”^[0-9]*$”。 　　\n\n9. 只能输入n位的数字：”^\\\\d{n}$”。 　　\n\n10. 只能输入至少n位的数字：”^\\\\d{n,}$”。 　　\n\n11. 只能输入m~n位的数字：”^\\\\d{m,n}$”。 　　\n\n12. 只能输入零和非零开头的数字：”^(0|[1-9][0-9]*)$”。 　　\n\n13. 只能输入有两位小数的正实数：”^[0-9]+(.[0-9]{2})?$”。 　\n\n14. 只能输入有1~3位小数的正实数：”^[0-9]+(\\.[0-9]{1,3})?$”。 \n\n15. 只能输入非零的正整数：”^\\+?[1-9][0-9]*$”。 　　\n\n16. 只能输入非零的负整数：”^\\-[1-9][]0-9″*$。 　　\n\n17. 只能输入长度为3的字符：”^.{3}$”。 　　\n\n18. 只能输入由26个英文字母组成的字符串：”^[A-Za-z]+$”。 　\n\n19. 只能输入由26个大写英文字母组成的字符串：”^[A-Z]+$”。 \n\n20. 只能输入由26个小写英文字母组成的字符串：”^[a-z]+$”。 \n\n21. 验证是否含有^%&’,;=?$\\”等字符：”[^%&',;=?$\\x22]+”。 \n\n22. 只能输入汉字：”^[\\u4e00-\\u9fa5]{0,}$”。 　　\n\n23. 验证URL：”^http://([\\\\w-]+\\.)+[\\\\w-]+(/[\\\\w-./?%&=]*)?$”。 　　\n\n24. 验证一年的12个月：”^(0?[1-9]|1[0-2])$”正确格式为：”01″～”09″和”10″～”12″。 　　\n\n25. 验证一个月的31天：”^((0?[1-9])|((1|2)[0-9])|30|31)$”正确格式为；”01″～”09″、”10″～”29″和“30”~“31”。 　　\n\n26. 获取日期正则表达式：[\\\\d{4]}[年|\\-|\\.]\\\\d{\\1-\\12}[月|\\-|\\.]\\\\d{\\1-\\31}日? 　　评注：可用来匹配大多数年月日信息。 　　\n\n27. 匹配双字节字符(包括汉字在内)：[^\\x00-\\xff] 　　评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1） 　　\n\n28. 匹配空白行的正则表达式：\\n\\s*\\r 　　评注：可以用来删除空白行 　　\n\n29. 匹配HTML标记的正则表达式：<(\\S*?)[^>]*>.*?</>|<.*? /> 　　评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力 　　\n\n30. 匹配首尾空白字符的正则表达式：^\\s*|\\s*$ 　　评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式 \n\n31. 匹配网址URL的正则表达式：[a-zA-z]+://[^\\s]* 　　评注：网上流传的版本功能很有限，上面这个基本可以满足需求 　　\n\n32. 匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$ 　　评注：表单验证时很实用 　　\n\n33. 匹配腾讯QQ号：[1-9][0-9]{4,14} 　　评注：腾讯QQ号从10 000 开始 \n\n34. 匹配中国邮政编码：[1-9]\\\\d{5}(?!\\d) 　　评注：中国邮政编码为6位数字 　　\n\n35. 匹配ip地址：((2[0-4]\\\\d|25[0-5]|[01]?\\\\d\\\\d?)\\.){3}(2[0-4]\\\\d|25[0-5]|[01]?\\\\d\\\\d?)。 　　下面给出正则表达式的元字符（来自百度百科）\n\n\n\n### 简单应用\n\n- 验证是不是QQ号\n\n```objective-c\n   NSString *pattern = @\"[1-9][0-9]{4,14}\";\n   NSPredicate * pre = [NSPredicate predicateWithFormat:@\"SELF MATCHES %@\", pattern];\n   BOOL isMatch = [pre evaluateWithObject:self.enterText.text];\n```\n\n\n\n## 网络状态码\n\n- 1XX 提示信息：请求正在处理中\n- 2XX 成功错误码：请求已被接受处理\n- 3XX 重定向：完成请求需要附加操作\n- 4XX 客户端错误：请求资源有误或者请求不合法，服务器无法处理\n- 5XX 服务器错误：服务器处理请求出错\n\n### 常见状态码\n\n- 200 OK\n- 302 Found 暂时重定向\n- 301 Move Permanently永久重定向\n- 304 Not Modified 没有内容更新，使用缓存\n- 400 Bad Request 客户端请求与语法错误\n- 403 Forbidden 服务器拒绝提供服务\n- 404 Not Found 请求资源不存在\n- 500 Internal Server Error服务器发生了不可预期的错误\n- 503 Server Unavailable 服务器当前不能处理客户端的请求，一段时间后可能恢复正常\n\n\n\n## HTTP 请求过程\n\n一个完整的HTTP请求过程如下：\n\n1. 用户在浏览器输入URL\n2. 域名解析（DNS的寻址）\n3. TCP三次握手\n4. 握手成功后建立TCP通道，发起HTTP请求\n5. 服务器响应HTTP请求，返回对应的响应报文\n6. 客户端开始解析渲染\n\n\n\n## URL 和 URI\n\n- URI：统一资源标识符\n- URL：统一资源定位符\n\nURI是一个用于标识互联网资源名称的字符串，最常见的形式是统一资源定位符（URL），经常指定为非正式的网址。更罕见的用法是统一资源名称（URN），其目的是通过提供一种途径。用于在特定的命名空间资源的标识，以补充网址。\n\n即URL和URN 都是 URI的子集，URI是一种抽象的概念，URL是URI的一种常见的具象表达形式。\n\n\n\n## 缩放图片避免内存消耗过大\n\n原有缩放方法如下\n\n```objective-c\n- (UIImage *)scaleImage:(UIImage *)image newSize:(CGSize)newSize {\n   UIGraphicsBeginImageContextWithOptions(newSize, NO, 0);\n   [image drawInRect:CGRectMake(0, 0, newSize.width, newSize.height)];\n   UIImage *newImage = UIGraphicsGetImageFromCurrentImageContext();\n   UIGraphicsEndImgeContext();\n   \n   return newImage;\n}\n```\n\n处理大分辨率图片时，往往容易出现OOM，原因是-[UIImage drawInRect:]在绘制时，先解码图片，再生成原始分辨率大小的bitmap，这是很耗内存的。解决方法是使用更低层的ImageIO接口，避免中间bitmap产生。\n\n```objective-c\n+ (UIImage *)scaledImageWithData:(NSData *)data withSize:(CGSize)size scale:(CGFloat)scale orientation:(UIImageOrientation)orientation {\n   CGFloat maxPixelSize = MAX(size.width, size.height);\n   CGImageSourceRef sourceRef = CGImageSourceCreateWithData((__bridge CFDataRef)data, nil);\n   NSDictionary *options = @{(__bridge id)kCGImageSourceThumnailFromImageAlways:(__bridge id)kCFBooleanTrue,\n   (__bridge id)kCGImageSourceThumbnailMaxPixelSize:[NSNumber numberWithFloat:maxPixelSize]};\n   \n   CGImageRef imageRef = CGImageSourceCreateThumnailAtIndex(sourceRef, 0, (__bridge CFDictionaryRef)options);\n   UIImage *resultImage = [UIImage imageWithCGImage:imageRef scale:scale orientation:orientation];\n   CGImageRelease(imageRef);\n   CFRelease(sourceRef);\n   \n   return resultImage;\n}\n```\n\n\n\n## LocationManager - Combine Version\n\n```swift\nimport CoreLocation\nimport MapKit\n\nfinal class LocationManager: NSObject, ObservableObject {\n  var locationManager = CLLocationManager()\n  @Published var region: MKCoordinateRegion\n  @Published var authorized = false\n\n  override init() {\n    let place = WondersOfTheWorld().places.randomElement() ?? WondersOfTheWorld().places[0]\n    region = MKCoordinateRegion(center: place.location.coordinate, latitudinalMeters: 1000, longitudinalMeters: 1000)\n    super.init()\n    locationManager.delegate = self\n    locationManager.desiredAccuracy = kCLLocationAccuracyBest\n    if locationManager.authorizationStatus == .authorizedWhenInUse {\n      authorized = true\n      locationManager.startUpdatingLocation()\n    }\n  }\n\n  func requestAuthorization() {\n    locationManager.requestWhenInUseAuthorization()\n  }\n}\n\n// MARK: - CLLocationManagerDelegate\nextension LocationManager: CLLocationManagerDelegate {\n  func locationManagerDidChangeAuthorization(_ manager: CLLocationManager) {\n    if locationManager.authorizationStatus == .authorizedWhenInUse {\n      authorized = true\n      locationManager.startUpdatingLocation()\n    }\n  }\n\n  func locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) {\n    guard let latest = locations.first else {\n      return\n    }\n    region = MKCoordinateRegion.init(center: latest.coordinate, latitudinalMeters: 1000, longitudinalMeters: 1000)\n    print(\"Region: \\(region)\")\n  }\n\n  func locationManager(_ manager: CLLocationManager, didFailWithError error: Error) {\n    guard let clError = error as? CLError else {\n      return\n    }\n    switch clError {\n    case CLError.denied:\n      print(\"Access denied\")\n    default:\n      print(\"LocationManager didFailWithError: \\(clError.localizedDescription)\")\n    }\n  }\n}\n```\n\n\n\n## 断言\n\n>  使用preconditionFailure（_：file：line :)或fatalError（_：file：line :)而不是assertionFailure（_：file：line :)可以使您的应用在release配置下崩溃。\n\nRef: https://www.jianshu.com/p/91213ee3cecf\n\n\n\n## 字符串国际化中，格式化字符串多参数位置调整\n\ne.g.\n\n/* Message in alert dialog when something fails */\n\n\"%@ Error! %@ failed!\" = \"%2$@ blah blah, %1$@ blah!\";\n\n上例中，两个参数在翻译后的字符串中，前后位置调换。\n\n\n\n## 使用 xib 时的 AutolLayout 和 frame 设置\n\n开起AutoLayout后\n\n方法调用顺序：viewDidLoad -> viewWillLayoutSubviews（这个函数在执行时加载文件对应的xib中设置的约束）-> viewDidLayoutSubviews\n\n因此在viewDidLoad和viewWillLayoutSubviews中设置frame都是无效的，frame会在加载layout约束时重新计算。\n\n想要更改frame有两个方法：\n\n1. 在viewDidLayoutSubviews中设置frame；\n2. 将约束control-drag到代码中，通过IBOutlet设置对应属性。通过这个方式可以在viewDidLoad和viewWillLayoutSubviews中进行设置。\n\n>  Tip：如果要对frame进行修改并产生动画，需要在动画block内的代码块最后调用[被修改frame的view.super layoutIfNeeded];\n\n\n\n## 用 NSKeyedArchiver 和 NSKeyedUnarchiver 实现多层数据结构的完全复制\n\n### 示例：\n\n```objective-c\nNSMutableString *str1 = @“1”;\nNSMutableString *str2 = @“2”;\n\nNSMutabelArray *arr1 = [NSMutableArray arrayWithObjects:str1, str2, nil];\nNSMutableArray *arr2 = [NSMutableArray arrayWithObjects:str1, str2, arr1, nil];\n\nNSMutableArray *arr3 = [[NSMutableArray alloc] initWithArray:arr2 copyItems:YES];\n\nNSMutableString *str3 = [arr1 objectAtIndex:0];\n[str3 appendString:@“1”];\n\nNSLog(@\"arrM2--%@\",arrM2);\nNSLog(@\"arrM3--%@\",arrM3);\n```\n\n### 结果：\n\n```\n2017-03-14 00:55:57.604 深复制和完全复制[6080:438490] arrM2--(\n    11,\n    2,\n        (\n        11,\n        2\n    )\n)\n2017-03-14 00:55:57.606 深复制和完全复制[6080:438490] arrM3--(\n    1,\n    2,\n        (\n        11,\n        2\n    )\n)\n```\n\n### 分析：\n\n外层数据深拷贝，内层数据依然是浅拷贝（只拷贝指针）。\n\n### 修复：\n\n```objective-c\nNSMutableArray *arr3 = [NSKeyedUnarchiver unarchiveObjectWithData:[NSKeyedArchiver archivedDataWithRootObject:arr2]];\n```\n\n\n\n## ARC - MRC 引用计数模式设置\n\nProject设置 -> Build Settings -> Apple LLVM x.x - Language - Objective C -> Weak References in Manual Retain Release: \n\nNO: MRC\n\nYES: ARC\n\n\n\n## tintColorDidChange\n\n当弹出一个alert或者action sheet时，iOS7会自动将后面视图的tint color变暗。此时，我们可以在自定义视图中重写tintColorDidChange方法来执行我们想要的操作。\n\n\n\n## UIView 不能接受事件处理的情况\n\n1. alpha < 0.01\n2. userInteractionEnable = NO\n3. hidden = YES\n\n\n\n## 如何重写自己的 hash 方法\n\nhash方法是NSObject中声明的，默认实现是返回对象的内存地址。\n\n那么hash方法的最佳实践到底是什么呢?\n 大神[Mattt Thompson](https://link.jianshu.com/?t=http://nshipster.com/authors/mattt-thompson/)在[Equality](https://link.jianshu.com/?t=http://nshipster.com/equality/)中给出的结论就是\n\nIn reality, a simple XOR over the hash values of critical properties is sufficient 99% of the time(对关键属性的hash值进行位异或运算作为hash值)\n\n比如对于Person类的hash方法实现如下\n\n```objective-c\n- (NSUInteger)hash {\n  \n   return [self.name hash] ^ [self.birthday hash];\n}\n```\n\n\n\n## xib 动画\n\nXib中的控件，通过约束更改尺寸/位置等属性后，需要调用控件的父视图的layoutIfNeed方法。\n\n如果是使用UIView的animateWith…动画方法，需要在动画block内部的最后调用该方法。\n\n\n\n## ios 开发 loaded the \"ViewController\" nib but the view outlet was not set.'\n\n遇到loaded the \"ViewController\" nib but the view outlet was not set.'时，解决办法为：http://blog.sina.com.cn/s/blog_8f38d3410101a1rb.html，需要将Files's Owner中的view变量做一下关联。\n\n但是，有时候做关联时并没有看到view变量，这时，需要设置一下Files's Owner的class，之后就可以做关联了。详情参考：https://stackoverflow.com/questions/10750082/loaded-the-controller-nib-but-the-view-outlet-was-not-set\n\n\n\n## How to avoid clipboard warning as possibly as you can\n\nAlways check **UIPasteboard.hasStrings** before reading **UIPasteboard.string**, you can **potentially** save one clipboard warning.\n\n——from ying Chong\n\n\n\n## 怎么使用 GeometryReader 传入的 GeometryProxy 类型的参数，又不会因为在视图层级中加入 GeometryReader 导致占用了全部的可用屏幕空间，导致布局出现错误。\n\n![](https://tva1.sinaimg.cn/large/008eGmZEly1goxgunt0cmj30ay07taa2.jpg)\n\n```swift\nstruct Graph: View {\n  @State private var width = UIScreen.main.bounds.width // just initial constant\n  var body: some View {\n      HStack(spacing: 0) {\n        Color.red.frame(width: width / 3, height: 80)\n        Color.blue.frame(width: width / 3, height: 120)\n        Color.green.frame(width: width / 3, height: 180)\n      }.background(GeometryReader { gp -> Color in\n        let frame = gp.frame(in: .local)\n        DispatchQueue.main.async {\n            self.width = frame.size.width // << dynamic, on layout !!\n        }\n        return Color.clear\n      })\n  }\n}\n```\n\n\n\n\n\n## 收到键盘通知后自动调整 scrollview 的 contentOffset\n\n```objective-c\n- (void)keyboardWillShow:(NSNotification *)notification\n{\n    NSDictionary *info = [notification userInfo];\n    CGFloat kbH = [[info objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue].size.height;\n    NSIndexPath *indexPath = [NSIndexPath indexPathForRow:self.classes.count inSection:0];\n    CGRect p = [self.baseTableView rectForRowAtIndexPath:indexPath];\n    CGRect rectInSelfview = [self.baseTableView convertRect:p toView:self.view];\n    CGFloat cellBottomY = rectInSelfview.origin.y + rectInSelfview.size.height;\n    \n    if (cellBottomY < kbH) {\n        \n        return;\n    }\n    \n    [UIView animateWithDuration:0.2 animations:^{\n        \n        self.baseTableView.contentOffset = CGPointMake(0, cellBottomY - (self.baseTableView.height - kbH));\n    }];\n}\n```\n\n\n\n# 避免锁死Tip\n\n1. dispatch_once 中不要有同步到主线程执行的方法。\n\n2. CTTelephonyNetworkInfo 最好在 +load方法或者 main 方法之前的其他时机提前初始化一个共享的实例，避免踩到子线程懒加载时候要求主线程同步响应的坑。\n\n3. 有可能存在锁竞争的代码尽量不在主线程同步执行。\n\n4. 如果主线程与子线程不可避免的存在竞争时，加锁的粒度要尽量小，操作要尽量轻。、\n\n5. 数据库读写，文件压缩/解压缩等磁盘 IO 行为不放在主线程执行。\n\n6. 如果存在主线程将任务同步到串行队列中执行的场景，确保这些任务不与子线程可能存在的耗时操作复用同一个串行队列。\n\n7. 对于一些启动阶段非必要同步加载并且有比较密集磁盘 IO 行为的 SDK，如各种支付分享等第三方 SDK 都可以延迟，错开加载。\n\n8. NSUserDefaults 底层实现中存在直接或者间接的跨进程通信，在主线程同步调用容易发生卡死。➡️重度使用参考MMKV，轻度使用参考firebase自己写歌轻量的UserDefaults类\n\n9. [[UIApplication sharedApplication] openURL]接口，内部实现也存在同步的跨进程通信。➡️iOS10 及以上的系统版本使用[[UIApplication sharedApplication] openURL:options:completionHandler:]这个接口替换，此接口可以异步调起，不会造成卡死。","slug":"2021-03-26-iOS零散知识点","published":1,"date":"2021-03-26T07:48:42.417Z","updated":"2021-03-26T10:17:40.340Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmvw22yp0002sgnjec61ahny","content":"<h1 id=\"iOS-零散知识点\"><a href=\"#iOS-零散知识点\" class=\"headerlink\" title=\"iOS 零散知识点\"></a>iOS 零散知识点</h1><h2 id=\"RunLoop\"><a href=\"#RunLoop\" class=\"headerlink\" title=\"RunLoop\"></a>RunLoop</h2><p><img src=\"https://tva1.sinaimg.cn/large/008eGmZEly1goxcx5zeedj30u00fmq4q.jpg\"></p>\n<h2 id=\"有没有办法将参数的NSDictionary附加到NSURLRequest而不是手动创建字符串？\"><a href=\"#有没有办法将参数的NSDictionary附加到NSURLRequest而不是手动创建字符串？\" class=\"headerlink\" title=\"有没有办法将参数的NSDictionary附加到NSURLRequest而不是手动创建字符串？\"></a>有没有办法将参数的<strong>NSDictionary</strong>附加到<strong>NSURLRequest</strong>而不是手动创建字符串？</h2><p><a href=\"https://cloud.tencent.com/developer/ask/106457\">https://cloud.tencent.com/developer/ask/106457</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSURLComponents *url &#x3D; [[NSURLComponents alloc] initWithURL:request.URL resolvingAgainstBaseURL:YES];</span><br><span class=\"line\">NSMutableArray *queryItems &#x3D; NSMutableArray.new;</span><br><span class=\"line\">[params enumerateKeysAndObjectsUsingBlock:^(NSString *name, NSString *value, BOOL *stop) &#123;</span><br><span class=\"line\">   [queryItems addObject:[NSURLQueryItem queryItemWithName:name </span><br><span class=\"line\">                          value:[value stringByAddingPercentEncodingWithAllowedCharacters:NSCharacterSet.URLQueryAllowedCharacterSet]</span><br><span class=\"line\">                         ]</span><br><span class=\"line\">   ];</span><br><span class=\"line\">&#125;];</span><br><span class=\"line\">url.queryItems &#x3D; queryItems;</span><br><span class=\"line\">request.URL &#x3D; url.URL;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"获取屏幕尺寸的两种方法\"><a href=\"#获取屏幕尺寸的两种方法\" class=\"headerlink\" title=\"获取屏幕尺寸的两种方法\"></a>获取屏幕尺寸的两种方法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CGSize screenSize &#x3D; UIApplication.sharedApplication.delegate.window.bounds.size;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CGSize screenSize &#x3D; UIScreen.mainScreen.bounds.size;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Date-Extensions-判断-获取时间戳-时间差\"><a href=\"#Date-Extensions-判断-获取时间戳-时间差\" class=\"headerlink\" title=\"Date+Extensions: 判断/获取时间戳/时间差\"></a>Date+Extensions: 判断/获取时间戳/时间差</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">Date</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    *  是否为今天</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">isToday</span>()</span> -&gt; <span class=\"type\">Bool</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> calendar <span class=\"operator\">=</span> <span class=\"type\">Calendar</span>.current</span><br><span class=\"line\">      <span class=\"keyword\">let</span> unit: <span class=\"type\">Set</span>&lt;<span class=\"type\">Calendar</span>.<span class=\"type\">Component</span>&gt; <span class=\"operator\">=</span> [.day,.month,.year]</span><br><span class=\"line\">      <span class=\"keyword\">let</span> nowComps <span class=\"operator\">=</span> calendar.dateComponents(unit, from: <span class=\"type\">Date</span>())</span><br><span class=\"line\">      <span class=\"keyword\">let</span> selfCmps <span class=\"operator\">=</span> calendar.dateComponents(unit, from: <span class=\"keyword\">self</span>)</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">return</span> (selfCmps.year <span class=\"operator\">==</span> nowComps.year) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">      (selfCmps.month <span class=\"operator\">==</span> nowComps.month) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">      (selfCmps.day <span class=\"operator\">==</span> nowComps.day)</span><br><span class=\"line\">      </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    *  是否为昨天</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">isYesterday</span>()</span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> calendar <span class=\"operator\">=</span> <span class=\"type\">Calendar</span>.current</span><br><span class=\"line\">      <span class=\"keyword\">let</span> unit: <span class=\"type\">Set</span>&lt;<span class=\"type\">Calendar</span>.<span class=\"type\">Component</span>&gt; <span class=\"operator\">=</span> [.day,.month,.year]</span><br><span class=\"line\">      <span class=\"keyword\">let</span> nowComps <span class=\"operator\">=</span> calendar.dateComponents(unit, from: <span class=\"type\">Date</span>())</span><br><span class=\"line\">      <span class=\"keyword\">let</span> selfCmps <span class=\"operator\">=</span> calendar.dateComponents(unit, from: <span class=\"keyword\">self</span>)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> selfCmps.day <span class=\"operator\">==</span> <span class=\"literal\">nil</span> <span class=\"operator\">||</span> nowComps.day <span class=\"operator\">==</span> <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> count <span class=\"operator\">=</span> nowComps.day<span class=\"operator\">!</span> <span class=\"operator\">-</span> selfCmps.day<span class=\"operator\">!</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> (selfCmps.year <span class=\"operator\">==</span> nowComps.year) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">         (selfCmps.month <span class=\"operator\">==</span> nowComps.month) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">         (count <span class=\"operator\">==</span> <span class=\"number\">1</span>)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">///只有年月日的字符串</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">dataWithYMD</span>()</span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> fmt <span class=\"operator\">=</span> <span class=\"type\">DateFormatter</span>()</span><br><span class=\"line\">      fmt.dateFormat <span class=\"operator\">=</span> <span class=\"string\">&quot;yyyy-MM-dd&quot;</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> selfStr <span class=\"operator\">=</span> fmt.string(from: <span class=\"keyword\">self</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> result <span class=\"operator\">=</span> fmt.date(from: selfStr)<span class=\"operator\">!</span></span><br><span class=\"line\">      <span class=\"built_in\">print</span>(result)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> selfStr</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">///获取当前年月日的时间戳</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">timeIntervalWithYMDDate</span>()</span> -&gt; <span class=\"type\">TimeInterval</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> fmt <span class=\"operator\">=</span> <span class=\"type\">DateFormatter</span>()</span><br><span class=\"line\">      fmt.dateFormat <span class=\"operator\">=</span> <span class=\"string\">&quot;yyyy-MM-dd&quot;</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> selfStr <span class=\"operator\">=</span> fmt.string(from: <span class=\"keyword\">self</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> result <span class=\"operator\">=</span> fmt.date(from: selfStr)<span class=\"operator\">!</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> result.timeIntervalSinceReferenceDate <span class=\"operator\">+</span> <span class=\"number\">24</span> <span class=\"operator\">*</span> <span class=\"number\">60</span> <span class=\"operator\">*</span> <span class=\"number\">60</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    *  是否为今年</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">isThisYear</span>()</span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">let</span> calendar <span class=\"operator\">=</span> <span class=\"type\">Calendar</span>.current</span><br><span class=\"line\">       <span class=\"keyword\">let</span> nowCmps <span class=\"operator\">=</span> calendar.dateComponents([.year], from: <span class=\"type\">Date</span>())</span><br><span class=\"line\">       <span class=\"keyword\">let</span> selfCmps <span class=\"operator\">=</span> calendar.dateComponents([.year], from: <span class=\"keyword\">self</span>)</span><br><span class=\"line\">       <span class=\"keyword\">let</span> result <span class=\"operator\">=</span> nowCmps.year <span class=\"operator\">==</span> selfCmps.year</span><br><span class=\"line\">       <span class=\"keyword\">return</span> result</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    *  获得与当前时间的差距</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">deltaWithNow</span>()</span> -&gt; <span class=\"type\">DateComponents</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> calendar <span class=\"operator\">=</span> <span class=\"type\">Calendar</span>.current</span><br><span class=\"line\">      <span class=\"keyword\">let</span> cmps <span class=\"operator\">=</span> calendar.dateComponents([.hour,.minute,.second], from: <span class=\"keyword\">self</span>, to: <span class=\"type\">Date</span>())</span><br><span class=\"line\">      <span class=\"keyword\">return</span> cmps</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h2><h3 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h3><p>特殊的符号”^”与”$”,分别表示一个字符串的开始与结束。</p>\n<p>“^dog”:表示以”dog”开头的字符串（”dog product”,”dog123”,”dog” ）</p>\n<p>类似于:- (BOOL)hasPrefix:(NSString *)aString;</p>\n<p>“dog$”:表示以dog为结尾的字符串（”Product Manager is a dog”, “it is a dog”）</p>\n<p>类似于:- (BOOL)hasSuffix:(NSString *)aString;</p>\n<p>“^apple$”:表示以”apple”开头且以”apple”结尾的字符串</p>\n<p>“banana”:表示任何包含”banana”的字符串</p>\n<p>类似于 iOS8的新方法- (BOOL)containsString:(NSString *)aString,搜索子串用的。</p>\n<p>“*”,”+”,”?”:分别表示”没有或更多([0, +∞)取整数)”,”一个或更多([1,+∞)取整数)”,”没有或一个([0,1]取整数)”</p>\n<p>“ab*”:表示一个”a”后面按跟着0个或者N个”b”(“a”,”ab”,”abbbf”,这里并没有说是以b结尾)</p>\n<p>“ab+”:表示一个”a”后面跟着至少一个”b”(“ab”,”abb”)</p>\n<p>“ab?”:表示一个”a”后面跟着一个或者0个”b”(“a”,”abc”,”af”)</p>\n<p>“a?b+$”:表示字符串末尾有0个或者1个”a”或1个”a”跟着1个或者多个”b”(“ab”,”b”,”bbb”,”abbbb”,……)</p>\n<p>可以用大括号括起来（{}），表示一个重复的具体范围。例如</p>\n<p>“ab{4}”:表示一个”a”跟着4个”b”,”abbbb”</p>\n<p>‘’’ab{1,}’:表示一个”a”跟着至少1个”b”,(“ab”,”abb”,….)</p>\n<p>“ab{3,4}”:表示一个”a”跟着3个或者4个”b”(“abbb”,”abbbb”)</p>\n<p>所以”*”等于{0,},”+”等于{1,},”?”等于{0,1}。</p>\n<p>注意：可以没有上线，但是不能没有下线{,5}为错误写法。</p>\n<p>“|”表示“或”操作</p>\n<p>“a|b”:表示一个字符串中含有”a”或者”b”</p>\n<p>“(a|bcd)ef”:表示”aef”或者”bcdef”</p>\n<p>“(a|b)*c”:表示”a”或者”b”后面跟着0或者多个”c”(“a”,”b”,”ac”,”accccc”,”bc”,”bcccc”)</p>\n<p>方括号”[ ]“表示在括号内的众多字符中，选择1-N个括号内的符合语法的字符作为结果，例如</p>\n<p>“[ab]”:表示一个字符串含有”a”或”b”，等价于”a|b”</p>\n<p>“[a-d]”:表示一个字符串包含a-d中的一个，等价于”a|b|c|d”或者”[abcd]”</p>\n<p>“^[a-zA-Z]”:表示以字母开头的字符串。</p>\n<p>“[0-9]a”:表示”a”前面有一个数字。</p>\n<p>“[a-zA-Z0-9]$”:表示一个字符串以字母或者数字结尾。</p>\n<p>“.”:表示除了”\\n”,”\\r”之外的任意单个字符串。</p>\n<p>“a.[a-z]”:表示一个”a”后面你跟着一个任意一个字符串和一个小写字母。</p>\n<p>“^.{5}$”:表示任意一个长度是5的字符串。</p>\n<p>“\\num” 其中num是一个正整数。表示”\\num”之前的字符出现相同的个数，例如</p>\n<p>“(.)\\1”:表示两个连续相同的字符。</p>\n<p>“10{1,2}“:表示”1”后面跟着1个或者2个”0”(“10”,”100”)</p>\n<p>“0{3,}“:表示至少有3个连续的”0”(“000”,”0000”)</p>\n<p>在方括号里用’^’表示不希望出现的字符，’^’应在方括号里的第一位。</p>\n<p>“@[^a-zA-Z]@”:表示两个”@”之间不应该有字母。</p>\n<p>常用的正则：</p>\n<p>“\\d”:匹配一个数字字符，等价于”[0-9]”.</p>\n<p>“\\D”:匹配一个非数字字符，等价于”[^0-9]”</p>\n<p>“\\w”:匹配包括下划线的任何单词字符，等价于”[a-zA-Z0-9_]”</p>\n<p>“\\W”:匹配任何非单词字符，等价于”[^a-zA-Z0-9_]”</p>\n<p>iOS中书写正则表达式，碰到转义字符，多加一个“\\”,例如：</p>\n<p>全数字字符：@”^\\d+$”</p>\n<h3 id=\"常用正则\"><a href=\"#常用正则\" class=\"headerlink\" title=\"常用正则\"></a>常用正则</h3><p>(1) 验证电话号码：（”^(\\d{3,4}-)\\d{7,8}$”） 　</p>\n<p>(2) 验证Email地址：(“^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)<em>.\\w+([-.]\\w+)</em>$”)； 　　</p>\n<p>(3) 整数或者小数：^[0-9]+([.]{0,1}[0-9]+){0,1}$ 　　</p>\n<p>(4) 只能输入数字：”^[0-9]*$”。 　　</p>\n<p>(5) 只能输入由26个英文字母组成的字符串：”^[A-Za-z]+$”。 </p>\n<p>(6) 验证是否含有^%&amp;’,;=?$\\”等字符：”[^%&amp;’,;=?$\\x22]+”。 　</p>\n<p>(7) 只能输入汉字：”^[\\u4e00-\\u9fa5]{0,}$”。 　　</p>\n<p>(8) 验证一年的12个月：”^(0?[1-9]|1[0-2])$”正确格式为：”01″～”09″和”10″～”12″。 　　</p>\n<p>(9) 验证一个月的31天：”^((0?[1-9])|((1|2)[0-9])|30|31)$”正确格式为；”01″～”09″、”10″～”29″和“30”~“31”。 　　</p>\n<p>(10) 获取日期正则表达式：\\d{4}[年|-|.]\\d{\\1-\\12}[月|-|.]\\d{\\1-\\31}日? 注：可用来匹配大多数年月日信息。 　　</p>\n<p>(11) 匹配空白行的正则表达式：\\n\\s*\\r 注：可以用来删除空白行 </p>\n<p>(12) 匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$ 注：表单验证时很实用 </p>\n<p>(13) 匹配腾讯QQ号：[1-9][0-9]{4,14} 注：腾讯QQ号从10 000 开始 　　</p>\n<p>(14) 匹配中国邮政编码：[1-9]\\d{5}(?!\\d) 注：中国邮政编码为6位数字 　　</p>\n<p>(15) 匹配ip地址：((2[0-4]\\d|25[0-5]|[01]?\\d\\d?).){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)。</p>\n<ol>\n<li><p>验证用户名和密码：”^[a-zA-Z]\\w{5,15}$” 　　</p>\n</li>\n<li><p>验证电话号码：（”^([\\d{3,4}-)\\d{7,8}$] 　　eg：021-68686868 0511-6868686； 　　</p>\n</li>\n<li><p>验证手机号码：”^1[3|4|5|7|8][0-9]\\d{8}$”； 　　</p>\n</li>\n<li><p>验证身份证号（15位或18位数字）：”\\d{14}[[0-9],0-9xX]”</p>\n</li>\n<li><p>验证Email地址：(“^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)<em>.\\w+([-.]\\w+)</em>$”);</p>\n</li>\n<li><p>只能输入由数字和26个英文字母组成的字符串：(“^[A-Za-z0-9]+$”) ; </p>\n</li>\n<li><p>整数或者小数：^[0-9]+([.]{0,1}[0-9]+){0,1}$ 　　</p>\n</li>\n<li><p>只能输入数字：”^[0-9]*$”。 　　</p>\n</li>\n<li><p>只能输入n位的数字：”^\\d{n}$”。 　　</p>\n</li>\n<li><p>只能输入至少n位的数字：”^\\d{n,}$”。 　　</p>\n</li>\n<li><p>只能输入m~n位的数字：”^\\d{m,n}$”。 　　</p>\n</li>\n<li><p>只能输入零和非零开头的数字：”^(0|[1-9][0-9]*)$”。 　　</p>\n</li>\n<li><p>只能输入有两位小数的正实数：”^[0-9]+(.[0-9]{2})?$”。 　</p>\n</li>\n<li><p>只能输入有1~3位小数的正实数：”^[0-9]+(.[0-9]{1,3})?$”。 </p>\n</li>\n<li><p>只能输入非零的正整数：”^+?[1-9][0-9]*$”。 　　</p>\n</li>\n<li><p>只能输入非零的负整数：”^-[1-9][]0-9″*$。 　　</p>\n</li>\n<li><p>只能输入长度为3的字符：”^.{3}$”。 　　</p>\n</li>\n<li><p>只能输入由26个英文字母组成的字符串：”^[A-Za-z]+$”。 　</p>\n</li>\n<li><p>只能输入由26个大写英文字母组成的字符串：”^[A-Z]+$”。 </p>\n</li>\n<li><p>只能输入由26个小写英文字母组成的字符串：”^[a-z]+$”。 </p>\n</li>\n<li><p>验证是否含有^%&amp;’,;=?$\\”等字符：”[^%&amp;’,;=?$\\x22]+”。 </p>\n</li>\n<li><p>只能输入汉字：”^[\\u4e00-\\u9fa5]{0,}$”。 　　</p>\n</li>\n<li><p>验证URL：”^http://([\\w-]+.)+[\\w-]+(/[\\w-./?%&amp;=]*)?$”。 　　</p>\n</li>\n<li><p>验证一年的12个月：”^(0?[1-9]|1[0-2])$”正确格式为：”01″～”09″和”10″～”12″。 　　</p>\n</li>\n<li><p>验证一个月的31天：”^((0?[1-9])|((1|2)[0-9])|30|31)$”正确格式为；”01″～”09″、”10″～”29″和“30”~“31”。 　　</p>\n</li>\n<li><p>获取日期正则表达式：[\\d{4]}[年|-|.]\\d{\\1-\\12}[月|-|.]\\d{\\1-\\31}日? 　　评注：可用来匹配大多数年月日信息。 　　</p>\n</li>\n<li><p>匹配双字节字符(包括汉字在内)：[^\\x00-\\xff] 　　评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1） 　　</p>\n</li>\n<li><p>匹配空白行的正则表达式：\\n\\s*\\r 　　评注：可以用来删除空白行 　　</p>\n</li>\n<li><p>匹配HTML标记的正则表达式：&lt;(\\S*?)[^&gt;]<em>&gt;.</em>?&lt;/&gt;|&lt;.*? /&gt; 　　评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力 　　</p>\n</li>\n<li><p>匹配首尾空白字符的正则表达式：^\\s*|\\s*$ 　　评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式 </p>\n</li>\n<li><p>匹配网址URL的正则表达式：[a-zA-z]+://[^\\s]* 　　评注：网上流传的版本功能很有限，上面这个基本可以满足需求 　　</p>\n</li>\n<li><p>匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$ 　　评注：表单验证时很实用 　　</p>\n</li>\n<li><p>匹配腾讯QQ号：[1-9][0-9]{4,14} 　　评注：腾讯QQ号从10 000 开始 </p>\n</li>\n<li><p>匹配中国邮政编码：[1-9]\\d{5}(?!\\d) 　　评注：中国邮政编码为6位数字 　　</p>\n</li>\n<li><p>匹配ip地址：((2[0-4]\\d|25[0-5]|[01]?\\d\\d?).){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)。 　　下面给出正则表达式的元字符（来自百度百科）</p>\n</li>\n</ol>\n<h3 id=\"简单应用\"><a href=\"#简单应用\" class=\"headerlink\" title=\"简单应用\"></a>简单应用</h3><ul>\n<li>验证是不是QQ号</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSString *pattern &#x3D; @&quot;[1-9][0-9]&#123;4,14&#125;&quot;;</span><br><span class=\"line\">NSPredicate * pre &#x3D; [NSPredicate predicateWithFormat:@&quot;SELF MATCHES %@&quot;, pattern];</span><br><span class=\"line\">BOOL isMatch &#x3D; [pre evaluateWithObject:self.enterText.text];</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"网络状态码\"><a href=\"#网络状态码\" class=\"headerlink\" title=\"网络状态码\"></a>网络状态码</h2><ul>\n<li>1XX 提示信息：请求正在处理中</li>\n<li>2XX 成功错误码：请求已被接受处理</li>\n<li>3XX 重定向：完成请求需要附加操作</li>\n<li>4XX 客户端错误：请求资源有误或者请求不合法，服务器无法处理</li>\n<li>5XX 服务器错误：服务器处理请求出错</li>\n</ul>\n<h3 id=\"常见状态码\"><a href=\"#常见状态码\" class=\"headerlink\" title=\"常见状态码\"></a>常见状态码</h3><ul>\n<li>200 OK</li>\n<li>302 Found 暂时重定向</li>\n<li>301 Move Permanently永久重定向</li>\n<li>304 Not Modified 没有内容更新，使用缓存</li>\n<li>400 Bad Request 客户端请求与语法错误</li>\n<li>403 Forbidden 服务器拒绝提供服务</li>\n<li>404 Not Found 请求资源不存在</li>\n<li>500 Internal Server Error服务器发生了不可预期的错误</li>\n<li>503 Server Unavailable 服务器当前不能处理客户端的请求，一段时间后可能恢复正常</li>\n</ul>\n<h2 id=\"HTTP-请求过程\"><a href=\"#HTTP-请求过程\" class=\"headerlink\" title=\"HTTP 请求过程\"></a>HTTP 请求过程</h2><p>一个完整的HTTP请求过程如下：</p>\n<ol>\n<li>用户在浏览器输入URL</li>\n<li>域名解析（DNS的寻址）</li>\n<li>TCP三次握手</li>\n<li>握手成功后建立TCP通道，发起HTTP请求</li>\n<li>服务器响应HTTP请求，返回对应的响应报文</li>\n<li>客户端开始解析渲染</li>\n</ol>\n<h2 id=\"URL-和-URI\"><a href=\"#URL-和-URI\" class=\"headerlink\" title=\"URL 和 URI\"></a>URL 和 URI</h2><ul>\n<li>URI：统一资源标识符</li>\n<li>URL：统一资源定位符</li>\n</ul>\n<p>URI是一个用于标识互联网资源名称的字符串，最常见的形式是统一资源定位符（URL），经常指定为非正式的网址。更罕见的用法是统一资源名称（URN），其目的是通过提供一种途径。用于在特定的命名空间资源的标识，以补充网址。</p>\n<p>即URL和URN 都是 URI的子集，URI是一种抽象的概念，URL是URI的一种常见的具象表达形式。</p>\n<h2 id=\"缩放图片避免内存消耗过大\"><a href=\"#缩放图片避免内存消耗过大\" class=\"headerlink\" title=\"缩放图片避免内存消耗过大\"></a>缩放图片避免内存消耗过大</h2><p>原有缩放方法如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (UIImage *)scaleImage:(UIImage *)image newSize:(CGSize)newSize &#123;</span><br><span class=\"line\">   UIGraphicsBeginImageContextWithOptions(newSize, NO, 0);</span><br><span class=\"line\">   [image drawInRect:CGRectMake(0, 0, newSize.width, newSize.height)];</span><br><span class=\"line\">   UIImage *newImage &#x3D; UIGraphicsGetImageFromCurrentImageContext();</span><br><span class=\"line\">   UIGraphicsEndImgeContext();</span><br><span class=\"line\">   </span><br><span class=\"line\">   return newImage;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>处理大分辨率图片时，往往容易出现OOM，原因是-[UIImage drawInRect:]在绘制时，先解码图片，再生成原始分辨率大小的bitmap，这是很耗内存的。解决方法是使用更低层的ImageIO接口，避免中间bitmap产生。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ (UIImage *)scaledImageWithData:(NSData *)data withSize:(CGSize)size scale:(CGFloat)scale orientation:(UIImageOrientation)orientation &#123;</span><br><span class=\"line\">   CGFloat maxPixelSize &#x3D; MAX(size.width, size.height);</span><br><span class=\"line\">   CGImageSourceRef sourceRef &#x3D; CGImageSourceCreateWithData((__bridge CFDataRef)data, nil);</span><br><span class=\"line\">   NSDictionary *options &#x3D; @&#123;(__bridge id)kCGImageSourceThumnailFromImageAlways:(__bridge id)kCFBooleanTrue,</span><br><span class=\"line\">   (__bridge id)kCGImageSourceThumbnailMaxPixelSize:[NSNumber numberWithFloat:maxPixelSize]&#125;;</span><br><span class=\"line\">   </span><br><span class=\"line\">   CGImageRef imageRef &#x3D; CGImageSourceCreateThumnailAtIndex(sourceRef, 0, (__bridge CFDictionaryRef)options);</span><br><span class=\"line\">   UIImage *resultImage &#x3D; [UIImage imageWithCGImage:imageRef scale:scale orientation:orientation];</span><br><span class=\"line\">   CGImageRelease(imageRef);</span><br><span class=\"line\">   CFRelease(sourceRef);</span><br><span class=\"line\">   </span><br><span class=\"line\">   return resultImage;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"LocationManager-Combine-Version\"><a href=\"#LocationManager-Combine-Version\" class=\"headerlink\" title=\"LocationManager - Combine Version\"></a>LocationManager - Combine Version</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> CoreLocation</span><br><span class=\"line\"><span class=\"keyword\">import</span> MapKit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LocationManager</span>: <span class=\"title\">NSObject</span>, <span class=\"title\">ObservableObject</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> locationManager <span class=\"operator\">=</span> <span class=\"type\">CLLocationManager</span>()</span><br><span class=\"line\">  <span class=\"meta\">@Published</span> <span class=\"keyword\">var</span> region: <span class=\"type\">MKCoordinateRegion</span></span><br><span class=\"line\">  <span class=\"meta\">@Published</span> <span class=\"keyword\">var</span> authorized <span class=\"operator\">=</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">init</span>()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> place <span class=\"operator\">=</span> <span class=\"type\">WondersOfTheWorld</span>().places.randomElement() <span class=\"operator\">??</span> <span class=\"type\">WondersOfTheWorld</span>().places[<span class=\"number\">0</span>]</span><br><span class=\"line\">    region <span class=\"operator\">=</span> <span class=\"type\">MKCoordinateRegion</span>(center: place.location.coordinate, latitudinalMeters: <span class=\"number\">1000</span>, longitudinalMeters: <span class=\"number\">1000</span>)</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.<span class=\"keyword\">init</span>()</span><br><span class=\"line\">    locationManager.delegate <span class=\"operator\">=</span> <span class=\"keyword\">self</span></span><br><span class=\"line\">    locationManager.desiredAccuracy <span class=\"operator\">=</span> kCLLocationAccuracyBest</span><br><span class=\"line\">    <span class=\"keyword\">if</span> locationManager.authorizationStatus <span class=\"operator\">==</span> .authorizedWhenInUse &#123;</span><br><span class=\"line\">      authorized <span class=\"operator\">=</span> <span class=\"literal\">true</span></span><br><span class=\"line\">      locationManager.startUpdatingLocation()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">requestAuthorization</span>()</span> &#123;</span><br><span class=\"line\">    locationManager.requestWhenInUseAuthorization()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// MARK: - CLLocationManagerDelegate</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">LocationManager</span>: <span class=\"title\">CLLocationManagerDelegate</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">locationManagerDidChangeAuthorization</span>(<span class=\"keyword\">_</span> <span class=\"params\">manager</span>: <span class=\"type\">CLLocationManager</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> locationManager.authorizationStatus <span class=\"operator\">==</span> .authorizedWhenInUse &#123;</span><br><span class=\"line\">      authorized <span class=\"operator\">=</span> <span class=\"literal\">true</span></span><br><span class=\"line\">      locationManager.startUpdatingLocation()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">locationManager</span>(<span class=\"keyword\">_</span> <span class=\"params\">manager</span>: <span class=\"type\">CLLocationManager</span>, <span class=\"params\">didUpdateLocations</span> <span class=\"params\">locations</span>: [<span class=\"type\">CLLocation</span>])</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> latest <span class=\"operator\">=</span> locations.first <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    region <span class=\"operator\">=</span> <span class=\"type\">MKCoordinateRegion</span>.<span class=\"keyword\">init</span>(center: latest.coordinate, latitudinalMeters: <span class=\"number\">1000</span>, longitudinalMeters: <span class=\"number\">1000</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Region: <span class=\"subst\">\\(region)</span>&quot;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">locationManager</span>(<span class=\"keyword\">_</span> <span class=\"params\">manager</span>: <span class=\"type\">CLLocationManager</span>, <span class=\"params\">didFailWithError</span> <span class=\"params\">error</span>: <span class=\"type\">Error</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> clError <span class=\"operator\">=</span> error <span class=\"keyword\">as?</span> <span class=\"type\">CLError</span> <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> clError &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">CLError</span>.denied:</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Access denied&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;LocationManager didFailWithError: <span class=\"subst\">\\(clError.localizedDescription)</span>&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"断言\"><a href=\"#断言\" class=\"headerlink\" title=\"断言\"></a>断言</h2><blockquote>\n<p> 使用preconditionFailure（_：file：line :)或fatalError（_：file：line :)而不是assertionFailure（_：file：line :)可以使您的应用在release配置下崩溃。</p>\n</blockquote>\n<p>Ref: <a href=\"https://www.jianshu.com/p/91213ee3cecf\">https://www.jianshu.com/p/91213ee3cecf</a></p>\n<h2 id=\"字符串国际化中，格式化字符串多参数位置调整\"><a href=\"#字符串国际化中，格式化字符串多参数位置调整\" class=\"headerlink\" title=\"字符串国际化中，格式化字符串多参数位置调整\"></a>字符串国际化中，格式化字符串多参数位置调整</h2><p>e.g.</p>\n<p>/* Message in alert dialog when something fails */</p>\n<p>“%@ Error! %@ failed!” = “%2$@ blah blah, %1$@ blah!”;</p>\n<p>上例中，两个参数在翻译后的字符串中，前后位置调换。</p>\n<h2 id=\"使用-xib-时的-AutolLayout-和-frame-设置\"><a href=\"#使用-xib-时的-AutolLayout-和-frame-设置\" class=\"headerlink\" title=\"使用 xib 时的 AutolLayout 和 frame 设置\"></a>使用 xib 时的 AutolLayout 和 frame 设置</h2><p>开起AutoLayout后</p>\n<p>方法调用顺序：viewDidLoad -&gt; viewWillLayoutSubviews（这个函数在执行时加载文件对应的xib中设置的约束）-&gt; viewDidLayoutSubviews</p>\n<p>因此在viewDidLoad和viewWillLayoutSubviews中设置frame都是无效的，frame会在加载layout约束时重新计算。</p>\n<p>想要更改frame有两个方法：</p>\n<ol>\n<li>在viewDidLayoutSubviews中设置frame；</li>\n<li>将约束control-drag到代码中，通过IBOutlet设置对应属性。通过这个方式可以在viewDidLoad和viewWillLayoutSubviews中进行设置。</li>\n</ol>\n<blockquote>\n<p> Tip：如果要对frame进行修改并产生动画，需要在动画block内的代码块最后调用[被修改frame的view.super layoutIfNeeded];</p>\n</blockquote>\n<h2 id=\"用-NSKeyedArchiver-和-NSKeyedUnarchiver-实现多层数据结构的完全复制\"><a href=\"#用-NSKeyedArchiver-和-NSKeyedUnarchiver-实现多层数据结构的完全复制\" class=\"headerlink\" title=\"用 NSKeyedArchiver 和 NSKeyedUnarchiver 实现多层数据结构的完全复制\"></a>用 NSKeyedArchiver 和 NSKeyedUnarchiver 实现多层数据结构的完全复制</h2><h3 id=\"示例：\"><a href=\"#示例：\" class=\"headerlink\" title=\"示例：\"></a>示例：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSMutableString *str1 &#x3D; @“1”;</span><br><span class=\"line\">NSMutableString *str2 &#x3D; @“2”;</span><br><span class=\"line\"></span><br><span class=\"line\">NSMutabelArray *arr1 &#x3D; [NSMutableArray arrayWithObjects:str1, str2, nil];</span><br><span class=\"line\">NSMutableArray *arr2 &#x3D; [NSMutableArray arrayWithObjects:str1, str2, arr1, nil];</span><br><span class=\"line\"></span><br><span class=\"line\">NSMutableArray *arr3 &#x3D; [[NSMutableArray alloc] initWithArray:arr2 copyItems:YES];</span><br><span class=\"line\"></span><br><span class=\"line\">NSMutableString *str3 &#x3D; [arr1 objectAtIndex:0];</span><br><span class=\"line\">[str3 appendString:@“1”];</span><br><span class=\"line\"></span><br><span class=\"line\">NSLog(@&quot;arrM2--%@&quot;,arrM2);</span><br><span class=\"line\">NSLog(@&quot;arrM3--%@&quot;,arrM3);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"结果：\"><a href=\"#结果：\" class=\"headerlink\" title=\"结果：\"></a>结果：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2017-03-14 00:55:57.604 深复制和完全复制[6080:438490] arrM2--(</span><br><span class=\"line\">    11,</span><br><span class=\"line\">    2,</span><br><span class=\"line\">        (</span><br><span class=\"line\">        11,</span><br><span class=\"line\">        2</span><br><span class=\"line\">    )</span><br><span class=\"line\">)</span><br><span class=\"line\">2017-03-14 00:55:57.606 深复制和完全复制[6080:438490] arrM3--(</span><br><span class=\"line\">    1,</span><br><span class=\"line\">    2,</span><br><span class=\"line\">        (</span><br><span class=\"line\">        11,</span><br><span class=\"line\">        2</span><br><span class=\"line\">    )</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"分析：\"><a href=\"#分析：\" class=\"headerlink\" title=\"分析：\"></a>分析：</h3><p>外层数据深拷贝，内层数据依然是浅拷贝（只拷贝指针）。</p>\n<h3 id=\"修复：\"><a href=\"#修复：\" class=\"headerlink\" title=\"修复：\"></a>修复：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSMutableArray *arr3 &#x3D; [NSKeyedUnarchiver unarchiveObjectWithData:[NSKeyedArchiver archivedDataWithRootObject:arr2]];</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"ARC-MRC-引用计数模式设置\"><a href=\"#ARC-MRC-引用计数模式设置\" class=\"headerlink\" title=\"ARC - MRC 引用计数模式设置\"></a>ARC - MRC 引用计数模式设置</h2><p>Project设置 -&gt; Build Settings -&gt; Apple LLVM x.x - Language - Objective C -&gt; Weak References in Manual Retain Release: </p>\n<p>NO: MRC</p>\n<p>YES: ARC</p>\n<h2 id=\"tintColorDidChange\"><a href=\"#tintColorDidChange\" class=\"headerlink\" title=\"tintColorDidChange\"></a>tintColorDidChange</h2><p>当弹出一个alert或者action sheet时，iOS7会自动将后面视图的tint color变暗。此时，我们可以在自定义视图中重写tintColorDidChange方法来执行我们想要的操作。</p>\n<h2 id=\"UIView-不能接受事件处理的情况\"><a href=\"#UIView-不能接受事件处理的情况\" class=\"headerlink\" title=\"UIView 不能接受事件处理的情况\"></a>UIView 不能接受事件处理的情况</h2><ol>\n<li>alpha &lt; 0.01</li>\n<li>userInteractionEnable = NO</li>\n<li>hidden = YES</li>\n</ol>\n<h2 id=\"如何重写自己的-hash-方法\"><a href=\"#如何重写自己的-hash-方法\" class=\"headerlink\" title=\"如何重写自己的 hash 方法\"></a>如何重写自己的 hash 方法</h2><p>hash方法是NSObject中声明的，默认实现是返回对象的内存地址。</p>\n<p>那么hash方法的最佳实践到底是什么呢?<br> 大神<a href=\"https://link.jianshu.com/?t=http://nshipster.com/authors/mattt-thompson/\">Mattt Thompson</a>在<a href=\"https://link.jianshu.com/?t=http://nshipster.com/equality/\">Equality</a>中给出的结论就是</p>\n<p>In reality, a simple XOR over the hash values of critical properties is sufficient 99% of the time(对关键属性的hash值进行位异或运算作为hash值)</p>\n<p>比如对于Person类的hash方法实现如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (NSUInteger)hash &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">   return [self.name hash] ^ [self.birthday hash];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"xib-动画\"><a href=\"#xib-动画\" class=\"headerlink\" title=\"xib 动画\"></a>xib 动画</h2><p>Xib中的控件，通过约束更改尺寸/位置等属性后，需要调用控件的父视图的layoutIfNeed方法。</p>\n<p>如果是使用UIView的animateWith…动画方法，需要在动画block内部的最后调用该方法。</p>\n<h2 id=\"ios-开发-loaded-the-“ViewController”-nib-but-the-view-outlet-was-not-set-’\"><a href=\"#ios-开发-loaded-the-“ViewController”-nib-but-the-view-outlet-was-not-set-’\" class=\"headerlink\" title=\"ios 开发 loaded the “ViewController” nib but the view outlet was not set.’\"></a>ios 开发 loaded the “ViewController” nib but the view outlet was not set.’</h2><p>遇到loaded the “ViewController” nib but the view outlet was not set.’时，解决办法为：<a href=\"http://blog.sina.com.cn/s/blog_8f38d3410101a1rb.html%EF%BC%8C%E9%9C%80%E8%A6%81%E5%B0%86Files&#39;s\">http://blog.sina.com.cn/s/blog_8f38d3410101a1rb.html，需要将Files&#39;s</a> Owner中的view变量做一下关联。</p>\n<p>但是，有时候做关联时并没有看到view变量，这时，需要设置一下Files’s Owner的class，之后就可以做关联了。详情参考：<a href=\"https://stackoverflow.com/questions/10750082/loaded-the-controller-nib-but-the-view-outlet-was-not-set\">https://stackoverflow.com/questions/10750082/loaded-the-controller-nib-but-the-view-outlet-was-not-set</a></p>\n<h2 id=\"How-to-avoid-clipboard-warning-as-possibly-as-you-can\"><a href=\"#How-to-avoid-clipboard-warning-as-possibly-as-you-can\" class=\"headerlink\" title=\"How to avoid clipboard warning as possibly as you can\"></a>How to avoid clipboard warning as possibly as you can</h2><p>Always check <strong>UIPasteboard.hasStrings</strong> before reading <strong>UIPasteboard.string</strong>, you can <strong>potentially</strong> save one clipboard warning.</p>\n<p>——from ying Chong</p>\n<h2 id=\"怎么使用-GeometryReader-传入的-GeometryProxy-类型的参数，又不会因为在视图层级中加入-GeometryReader-导致占用了全部的可用屏幕空间，导致布局出现错误。\"><a href=\"#怎么使用-GeometryReader-传入的-GeometryProxy-类型的参数，又不会因为在视图层级中加入-GeometryReader-导致占用了全部的可用屏幕空间，导致布局出现错误。\" class=\"headerlink\" title=\"怎么使用 GeometryReader 传入的 GeometryProxy 类型的参数，又不会因为在视图层级中加入 GeometryReader 导致占用了全部的可用屏幕空间，导致布局出现错误。\"></a>怎么使用 GeometryReader 传入的 GeometryProxy 类型的参数，又不会因为在视图层级中加入 GeometryReader 导致占用了全部的可用屏幕空间，导致布局出现错误。</h2><p><img src=\"https://tva1.sinaimg.cn/large/008eGmZEly1goxgunt0cmj30ay07taa2.jpg\"></p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Graph</span>: <span class=\"title\">View</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@State</span> <span class=\"keyword\">private</span> <span class=\"keyword\">var</span> width <span class=\"operator\">=</span> <span class=\"type\">UIScreen</span>.main.bounds.width <span class=\"comment\">// just initial constant</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> body: <span class=\"keyword\">some</span> <span class=\"type\">View</span> &#123;</span><br><span class=\"line\">      <span class=\"type\">HStack</span>(spacing: <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"type\">Color</span>.red.frame(width: width <span class=\"operator\">/</span> <span class=\"number\">3</span>, height: <span class=\"number\">80</span>)</span><br><span class=\"line\">        <span class=\"type\">Color</span>.blue.frame(width: width <span class=\"operator\">/</span> <span class=\"number\">3</span>, height: <span class=\"number\">120</span>)</span><br><span class=\"line\">        <span class=\"type\">Color</span>.green.frame(width: width <span class=\"operator\">/</span> <span class=\"number\">3</span>, height: <span class=\"number\">180</span>)</span><br><span class=\"line\">      &#125;.background(<span class=\"type\">GeometryReader</span> &#123; gp -&gt; <span class=\"type\">Color</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> frame <span class=\"operator\">=</span> gp.frame(in: .local)</span><br><span class=\"line\">        <span class=\"type\">DispatchQueue</span>.main.async &#123;</span><br><span class=\"line\">            <span class=\"keyword\">self</span>.width <span class=\"operator\">=</span> frame.size.width <span class=\"comment\">// &lt;&lt; dynamic, on layout !!</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"type\">Color</span>.clear</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"收到键盘通知后自动调整-scrollview-的-contentOffset\"><a href=\"#收到键盘通知后自动调整-scrollview-的-contentOffset\" class=\"headerlink\" title=\"收到键盘通知后自动调整 scrollview 的 contentOffset\"></a>收到键盘通知后自动调整 scrollview 的 contentOffset</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)keyboardWillShow:(NSNotification *)notification</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NSDictionary *info &#x3D; [notification userInfo];</span><br><span class=\"line\">    CGFloat kbH &#x3D; [[info objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue].size.height;</span><br><span class=\"line\">    NSIndexPath *indexPath &#x3D; [NSIndexPath indexPathForRow:self.classes.count inSection:0];</span><br><span class=\"line\">    CGRect p &#x3D; [self.baseTableView rectForRowAtIndexPath:indexPath];</span><br><span class=\"line\">    CGRect rectInSelfview &#x3D; [self.baseTableView convertRect:p toView:self.view];</span><br><span class=\"line\">    CGFloat cellBottomY &#x3D; rectInSelfview.origin.y + rectInSelfview.size.height;</span><br><span class=\"line\">    </span><br><span class=\"line\">    if (cellBottomY &lt; kbH) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        return;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [UIView animateWithDuration:0.2 animations:^&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        self.baseTableView.contentOffset &#x3D; CGPointMake(0, cellBottomY - (self.baseTableView.height - kbH));</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"避免锁死Tip\"><a href=\"#避免锁死Tip\" class=\"headerlink\" title=\"避免锁死Tip\"></a>避免锁死Tip</h1><ol>\n<li><p>dispatch_once 中不要有同步到主线程执行的方法。</p>\n</li>\n<li><p>CTTelephonyNetworkInfo 最好在 +load方法或者 main 方法之前的其他时机提前初始化一个共享的实例，避免踩到子线程懒加载时候要求主线程同步响应的坑。</p>\n</li>\n<li><p>有可能存在锁竞争的代码尽量不在主线程同步执行。</p>\n</li>\n<li><p>如果主线程与子线程不可避免的存在竞争时，加锁的粒度要尽量小，操作要尽量轻。、</p>\n</li>\n<li><p>数据库读写，文件压缩/解压缩等磁盘 IO 行为不放在主线程执行。</p>\n</li>\n<li><p>如果存在主线程将任务同步到串行队列中执行的场景，确保这些任务不与子线程可能存在的耗时操作复用同一个串行队列。</p>\n</li>\n<li><p>对于一些启动阶段非必要同步加载并且有比较密集磁盘 IO 行为的 SDK，如各种支付分享等第三方 SDK 都可以延迟，错开加载。</p>\n</li>\n<li><p>NSUserDefaults 底层实现中存在直接或者间接的跨进程通信，在主线程同步调用容易发生卡死。➡️重度使用参考MMKV，轻度使用参考firebase自己写歌轻量的UserDefaults类</p>\n</li>\n<li><p>[[UIApplication sharedApplication] openURL]接口，内部实现也存在同步的跨进程通信。➡️iOS10 及以上的系统版本使用[[UIApplication sharedApplication] openURL:options:completionHandler:]这个接口替换，此接口可以异步调起，不会造成卡死。</p>\n</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"iOS-零散知识点\"><a href=\"#iOS-零散知识点\" class=\"headerlink\" title=\"iOS 零散知识点\"></a>iOS 零散知识点</h1><h2 id=\"RunLoop\"><a href=\"#RunLoop\" class=\"headerlink\" title=\"RunLoop\"></a>RunLoop</h2><p><img src=\"https://tva1.sinaimg.cn/large/008eGmZEly1goxcx5zeedj30u00fmq4q.jpg\"></p>\n<h2 id=\"有没有办法将参数的NSDictionary附加到NSURLRequest而不是手动创建字符串？\"><a href=\"#有没有办法将参数的NSDictionary附加到NSURLRequest而不是手动创建字符串？\" class=\"headerlink\" title=\"有没有办法将参数的NSDictionary附加到NSURLRequest而不是手动创建字符串？\"></a>有没有办法将参数的<strong>NSDictionary</strong>附加到<strong>NSURLRequest</strong>而不是手动创建字符串？</h2><p><a href=\"https://cloud.tencent.com/developer/ask/106457\">https://cloud.tencent.com/developer/ask/106457</a></p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSURLComponents *url &#x3D; [[NSURLComponents alloc] initWithURL:request.URL resolvingAgainstBaseURL:YES];</span><br><span class=\"line\">NSMutableArray *queryItems &#x3D; NSMutableArray.new;</span><br><span class=\"line\">[params enumerateKeysAndObjectsUsingBlock:^(NSString *name, NSString *value, BOOL *stop) &#123;</span><br><span class=\"line\">   [queryItems addObject:[NSURLQueryItem queryItemWithName:name </span><br><span class=\"line\">                          value:[value stringByAddingPercentEncodingWithAllowedCharacters:NSCharacterSet.URLQueryAllowedCharacterSet]</span><br><span class=\"line\">                         ]</span><br><span class=\"line\">   ];</span><br><span class=\"line\">&#125;];</span><br><span class=\"line\">url.queryItems &#x3D; queryItems;</span><br><span class=\"line\">request.URL &#x3D; url.URL;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"获取屏幕尺寸的两种方法\"><a href=\"#获取屏幕尺寸的两种方法\" class=\"headerlink\" title=\"获取屏幕尺寸的两种方法\"></a>获取屏幕尺寸的两种方法</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CGSize screenSize &#x3D; UIApplication.sharedApplication.delegate.window.bounds.size;</span><br></pre></td></tr></table></figure>\n\n\n\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">CGSize screenSize &#x3D; UIScreen.mainScreen.bounds.size;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Date-Extensions-判断-获取时间戳-时间差\"><a href=\"#Date-Extensions-判断-获取时间戳-时间差\" class=\"headerlink\" title=\"Date+Extensions: 判断/获取时间戳/时间差\"></a>Date+Extensions: 判断/获取时间戳/时间差</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">Date</span> </span>&#123;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    *  是否为今天</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">isToday</span>()</span> -&gt; <span class=\"type\">Bool</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> calendar <span class=\"operator\">=</span> <span class=\"type\">Calendar</span>.current</span><br><span class=\"line\">      <span class=\"keyword\">let</span> unit: <span class=\"type\">Set</span>&lt;<span class=\"type\">Calendar</span>.<span class=\"type\">Component</span>&gt; <span class=\"operator\">=</span> [.day,.month,.year]</span><br><span class=\"line\">      <span class=\"keyword\">let</span> nowComps <span class=\"operator\">=</span> calendar.dateComponents(unit, from: <span class=\"type\">Date</span>())</span><br><span class=\"line\">      <span class=\"keyword\">let</span> selfCmps <span class=\"operator\">=</span> calendar.dateComponents(unit, from: <span class=\"keyword\">self</span>)</span><br><span class=\"line\">      </span><br><span class=\"line\">      <span class=\"keyword\">return</span> (selfCmps.year <span class=\"operator\">==</span> nowComps.year) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">      (selfCmps.month <span class=\"operator\">==</span> nowComps.month) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">      (selfCmps.day <span class=\"operator\">==</span> nowComps.day)</span><br><span class=\"line\">      </span><br><span class=\"line\">   &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    *  是否为昨天</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">isYesterday</span>()</span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> calendar <span class=\"operator\">=</span> <span class=\"type\">Calendar</span>.current</span><br><span class=\"line\">      <span class=\"keyword\">let</span> unit: <span class=\"type\">Set</span>&lt;<span class=\"type\">Calendar</span>.<span class=\"type\">Component</span>&gt; <span class=\"operator\">=</span> [.day,.month,.year]</span><br><span class=\"line\">      <span class=\"keyword\">let</span> nowComps <span class=\"operator\">=</span> calendar.dateComponents(unit, from: <span class=\"type\">Date</span>())</span><br><span class=\"line\">      <span class=\"keyword\">let</span> selfCmps <span class=\"operator\">=</span> calendar.dateComponents(unit, from: <span class=\"keyword\">self</span>)</span><br><span class=\"line\">      <span class=\"keyword\">if</span> selfCmps.day <span class=\"operator\">==</span> <span class=\"literal\">nil</span> <span class=\"operator\">||</span> nowComps.day <span class=\"operator\">==</span> <span class=\"literal\">nil</span> &#123;</span><br><span class=\"line\">         <span class=\"keyword\">return</span> <span class=\"literal\">false</span></span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> count <span class=\"operator\">=</span> nowComps.day<span class=\"operator\">!</span> <span class=\"operator\">-</span> selfCmps.day<span class=\"operator\">!</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> (selfCmps.year <span class=\"operator\">==</span> nowComps.year) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">         (selfCmps.month <span class=\"operator\">==</span> nowComps.month) <span class=\"operator\">&amp;&amp;</span></span><br><span class=\"line\">         (count <span class=\"operator\">==</span> <span class=\"number\">1</span>)</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">///只有年月日的字符串</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">dataWithYMD</span>()</span> -&gt; <span class=\"type\">String</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> fmt <span class=\"operator\">=</span> <span class=\"type\">DateFormatter</span>()</span><br><span class=\"line\">      fmt.dateFormat <span class=\"operator\">=</span> <span class=\"string\">&quot;yyyy-MM-dd&quot;</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> selfStr <span class=\"operator\">=</span> fmt.string(from: <span class=\"keyword\">self</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> result <span class=\"operator\">=</span> fmt.date(from: selfStr)<span class=\"operator\">!</span></span><br><span class=\"line\">      <span class=\"built_in\">print</span>(result)</span><br><span class=\"line\">      <span class=\"keyword\">return</span> selfStr</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">///获取当前年月日的时间戳</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">timeIntervalWithYMDDate</span>()</span> -&gt; <span class=\"type\">TimeInterval</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> fmt <span class=\"operator\">=</span> <span class=\"type\">DateFormatter</span>()</span><br><span class=\"line\">      fmt.dateFormat <span class=\"operator\">=</span> <span class=\"string\">&quot;yyyy-MM-dd&quot;</span></span><br><span class=\"line\">      <span class=\"keyword\">let</span> selfStr <span class=\"operator\">=</span> fmt.string(from: <span class=\"keyword\">self</span>)</span><br><span class=\"line\">      <span class=\"keyword\">let</span> result <span class=\"operator\">=</span> fmt.date(from: selfStr)<span class=\"operator\">!</span></span><br><span class=\"line\">      <span class=\"keyword\">return</span> result.timeIntervalSinceReferenceDate <span class=\"operator\">+</span> <span class=\"number\">24</span> <span class=\"operator\">*</span> <span class=\"number\">60</span> <span class=\"operator\">*</span> <span class=\"number\">60</span></span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    *  是否为今年</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">isThisYear</span>()</span> -&gt; <span class=\"type\">Bool</span> &#123;</span><br><span class=\"line\">       <span class=\"keyword\">let</span> calendar <span class=\"operator\">=</span> <span class=\"type\">Calendar</span>.current</span><br><span class=\"line\">       <span class=\"keyword\">let</span> nowCmps <span class=\"operator\">=</span> calendar.dateComponents([.year], from: <span class=\"type\">Date</span>())</span><br><span class=\"line\">       <span class=\"keyword\">let</span> selfCmps <span class=\"operator\">=</span> calendar.dateComponents([.year], from: <span class=\"keyword\">self</span>)</span><br><span class=\"line\">       <span class=\"keyword\">let</span> result <span class=\"operator\">=</span> nowCmps.year <span class=\"operator\">==</span> selfCmps.year</span><br><span class=\"line\">       <span class=\"keyword\">return</span> result</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">   <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">    *  获得与当前时间的差距</span></span><br><span class=\"line\"><span class=\"comment\">    */</span></span><br><span class=\"line\">   <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">deltaWithNow</span>()</span> -&gt; <span class=\"type\">DateComponents</span>&#123;</span><br><span class=\"line\">      <span class=\"keyword\">let</span> calendar <span class=\"operator\">=</span> <span class=\"type\">Calendar</span>.current</span><br><span class=\"line\">      <span class=\"keyword\">let</span> cmps <span class=\"operator\">=</span> calendar.dateComponents([.hour,.minute,.second], from: <span class=\"keyword\">self</span>, to: <span class=\"type\">Date</span>())</span><br><span class=\"line\">      <span class=\"keyword\">return</span> cmps</span><br><span class=\"line\">   &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"正则表达式\"><a href=\"#正则表达式\" class=\"headerlink\" title=\"正则表达式\"></a>正则表达式</h2><h3 id=\"基本语法\"><a href=\"#基本语法\" class=\"headerlink\" title=\"基本语法\"></a>基本语法</h3><p>特殊的符号”^”与”$”,分别表示一个字符串的开始与结束。</p>\n<p>“^dog”:表示以”dog”开头的字符串（”dog product”,”dog123”,”dog” ）</p>\n<p>类似于:- (BOOL)hasPrefix:(NSString *)aString;</p>\n<p>“dog$”:表示以dog为结尾的字符串（”Product Manager is a dog”, “it is a dog”）</p>\n<p>类似于:- (BOOL)hasSuffix:(NSString *)aString;</p>\n<p>“^apple$”:表示以”apple”开头且以”apple”结尾的字符串</p>\n<p>“banana”:表示任何包含”banana”的字符串</p>\n<p>类似于 iOS8的新方法- (BOOL)containsString:(NSString *)aString,搜索子串用的。</p>\n<p>“*”,”+”,”?”:分别表示”没有或更多([0, +∞)取整数)”,”一个或更多([1,+∞)取整数)”,”没有或一个([0,1]取整数)”</p>\n<p>“ab*”:表示一个”a”后面按跟着0个或者N个”b”(“a”,”ab”,”abbbf”,这里并没有说是以b结尾)</p>\n<p>“ab+”:表示一个”a”后面跟着至少一个”b”(“ab”,”abb”)</p>\n<p>“ab?”:表示一个”a”后面跟着一个或者0个”b”(“a”,”abc”,”af”)</p>\n<p>“a?b+$”:表示字符串末尾有0个或者1个”a”或1个”a”跟着1个或者多个”b”(“ab”,”b”,”bbb”,”abbbb”,……)</p>\n<p>可以用大括号括起来（{}），表示一个重复的具体范围。例如</p>\n<p>“ab{4}”:表示一个”a”跟着4个”b”,”abbbb”</p>\n<p>‘’’ab{1,}’:表示一个”a”跟着至少1个”b”,(“ab”,”abb”,….)</p>\n<p>“ab{3,4}”:表示一个”a”跟着3个或者4个”b”(“abbb”,”abbbb”)</p>\n<p>所以”*”等于{0,},”+”等于{1,},”?”等于{0,1}。</p>\n<p>注意：可以没有上线，但是不能没有下线{,5}为错误写法。</p>\n<p>“|”表示“或”操作</p>\n<p>“a|b”:表示一个字符串中含有”a”或者”b”</p>\n<p>“(a|bcd)ef”:表示”aef”或者”bcdef”</p>\n<p>“(a|b)*c”:表示”a”或者”b”后面跟着0或者多个”c”(“a”,”b”,”ac”,”accccc”,”bc”,”bcccc”)</p>\n<p>方括号”[ ]“表示在括号内的众多字符中，选择1-N个括号内的符合语法的字符作为结果，例如</p>\n<p>“[ab]”:表示一个字符串含有”a”或”b”，等价于”a|b”</p>\n<p>“[a-d]”:表示一个字符串包含a-d中的一个，等价于”a|b|c|d”或者”[abcd]”</p>\n<p>“^[a-zA-Z]”:表示以字母开头的字符串。</p>\n<p>“[0-9]a”:表示”a”前面有一个数字。</p>\n<p>“[a-zA-Z0-9]$”:表示一个字符串以字母或者数字结尾。</p>\n<p>“.”:表示除了”\\n”,”\\r”之外的任意单个字符串。</p>\n<p>“a.[a-z]”:表示一个”a”后面你跟着一个任意一个字符串和一个小写字母。</p>\n<p>“^.{5}$”:表示任意一个长度是5的字符串。</p>\n<p>“\\num” 其中num是一个正整数。表示”\\num”之前的字符出现相同的个数，例如</p>\n<p>“(.)\\1”:表示两个连续相同的字符。</p>\n<p>“10{1,2}“:表示”1”后面跟着1个或者2个”0”(“10”,”100”)</p>\n<p>“0{3,}“:表示至少有3个连续的”0”(“000”,”0000”)</p>\n<p>在方括号里用’^’表示不希望出现的字符，’^’应在方括号里的第一位。</p>\n<p>“@[^a-zA-Z]@”:表示两个”@”之间不应该有字母。</p>\n<p>常用的正则：</p>\n<p>“\\d”:匹配一个数字字符，等价于”[0-9]”.</p>\n<p>“\\D”:匹配一个非数字字符，等价于”[^0-9]”</p>\n<p>“\\w”:匹配包括下划线的任何单词字符，等价于”[a-zA-Z0-9_]”</p>\n<p>“\\W”:匹配任何非单词字符，等价于”[^a-zA-Z0-9_]”</p>\n<p>iOS中书写正则表达式，碰到转义字符，多加一个“\\”,例如：</p>\n<p>全数字字符：@”^\\d+$”</p>\n<h3 id=\"常用正则\"><a href=\"#常用正则\" class=\"headerlink\" title=\"常用正则\"></a>常用正则</h3><p>(1) 验证电话号码：（”^(\\d{3,4}-)\\d{7,8}$”） 　</p>\n<p>(2) 验证Email地址：(“^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)<em>.\\w+([-.]\\w+)</em>$”)； 　　</p>\n<p>(3) 整数或者小数：^[0-9]+([.]{0,1}[0-9]+){0,1}$ 　　</p>\n<p>(4) 只能输入数字：”^[0-9]*$”。 　　</p>\n<p>(5) 只能输入由26个英文字母组成的字符串：”^[A-Za-z]+$”。 </p>\n<p>(6) 验证是否含有^%&amp;’,;=?$\\”等字符：”[^%&amp;’,;=?$\\x22]+”。 　</p>\n<p>(7) 只能输入汉字：”^[\\u4e00-\\u9fa5]{0,}$”。 　　</p>\n<p>(8) 验证一年的12个月：”^(0?[1-9]|1[0-2])$”正确格式为：”01″～”09″和”10″～”12″。 　　</p>\n<p>(9) 验证一个月的31天：”^((0?[1-9])|((1|2)[0-9])|30|31)$”正确格式为；”01″～”09″、”10″～”29″和“30”~“31”。 　　</p>\n<p>(10) 获取日期正则表达式：\\d{4}[年|-|.]\\d{\\1-\\12}[月|-|.]\\d{\\1-\\31}日? 注：可用来匹配大多数年月日信息。 　　</p>\n<p>(11) 匹配空白行的正则表达式：\\n\\s*\\r 注：可以用来删除空白行 </p>\n<p>(12) 匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$ 注：表单验证时很实用 </p>\n<p>(13) 匹配腾讯QQ号：[1-9][0-9]{4,14} 注：腾讯QQ号从10 000 开始 　　</p>\n<p>(14) 匹配中国邮政编码：[1-9]\\d{5}(?!\\d) 注：中国邮政编码为6位数字 　　</p>\n<p>(15) 匹配ip地址：((2[0-4]\\d|25[0-5]|[01]?\\d\\d?).){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)。</p>\n<ol>\n<li><p>验证用户名和密码：”^[a-zA-Z]\\w{5,15}$” 　　</p>\n</li>\n<li><p>验证电话号码：（”^([\\d{3,4}-)\\d{7,8}$] 　　eg：021-68686868 0511-6868686； 　　</p>\n</li>\n<li><p>验证手机号码：”^1[3|4|5|7|8][0-9]\\d{8}$”； 　　</p>\n</li>\n<li><p>验证身份证号（15位或18位数字）：”\\d{14}[[0-9],0-9xX]”</p>\n</li>\n<li><p>验证Email地址：(“^\\w+([-+.]\\w+)*@\\w+([-.]\\w+)<em>.\\w+([-.]\\w+)</em>$”);</p>\n</li>\n<li><p>只能输入由数字和26个英文字母组成的字符串：(“^[A-Za-z0-9]+$”) ; </p>\n</li>\n<li><p>整数或者小数：^[0-9]+([.]{0,1}[0-9]+){0,1}$ 　　</p>\n</li>\n<li><p>只能输入数字：”^[0-9]*$”。 　　</p>\n</li>\n<li><p>只能输入n位的数字：”^\\d{n}$”。 　　</p>\n</li>\n<li><p>只能输入至少n位的数字：”^\\d{n,}$”。 　　</p>\n</li>\n<li><p>只能输入m~n位的数字：”^\\d{m,n}$”。 　　</p>\n</li>\n<li><p>只能输入零和非零开头的数字：”^(0|[1-9][0-9]*)$”。 　　</p>\n</li>\n<li><p>只能输入有两位小数的正实数：”^[0-9]+(.[0-9]{2})?$”。 　</p>\n</li>\n<li><p>只能输入有1~3位小数的正实数：”^[0-9]+(.[0-9]{1,3})?$”。 </p>\n</li>\n<li><p>只能输入非零的正整数：”^+?[1-9][0-9]*$”。 　　</p>\n</li>\n<li><p>只能输入非零的负整数：”^-[1-9][]0-9″*$。 　　</p>\n</li>\n<li><p>只能输入长度为3的字符：”^.{3}$”。 　　</p>\n</li>\n<li><p>只能输入由26个英文字母组成的字符串：”^[A-Za-z]+$”。 　</p>\n</li>\n<li><p>只能输入由26个大写英文字母组成的字符串：”^[A-Z]+$”。 </p>\n</li>\n<li><p>只能输入由26个小写英文字母组成的字符串：”^[a-z]+$”。 </p>\n</li>\n<li><p>验证是否含有^%&amp;’,;=?$\\”等字符：”[^%&amp;’,;=?$\\x22]+”。 </p>\n</li>\n<li><p>只能输入汉字：”^[\\u4e00-\\u9fa5]{0,}$”。 　　</p>\n</li>\n<li><p>验证URL：”^http://([\\w-]+.)+[\\w-]+(/[\\w-./?%&amp;=]*)?$”。 　　</p>\n</li>\n<li><p>验证一年的12个月：”^(0?[1-9]|1[0-2])$”正确格式为：”01″～”09″和”10″～”12″。 　　</p>\n</li>\n<li><p>验证一个月的31天：”^((0?[1-9])|((1|2)[0-9])|30|31)$”正确格式为；”01″～”09″、”10″～”29″和“30”~“31”。 　　</p>\n</li>\n<li><p>获取日期正则表达式：[\\d{4]}[年|-|.]\\d{\\1-\\12}[月|-|.]\\d{\\1-\\31}日? 　　评注：可用来匹配大多数年月日信息。 　　</p>\n</li>\n<li><p>匹配双字节字符(包括汉字在内)：[^\\x00-\\xff] 　　评注：可以用来计算字符串的长度（一个双字节字符长度计2，ASCII字符计1） 　　</p>\n</li>\n<li><p>匹配空白行的正则表达式：\\n\\s*\\r 　　评注：可以用来删除空白行 　　</p>\n</li>\n<li><p>匹配HTML标记的正则表达式：&lt;(\\S*?)[^&gt;]<em>&gt;.</em>?&lt;/&gt;|&lt;.*? /&gt; 　　评注：网上流传的版本太糟糕，上面这个也仅仅能匹配部分，对于复杂的嵌套标记依旧无能为力 　　</p>\n</li>\n<li><p>匹配首尾空白字符的正则表达式：^\\s*|\\s*$ 　　评注：可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式 </p>\n</li>\n<li><p>匹配网址URL的正则表达式：[a-zA-z]+://[^\\s]* 　　评注：网上流传的版本功能很有限，上面这个基本可以满足需求 　　</p>\n</li>\n<li><p>匹配帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]{4,15}$ 　　评注：表单验证时很实用 　　</p>\n</li>\n<li><p>匹配腾讯QQ号：[1-9][0-9]{4,14} 　　评注：腾讯QQ号从10 000 开始 </p>\n</li>\n<li><p>匹配中国邮政编码：[1-9]\\d{5}(?!\\d) 　　评注：中国邮政编码为6位数字 　　</p>\n</li>\n<li><p>匹配ip地址：((2[0-4]\\d|25[0-5]|[01]?\\d\\d?).){3}(2[0-4]\\d|25[0-5]|[01]?\\d\\d?)。 　　下面给出正则表达式的元字符（来自百度百科）</p>\n</li>\n</ol>\n<h3 id=\"简单应用\"><a href=\"#简单应用\" class=\"headerlink\" title=\"简单应用\"></a>简单应用</h3><ul>\n<li>验证是不是QQ号</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSString *pattern &#x3D; @&quot;[1-9][0-9]&#123;4,14&#125;&quot;;</span><br><span class=\"line\">NSPredicate * pre &#x3D; [NSPredicate predicateWithFormat:@&quot;SELF MATCHES %@&quot;, pattern];</span><br><span class=\"line\">BOOL isMatch &#x3D; [pre evaluateWithObject:self.enterText.text];</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"网络状态码\"><a href=\"#网络状态码\" class=\"headerlink\" title=\"网络状态码\"></a>网络状态码</h2><ul>\n<li>1XX 提示信息：请求正在处理中</li>\n<li>2XX 成功错误码：请求已被接受处理</li>\n<li>3XX 重定向：完成请求需要附加操作</li>\n<li>4XX 客户端错误：请求资源有误或者请求不合法，服务器无法处理</li>\n<li>5XX 服务器错误：服务器处理请求出错</li>\n</ul>\n<h3 id=\"常见状态码\"><a href=\"#常见状态码\" class=\"headerlink\" title=\"常见状态码\"></a>常见状态码</h3><ul>\n<li>200 OK</li>\n<li>302 Found 暂时重定向</li>\n<li>301 Move Permanently永久重定向</li>\n<li>304 Not Modified 没有内容更新，使用缓存</li>\n<li>400 Bad Request 客户端请求与语法错误</li>\n<li>403 Forbidden 服务器拒绝提供服务</li>\n<li>404 Not Found 请求资源不存在</li>\n<li>500 Internal Server Error服务器发生了不可预期的错误</li>\n<li>503 Server Unavailable 服务器当前不能处理客户端的请求，一段时间后可能恢复正常</li>\n</ul>\n<h2 id=\"HTTP-请求过程\"><a href=\"#HTTP-请求过程\" class=\"headerlink\" title=\"HTTP 请求过程\"></a>HTTP 请求过程</h2><p>一个完整的HTTP请求过程如下：</p>\n<ol>\n<li>用户在浏览器输入URL</li>\n<li>域名解析（DNS的寻址）</li>\n<li>TCP三次握手</li>\n<li>握手成功后建立TCP通道，发起HTTP请求</li>\n<li>服务器响应HTTP请求，返回对应的响应报文</li>\n<li>客户端开始解析渲染</li>\n</ol>\n<h2 id=\"URL-和-URI\"><a href=\"#URL-和-URI\" class=\"headerlink\" title=\"URL 和 URI\"></a>URL 和 URI</h2><ul>\n<li>URI：统一资源标识符</li>\n<li>URL：统一资源定位符</li>\n</ul>\n<p>URI是一个用于标识互联网资源名称的字符串，最常见的形式是统一资源定位符（URL），经常指定为非正式的网址。更罕见的用法是统一资源名称（URN），其目的是通过提供一种途径。用于在特定的命名空间资源的标识，以补充网址。</p>\n<p>即URL和URN 都是 URI的子集，URI是一种抽象的概念，URL是URI的一种常见的具象表达形式。</p>\n<h2 id=\"缩放图片避免内存消耗过大\"><a href=\"#缩放图片避免内存消耗过大\" class=\"headerlink\" title=\"缩放图片避免内存消耗过大\"></a>缩放图片避免内存消耗过大</h2><p>原有缩放方法如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (UIImage *)scaleImage:(UIImage *)image newSize:(CGSize)newSize &#123;</span><br><span class=\"line\">   UIGraphicsBeginImageContextWithOptions(newSize, NO, 0);</span><br><span class=\"line\">   [image drawInRect:CGRectMake(0, 0, newSize.width, newSize.height)];</span><br><span class=\"line\">   UIImage *newImage &#x3D; UIGraphicsGetImageFromCurrentImageContext();</span><br><span class=\"line\">   UIGraphicsEndImgeContext();</span><br><span class=\"line\">   </span><br><span class=\"line\">   return newImage;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>处理大分辨率图片时，往往容易出现OOM，原因是-[UIImage drawInRect:]在绘制时，先解码图片，再生成原始分辨率大小的bitmap，这是很耗内存的。解决方法是使用更低层的ImageIO接口，避免中间bitmap产生。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">+ (UIImage *)scaledImageWithData:(NSData *)data withSize:(CGSize)size scale:(CGFloat)scale orientation:(UIImageOrientation)orientation &#123;</span><br><span class=\"line\">   CGFloat maxPixelSize &#x3D; MAX(size.width, size.height);</span><br><span class=\"line\">   CGImageSourceRef sourceRef &#x3D; CGImageSourceCreateWithData((__bridge CFDataRef)data, nil);</span><br><span class=\"line\">   NSDictionary *options &#x3D; @&#123;(__bridge id)kCGImageSourceThumnailFromImageAlways:(__bridge id)kCFBooleanTrue,</span><br><span class=\"line\">   (__bridge id)kCGImageSourceThumbnailMaxPixelSize:[NSNumber numberWithFloat:maxPixelSize]&#125;;</span><br><span class=\"line\">   </span><br><span class=\"line\">   CGImageRef imageRef &#x3D; CGImageSourceCreateThumnailAtIndex(sourceRef, 0, (__bridge CFDictionaryRef)options);</span><br><span class=\"line\">   UIImage *resultImage &#x3D; [UIImage imageWithCGImage:imageRef scale:scale orientation:orientation];</span><br><span class=\"line\">   CGImageRelease(imageRef);</span><br><span class=\"line\">   CFRelease(sourceRef);</span><br><span class=\"line\">   </span><br><span class=\"line\">   return resultImage;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"LocationManager-Combine-Version\"><a href=\"#LocationManager-Combine-Version\" class=\"headerlink\" title=\"LocationManager - Combine Version\"></a>LocationManager - Combine Version</h2><figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> CoreLocation</span><br><span class=\"line\"><span class=\"keyword\">import</span> MapKit</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">LocationManager</span>: <span class=\"title\">NSObject</span>, <span class=\"title\">ObservableObject</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"keyword\">var</span> locationManager <span class=\"operator\">=</span> <span class=\"type\">CLLocationManager</span>()</span><br><span class=\"line\">  <span class=\"meta\">@Published</span> <span class=\"keyword\">var</span> region: <span class=\"type\">MKCoordinateRegion</span></span><br><span class=\"line\">  <span class=\"meta\">@Published</span> <span class=\"keyword\">var</span> authorized <span class=\"operator\">=</span> <span class=\"literal\">false</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">init</span>()</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">let</span> place <span class=\"operator\">=</span> <span class=\"type\">WondersOfTheWorld</span>().places.randomElement() <span class=\"operator\">??</span> <span class=\"type\">WondersOfTheWorld</span>().places[<span class=\"number\">0</span>]</span><br><span class=\"line\">    region <span class=\"operator\">=</span> <span class=\"type\">MKCoordinateRegion</span>(center: place.location.coordinate, latitudinalMeters: <span class=\"number\">1000</span>, longitudinalMeters: <span class=\"number\">1000</span>)</span><br><span class=\"line\">    <span class=\"keyword\">super</span>.<span class=\"keyword\">init</span>()</span><br><span class=\"line\">    locationManager.delegate <span class=\"operator\">=</span> <span class=\"keyword\">self</span></span><br><span class=\"line\">    locationManager.desiredAccuracy <span class=\"operator\">=</span> kCLLocationAccuracyBest</span><br><span class=\"line\">    <span class=\"keyword\">if</span> locationManager.authorizationStatus <span class=\"operator\">==</span> .authorizedWhenInUse &#123;</span><br><span class=\"line\">      authorized <span class=\"operator\">=</span> <span class=\"literal\">true</span></span><br><span class=\"line\">      locationManager.startUpdatingLocation()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">requestAuthorization</span>()</span> &#123;</span><br><span class=\"line\">    locationManager.requestWhenInUseAuthorization()</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// MARK: - CLLocationManagerDelegate</span></span><br><span class=\"line\"><span class=\"class\"><span class=\"keyword\">extension</span> <span class=\"title\">LocationManager</span>: <span class=\"title\">CLLocationManagerDelegate</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">locationManagerDidChangeAuthorization</span>(<span class=\"keyword\">_</span> <span class=\"params\">manager</span>: <span class=\"type\">CLLocationManager</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> locationManager.authorizationStatus <span class=\"operator\">==</span> .authorizedWhenInUse &#123;</span><br><span class=\"line\">      authorized <span class=\"operator\">=</span> <span class=\"literal\">true</span></span><br><span class=\"line\">      locationManager.startUpdatingLocation()</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">locationManager</span>(<span class=\"keyword\">_</span> <span class=\"params\">manager</span>: <span class=\"type\">CLLocationManager</span>, <span class=\"params\">didUpdateLocations</span> <span class=\"params\">locations</span>: [<span class=\"type\">CLLocation</span>])</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> latest <span class=\"operator\">=</span> locations.first <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    region <span class=\"operator\">=</span> <span class=\"type\">MKCoordinateRegion</span>.<span class=\"keyword\">init</span>(center: latest.coordinate, latitudinalMeters: <span class=\"number\">1000</span>, longitudinalMeters: <span class=\"number\">1000</span>)</span><br><span class=\"line\">    <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Region: <span class=\"subst\">\\(region)</span>&quot;</span>)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"function\"><span class=\"keyword\">func</span> <span class=\"title\">locationManager</span>(<span class=\"keyword\">_</span> <span class=\"params\">manager</span>: <span class=\"type\">CLLocationManager</span>, <span class=\"params\">didFailWithError</span> <span class=\"params\">error</span>: <span class=\"type\">Error</span>)</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">guard</span> <span class=\"keyword\">let</span> clError <span class=\"operator\">=</span> error <span class=\"keyword\">as?</span> <span class=\"type\">CLError</span> <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">      <span class=\"keyword\">return</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">switch</span> clError &#123;</span><br><span class=\"line\">    <span class=\"keyword\">case</span> <span class=\"type\">CLError</span>.denied:</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;Access denied&quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">default</span>:</span><br><span class=\"line\">      <span class=\"built_in\">print</span>(<span class=\"string\">&quot;LocationManager didFailWithError: <span class=\"subst\">\\(clError.localizedDescription)</span>&quot;</span>)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"断言\"><a href=\"#断言\" class=\"headerlink\" title=\"断言\"></a>断言</h2><blockquote>\n<p> 使用preconditionFailure（_：file：line :)或fatalError（_：file：line :)而不是assertionFailure（_：file：line :)可以使您的应用在release配置下崩溃。</p>\n</blockquote>\n<p>Ref: <a href=\"https://www.jianshu.com/p/91213ee3cecf\">https://www.jianshu.com/p/91213ee3cecf</a></p>\n<h2 id=\"字符串国际化中，格式化字符串多参数位置调整\"><a href=\"#字符串国际化中，格式化字符串多参数位置调整\" class=\"headerlink\" title=\"字符串国际化中，格式化字符串多参数位置调整\"></a>字符串国际化中，格式化字符串多参数位置调整</h2><p>e.g.</p>\n<p>/* Message in alert dialog when something fails */</p>\n<p>“%@ Error! %@ failed!” = “%2$@ blah blah, %1$@ blah!”;</p>\n<p>上例中，两个参数在翻译后的字符串中，前后位置调换。</p>\n<h2 id=\"使用-xib-时的-AutolLayout-和-frame-设置\"><a href=\"#使用-xib-时的-AutolLayout-和-frame-设置\" class=\"headerlink\" title=\"使用 xib 时的 AutolLayout 和 frame 设置\"></a>使用 xib 时的 AutolLayout 和 frame 设置</h2><p>开起AutoLayout后</p>\n<p>方法调用顺序：viewDidLoad -&gt; viewWillLayoutSubviews（这个函数在执行时加载文件对应的xib中设置的约束）-&gt; viewDidLayoutSubviews</p>\n<p>因此在viewDidLoad和viewWillLayoutSubviews中设置frame都是无效的，frame会在加载layout约束时重新计算。</p>\n<p>想要更改frame有两个方法：</p>\n<ol>\n<li>在viewDidLayoutSubviews中设置frame；</li>\n<li>将约束control-drag到代码中，通过IBOutlet设置对应属性。通过这个方式可以在viewDidLoad和viewWillLayoutSubviews中进行设置。</li>\n</ol>\n<blockquote>\n<p> Tip：如果要对frame进行修改并产生动画，需要在动画block内的代码块最后调用[被修改frame的view.super layoutIfNeeded];</p>\n</blockquote>\n<h2 id=\"用-NSKeyedArchiver-和-NSKeyedUnarchiver-实现多层数据结构的完全复制\"><a href=\"#用-NSKeyedArchiver-和-NSKeyedUnarchiver-实现多层数据结构的完全复制\" class=\"headerlink\" title=\"用 NSKeyedArchiver 和 NSKeyedUnarchiver 实现多层数据结构的完全复制\"></a>用 NSKeyedArchiver 和 NSKeyedUnarchiver 实现多层数据结构的完全复制</h2><h3 id=\"示例：\"><a href=\"#示例：\" class=\"headerlink\" title=\"示例：\"></a>示例：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSMutableString *str1 &#x3D; @“1”;</span><br><span class=\"line\">NSMutableString *str2 &#x3D; @“2”;</span><br><span class=\"line\"></span><br><span class=\"line\">NSMutabelArray *arr1 &#x3D; [NSMutableArray arrayWithObjects:str1, str2, nil];</span><br><span class=\"line\">NSMutableArray *arr2 &#x3D; [NSMutableArray arrayWithObjects:str1, str2, arr1, nil];</span><br><span class=\"line\"></span><br><span class=\"line\">NSMutableArray *arr3 &#x3D; [[NSMutableArray alloc] initWithArray:arr2 copyItems:YES];</span><br><span class=\"line\"></span><br><span class=\"line\">NSMutableString *str3 &#x3D; [arr1 objectAtIndex:0];</span><br><span class=\"line\">[str3 appendString:@“1”];</span><br><span class=\"line\"></span><br><span class=\"line\">NSLog(@&quot;arrM2--%@&quot;,arrM2);</span><br><span class=\"line\">NSLog(@&quot;arrM3--%@&quot;,arrM3);</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"结果：\"><a href=\"#结果：\" class=\"headerlink\" title=\"结果：\"></a>结果：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">2017-03-14 00:55:57.604 深复制和完全复制[6080:438490] arrM2--(</span><br><span class=\"line\">    11,</span><br><span class=\"line\">    2,</span><br><span class=\"line\">        (</span><br><span class=\"line\">        11,</span><br><span class=\"line\">        2</span><br><span class=\"line\">    )</span><br><span class=\"line\">)</span><br><span class=\"line\">2017-03-14 00:55:57.606 深复制和完全复制[6080:438490] arrM3--(</span><br><span class=\"line\">    1,</span><br><span class=\"line\">    2,</span><br><span class=\"line\">        (</span><br><span class=\"line\">        11,</span><br><span class=\"line\">        2</span><br><span class=\"line\">    )</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"分析：\"><a href=\"#分析：\" class=\"headerlink\" title=\"分析：\"></a>分析：</h3><p>外层数据深拷贝，内层数据依然是浅拷贝（只拷贝指针）。</p>\n<h3 id=\"修复：\"><a href=\"#修复：\" class=\"headerlink\" title=\"修复：\"></a>修复：</h3><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">NSMutableArray *arr3 &#x3D; [NSKeyedUnarchiver unarchiveObjectWithData:[NSKeyedArchiver archivedDataWithRootObject:arr2]];</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"ARC-MRC-引用计数模式设置\"><a href=\"#ARC-MRC-引用计数模式设置\" class=\"headerlink\" title=\"ARC - MRC 引用计数模式设置\"></a>ARC - MRC 引用计数模式设置</h2><p>Project设置 -&gt; Build Settings -&gt; Apple LLVM x.x - Language - Objective C -&gt; Weak References in Manual Retain Release: </p>\n<p>NO: MRC</p>\n<p>YES: ARC</p>\n<h2 id=\"tintColorDidChange\"><a href=\"#tintColorDidChange\" class=\"headerlink\" title=\"tintColorDidChange\"></a>tintColorDidChange</h2><p>当弹出一个alert或者action sheet时，iOS7会自动将后面视图的tint color变暗。此时，我们可以在自定义视图中重写tintColorDidChange方法来执行我们想要的操作。</p>\n<h2 id=\"UIView-不能接受事件处理的情况\"><a href=\"#UIView-不能接受事件处理的情况\" class=\"headerlink\" title=\"UIView 不能接受事件处理的情况\"></a>UIView 不能接受事件处理的情况</h2><ol>\n<li>alpha &lt; 0.01</li>\n<li>userInteractionEnable = NO</li>\n<li>hidden = YES</li>\n</ol>\n<h2 id=\"如何重写自己的-hash-方法\"><a href=\"#如何重写自己的-hash-方法\" class=\"headerlink\" title=\"如何重写自己的 hash 方法\"></a>如何重写自己的 hash 方法</h2><p>hash方法是NSObject中声明的，默认实现是返回对象的内存地址。</p>\n<p>那么hash方法的最佳实践到底是什么呢?<br> 大神<a href=\"https://link.jianshu.com/?t=http://nshipster.com/authors/mattt-thompson/\">Mattt Thompson</a>在<a href=\"https://link.jianshu.com/?t=http://nshipster.com/equality/\">Equality</a>中给出的结论就是</p>\n<p>In reality, a simple XOR over the hash values of critical properties is sufficient 99% of the time(对关键属性的hash值进行位异或运算作为hash值)</p>\n<p>比如对于Person类的hash方法实现如下</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (NSUInteger)hash &#123;</span><br><span class=\"line\">  </span><br><span class=\"line\">   return [self.name hash] ^ [self.birthday hash];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"xib-动画\"><a href=\"#xib-动画\" class=\"headerlink\" title=\"xib 动画\"></a>xib 动画</h2><p>Xib中的控件，通过约束更改尺寸/位置等属性后，需要调用控件的父视图的layoutIfNeed方法。</p>\n<p>如果是使用UIView的animateWith…动画方法，需要在动画block内部的最后调用该方法。</p>\n<h2 id=\"ios-开发-loaded-the-“ViewController”-nib-but-the-view-outlet-was-not-set-’\"><a href=\"#ios-开发-loaded-the-“ViewController”-nib-but-the-view-outlet-was-not-set-’\" class=\"headerlink\" title=\"ios 开发 loaded the “ViewController” nib but the view outlet was not set.’\"></a>ios 开发 loaded the “ViewController” nib but the view outlet was not set.’</h2><p>遇到loaded the “ViewController” nib but the view outlet was not set.’时，解决办法为：<a href=\"http://blog.sina.com.cn/s/blog_8f38d3410101a1rb.html%EF%BC%8C%E9%9C%80%E8%A6%81%E5%B0%86Files&#39;s\">http://blog.sina.com.cn/s/blog_8f38d3410101a1rb.html，需要将Files&#39;s</a> Owner中的view变量做一下关联。</p>\n<p>但是，有时候做关联时并没有看到view变量，这时，需要设置一下Files’s Owner的class，之后就可以做关联了。详情参考：<a href=\"https://stackoverflow.com/questions/10750082/loaded-the-controller-nib-but-the-view-outlet-was-not-set\">https://stackoverflow.com/questions/10750082/loaded-the-controller-nib-but-the-view-outlet-was-not-set</a></p>\n<h2 id=\"How-to-avoid-clipboard-warning-as-possibly-as-you-can\"><a href=\"#How-to-avoid-clipboard-warning-as-possibly-as-you-can\" class=\"headerlink\" title=\"How to avoid clipboard warning as possibly as you can\"></a>How to avoid clipboard warning as possibly as you can</h2><p>Always check <strong>UIPasteboard.hasStrings</strong> before reading <strong>UIPasteboard.string</strong>, you can <strong>potentially</strong> save one clipboard warning.</p>\n<p>——from ying Chong</p>\n<h2 id=\"怎么使用-GeometryReader-传入的-GeometryProxy-类型的参数，又不会因为在视图层级中加入-GeometryReader-导致占用了全部的可用屏幕空间，导致布局出现错误。\"><a href=\"#怎么使用-GeometryReader-传入的-GeometryProxy-类型的参数，又不会因为在视图层级中加入-GeometryReader-导致占用了全部的可用屏幕空间，导致布局出现错误。\" class=\"headerlink\" title=\"怎么使用 GeometryReader 传入的 GeometryProxy 类型的参数，又不会因为在视图层级中加入 GeometryReader 导致占用了全部的可用屏幕空间，导致布局出现错误。\"></a>怎么使用 GeometryReader 传入的 GeometryProxy 类型的参数，又不会因为在视图层级中加入 GeometryReader 导致占用了全部的可用屏幕空间，导致布局出现错误。</h2><p><img src=\"https://tva1.sinaimg.cn/large/008eGmZEly1goxgunt0cmj30ay07taa2.jpg\"></p>\n<figure class=\"highlight swift\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"class\"><span class=\"keyword\">struct</span> <span class=\"title\">Graph</span>: <span class=\"title\">View</span> </span>&#123;</span><br><span class=\"line\">  <span class=\"meta\">@State</span> <span class=\"keyword\">private</span> <span class=\"keyword\">var</span> width <span class=\"operator\">=</span> <span class=\"type\">UIScreen</span>.main.bounds.width <span class=\"comment\">// just initial constant</span></span><br><span class=\"line\">  <span class=\"keyword\">var</span> body: <span class=\"keyword\">some</span> <span class=\"type\">View</span> &#123;</span><br><span class=\"line\">      <span class=\"type\">HStack</span>(spacing: <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"type\">Color</span>.red.frame(width: width <span class=\"operator\">/</span> <span class=\"number\">3</span>, height: <span class=\"number\">80</span>)</span><br><span class=\"line\">        <span class=\"type\">Color</span>.blue.frame(width: width <span class=\"operator\">/</span> <span class=\"number\">3</span>, height: <span class=\"number\">120</span>)</span><br><span class=\"line\">        <span class=\"type\">Color</span>.green.frame(width: width <span class=\"operator\">/</span> <span class=\"number\">3</span>, height: <span class=\"number\">180</span>)</span><br><span class=\"line\">      &#125;.background(<span class=\"type\">GeometryReader</span> &#123; gp -&gt; <span class=\"type\">Color</span> <span class=\"keyword\">in</span></span><br><span class=\"line\">        <span class=\"keyword\">let</span> frame <span class=\"operator\">=</span> gp.frame(in: .local)</span><br><span class=\"line\">        <span class=\"type\">DispatchQueue</span>.main.async &#123;</span><br><span class=\"line\">            <span class=\"keyword\">self</span>.width <span class=\"operator\">=</span> frame.size.width <span class=\"comment\">// &lt;&lt; dynamic, on layout !!</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"type\">Color</span>.clear</span><br><span class=\"line\">      &#125;)</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n<h2 id=\"收到键盘通知后自动调整-scrollview-的-contentOffset\"><a href=\"#收到键盘通知后自动调整-scrollview-的-contentOffset\" class=\"headerlink\" title=\"收到键盘通知后自动调整 scrollview 的 contentOffset\"></a>收到键盘通知后自动调整 scrollview 的 contentOffset</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">- (void)keyboardWillShow:(NSNotification *)notification</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    NSDictionary *info &#x3D; [notification userInfo];</span><br><span class=\"line\">    CGFloat kbH &#x3D; [[info objectForKey:UIKeyboardFrameEndUserInfoKey] CGRectValue].size.height;</span><br><span class=\"line\">    NSIndexPath *indexPath &#x3D; [NSIndexPath indexPathForRow:self.classes.count inSection:0];</span><br><span class=\"line\">    CGRect p &#x3D; [self.baseTableView rectForRowAtIndexPath:indexPath];</span><br><span class=\"line\">    CGRect rectInSelfview &#x3D; [self.baseTableView convertRect:p toView:self.view];</span><br><span class=\"line\">    CGFloat cellBottomY &#x3D; rectInSelfview.origin.y + rectInSelfview.size.height;</span><br><span class=\"line\">    </span><br><span class=\"line\">    if (cellBottomY &lt; kbH) &#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        return;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    [UIView animateWithDuration:0.2 animations:^&#123;</span><br><span class=\"line\">        </span><br><span class=\"line\">        self.baseTableView.contentOffset &#x3D; CGPointMake(0, cellBottomY - (self.baseTableView.height - kbH));</span><br><span class=\"line\">    &#125;];</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"避免锁死Tip\"><a href=\"#避免锁死Tip\" class=\"headerlink\" title=\"避免锁死Tip\"></a>避免锁死Tip</h1><ol>\n<li><p>dispatch_once 中不要有同步到主线程执行的方法。</p>\n</li>\n<li><p>CTTelephonyNetworkInfo 最好在 +load方法或者 main 方法之前的其他时机提前初始化一个共享的实例，避免踩到子线程懒加载时候要求主线程同步响应的坑。</p>\n</li>\n<li><p>有可能存在锁竞争的代码尽量不在主线程同步执行。</p>\n</li>\n<li><p>如果主线程与子线程不可避免的存在竞争时，加锁的粒度要尽量小，操作要尽量轻。、</p>\n</li>\n<li><p>数据库读写，文件压缩/解压缩等磁盘 IO 行为不放在主线程执行。</p>\n</li>\n<li><p>如果存在主线程将任务同步到串行队列中执行的场景，确保这些任务不与子线程可能存在的耗时操作复用同一个串行队列。</p>\n</li>\n<li><p>对于一些启动阶段非必要同步加载并且有比较密集磁盘 IO 行为的 SDK，如各种支付分享等第三方 SDK 都可以延迟，错开加载。</p>\n</li>\n<li><p>NSUserDefaults 底层实现中存在直接或者间接的跨进程通信，在主线程同步调用容易发生卡死。➡️重度使用参考MMKV，轻度使用参考firebase自己写歌轻量的UserDefaults类</p>\n</li>\n<li><p>[[UIApplication sharedApplication] openURL]接口，内部实现也存在同步的跨进程通信。➡️iOS10 及以上的系统版本使用[[UIApplication sharedApplication] openURL:options:completionHandler:]这个接口替换，此接口可以异步调起，不会造成卡死。</p>\n</li>\n</ol>\n"},{"_content":"# macOS Tips\n\n\n\n## macOS 安全验证工具链中添加 Touch ID 验证\n\n> TIL, macOS 在 /etc/pam.d/sudo 里面增加一行 auth sufficient pam_tid.so 可以给 sudo 加上 TouchID 验证\n\n![](https://tva1.sinaimg.cn/large/008eGmZEly1goxdm0k6iyj30b103ywfl.jpg)\n\n\n\n![](https://tva1.sinaimg.cn/large/008eGmZEly1goxdmk2iy6j30uu0e0q5i.jpg)\n\n\n\n## macOS 的 mds_stores 导致应用程序内存不足的故障解决记录\n\nApple的产品专家两三个小时后给我回电了，提供了解决办法，并将解决方法发送到了我的邮箱。 我猜这个方法应该更可靠，适合当前版本（macOS High Sierra 10.13.1），如下：\n\n您可以尝试以下方案： \n\n1）在终端中键入命令 `\"sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist”` \n\n2）完成后重启电脑 3）确认您的电脑未开启 Time Machine，功能的情况下，执行以下重建命令：\n\n`sudo mdutil -i off` // <press [return]>\n\n`sudo mdutil -E` // <press [return]> \n\n`sudo mdutil -i on` // <press [return]>\n\n 需要等待完成重建，完成后再尝试确认是否可以解决。\n\n\n\n## Youtube-download\n\n1. 安装youtube-dl\n\n   ```shell\n   pip install youtube-dl\n   ```\n\n2. 安装you-get\n\n   ```shell\n   pip install you-get\n   ```\n\n那么需要安装的ffmpeg的库该如何安装呢？可以参看这个仓库：\n\n   - ​\t\t[https://github.com/holzschu/a-Shell-commands](https://www.luckydesigner.space/wp-content/themes/begin5.2/inc/go.php?url=https://github.com/holzschu/a-Shell-commands)\n\n点击对应的链接下载，或者直接点击下载这个链接：\n\n   - ​\t\t[https://github.com/holzschu/a-Shell-commands/releases/download/0.1/ffmpeg.wasm](https://www.luckydesigner.space/wp-content/themes/begin5.2/inc/go.php?url=https://github.com/holzschu/a-Shell-commands/releases/download/0.1/ffmpeg.wasm)\n\n之后打开文件这个app——File App，就会看到它已经在Download这个文件夹里面了，先留着备用。\n\n然后前往ipad本机，选择a-Shell文件夹，进入后新建一个名为bin的文件夹，如下图所示。\n\n然后将那个备用的\"ffmpeg.wasm\"文件，转移到该文件夹即可。\n\n### 使用\n\n这样就可以实现下载视频，音频，图片之类的了。\n\n比如下载小鸡小鸡歌曲，只需要输入以下代码即可：\n\n`youtube-dl \"ytsearch:小鸡小鸡\"`\n\n下载完成后，就到File App里面的A-shell查看就可以了，如下图所示。\n\n\n\n## 删除 App 的代码签名（以避免 OCSP 在签名证书校验时通过 http:80 明文发送哈希）\n\n```shell\ncodesign --remove-signature foo.app\ncodesign --remove-signature <#your app’s path#>\n```\n\n\n\n## If you don't like Big Sur's new title style and want to revert to how it looks in Catalina:\n\n```shell\ndefaults write -g NSWindowSupportsAutomaticInlineTitle -bool false\n```\n\nand relaunch Finder.\n\n\n\n","source":"_posts/2021-03-26-macOS Tips.md","raw":"# macOS Tips\n\n\n\n## macOS 安全验证工具链中添加 Touch ID 验证\n\n> TIL, macOS 在 /etc/pam.d/sudo 里面增加一行 auth sufficient pam_tid.so 可以给 sudo 加上 TouchID 验证\n\n![](https://tva1.sinaimg.cn/large/008eGmZEly1goxdm0k6iyj30b103ywfl.jpg)\n\n\n\n![](https://tva1.sinaimg.cn/large/008eGmZEly1goxdmk2iy6j30uu0e0q5i.jpg)\n\n\n\n## macOS 的 mds_stores 导致应用程序内存不足的故障解决记录\n\nApple的产品专家两三个小时后给我回电了，提供了解决办法，并将解决方法发送到了我的邮箱。 我猜这个方法应该更可靠，适合当前版本（macOS High Sierra 10.13.1），如下：\n\n您可以尝试以下方案： \n\n1）在终端中键入命令 `\"sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist”` \n\n2）完成后重启电脑 3）确认您的电脑未开启 Time Machine，功能的情况下，执行以下重建命令：\n\n`sudo mdutil -i off` // <press [return]>\n\n`sudo mdutil -E` // <press [return]> \n\n`sudo mdutil -i on` // <press [return]>\n\n 需要等待完成重建，完成后再尝试确认是否可以解决。\n\n\n\n## Youtube-download\n\n1. 安装youtube-dl\n\n   ```shell\n   pip install youtube-dl\n   ```\n\n2. 安装you-get\n\n   ```shell\n   pip install you-get\n   ```\n\n那么需要安装的ffmpeg的库该如何安装呢？可以参看这个仓库：\n\n   - ​\t\t[https://github.com/holzschu/a-Shell-commands](https://www.luckydesigner.space/wp-content/themes/begin5.2/inc/go.php?url=https://github.com/holzschu/a-Shell-commands)\n\n点击对应的链接下载，或者直接点击下载这个链接：\n\n   - ​\t\t[https://github.com/holzschu/a-Shell-commands/releases/download/0.1/ffmpeg.wasm](https://www.luckydesigner.space/wp-content/themes/begin5.2/inc/go.php?url=https://github.com/holzschu/a-Shell-commands/releases/download/0.1/ffmpeg.wasm)\n\n之后打开文件这个app——File App，就会看到它已经在Download这个文件夹里面了，先留着备用。\n\n然后前往ipad本机，选择a-Shell文件夹，进入后新建一个名为bin的文件夹，如下图所示。\n\n然后将那个备用的\"ffmpeg.wasm\"文件，转移到该文件夹即可。\n\n### 使用\n\n这样就可以实现下载视频，音频，图片之类的了。\n\n比如下载小鸡小鸡歌曲，只需要输入以下代码即可：\n\n`youtube-dl \"ytsearch:小鸡小鸡\"`\n\n下载完成后，就到File App里面的A-shell查看就可以了，如下图所示。\n\n\n\n## 删除 App 的代码签名（以避免 OCSP 在签名证书校验时通过 http:80 明文发送哈希）\n\n```shell\ncodesign --remove-signature foo.app\ncodesign --remove-signature <#your app’s path#>\n```\n\n\n\n## If you don't like Big Sur's new title style and want to revert to how it looks in Catalina:\n\n```shell\ndefaults write -g NSWindowSupportsAutomaticInlineTitle -bool false\n```\n\nand relaunch Finder.\n\n\n\n","slug":"2021-03-26-macOS Tips","published":1,"date":"2021-03-26T08:04:57.521Z","updated":"2021-03-26T10:13:53.166Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmvw22yq0003sgnj5qmrdtbz","content":"<h1 id=\"macOS-Tips\"><a href=\"#macOS-Tips\" class=\"headerlink\" title=\"macOS Tips\"></a>macOS Tips</h1><h2 id=\"macOS-安全验证工具链中添加-Touch-ID-验证\"><a href=\"#macOS-安全验证工具链中添加-Touch-ID-验证\" class=\"headerlink\" title=\"macOS 安全验证工具链中添加 Touch ID 验证\"></a>macOS 安全验证工具链中添加 Touch ID 验证</h2><blockquote>\n<p>TIL, macOS 在 /etc/pam.d/sudo 里面增加一行 auth sufficient pam_tid.so 可以给 sudo 加上 TouchID 验证</p>\n</blockquote>\n<p><img src=\"https://tva1.sinaimg.cn/large/008eGmZEly1goxdm0k6iyj30b103ywfl.jpg\"></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008eGmZEly1goxdmk2iy6j30uu0e0q5i.jpg\"></p>\n<h2 id=\"macOS-的-mds-stores-导致应用程序内存不足的故障解决记录\"><a href=\"#macOS-的-mds-stores-导致应用程序内存不足的故障解决记录\" class=\"headerlink\" title=\"macOS 的 mds_stores 导致应用程序内存不足的故障解决记录\"></a>macOS 的 mds_stores 导致应用程序内存不足的故障解决记录</h2><p>Apple的产品专家两三个小时后给我回电了，提供了解决办法，并将解决方法发送到了我的邮箱。 我猜这个方法应该更可靠，适合当前版本（macOS High Sierra 10.13.1），如下：</p>\n<p>您可以尝试以下方案： </p>\n<p>1）在终端中键入命令 <code>&quot;sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist”</code> </p>\n<p>2）完成后重启电脑 3）确认您的电脑未开启 Time Machine，功能的情况下，执行以下重建命令：</p>\n<p><code>sudo mdutil -i off</code> // &lt;press [return]&gt;</p>\n<p><code>sudo mdutil -E</code> // &lt;press [return]&gt; </p>\n<p><code>sudo mdutil -i on</code> // &lt;press [return]&gt;</p>\n<p> 需要等待完成重建，完成后再尝试确认是否可以解决。</p>\n<h2 id=\"Youtube-download\"><a href=\"#Youtube-download\" class=\"headerlink\" title=\"Youtube-download\"></a>Youtube-download</h2><ol>\n<li><p>安装youtube-dl</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install youtube-dl</span><br></pre></td></tr></table></figure></li>\n<li><p>安装you-get</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install you-get</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>那么需要安装的ffmpeg的库该如何安装呢？可以参看这个仓库：</p>\n<ul>\n<li>​        <a href=\"https://www.luckydesigner.space/wp-content/themes/begin5.2/inc/go.php?url=https://github.com/holzschu/a-Shell-commands\">https://github.com/holzschu/a-Shell-commands</a></li>\n</ul>\n<p>点击对应的链接下载，或者直接点击下载这个链接：</p>\n<ul>\n<li>​        <a href=\"https://www.luckydesigner.space/wp-content/themes/begin5.2/inc/go.php?url=https://github.com/holzschu/a-Shell-commands/releases/download/0.1/ffmpeg.wasm\">https://github.com/holzschu/a-Shell-commands/releases/download/0.1/ffmpeg.wasm</a></li>\n</ul>\n<p>之后打开文件这个app——File App，就会看到它已经在Download这个文件夹里面了，先留着备用。</p>\n<p>然后前往ipad本机，选择a-Shell文件夹，进入后新建一个名为bin的文件夹，如下图所示。</p>\n<p>然后将那个备用的”ffmpeg.wasm”文件，转移到该文件夹即可。</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>这样就可以实现下载视频，音频，图片之类的了。</p>\n<p>比如下载小鸡小鸡歌曲，只需要输入以下代码即可：</p>\n<p><code>youtube-dl &quot;ytsearch:小鸡小鸡&quot;</code></p>\n<p>下载完成后，就到File App里面的A-shell查看就可以了，如下图所示。</p>\n<h2 id=\"删除-App-的代码签名（以避免-OCSP-在签名证书校验时通过-http-80-明文发送哈希）\"><a href=\"#删除-App-的代码签名（以避免-OCSP-在签名证书校验时通过-http-80-明文发送哈希）\" class=\"headerlink\" title=\"删除 App 的代码签名（以避免 OCSP 在签名证书校验时通过 http:80 明文发送哈希）\"></a>删除 App 的代码签名（以避免 OCSP 在签名证书校验时通过 http:80 明文发送哈希）</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">codesign --remove-signature foo.app</span><br><span class=\"line\">codesign --remove-signature &lt;#your app’s path#&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"If-you-don’t-like-Big-Sur’s-new-title-style-and-want-to-revert-to-how-it-looks-in-Catalina\"><a href=\"#If-you-don’t-like-Big-Sur’s-new-title-style-and-want-to-revert-to-how-it-looks-in-Catalina\" class=\"headerlink\" title=\"If you don’t like Big Sur’s new title style and want to revert to how it looks in Catalina:\"></a>If you don’t like Big Sur’s new title style and want to revert to how it looks in Catalina:</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write -g NSWindowSupportsAutomaticInlineTitle -bool false</span><br></pre></td></tr></table></figure>\n\n<p>and relaunch Finder.</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"macOS-Tips\"><a href=\"#macOS-Tips\" class=\"headerlink\" title=\"macOS Tips\"></a>macOS Tips</h1><h2 id=\"macOS-安全验证工具链中添加-Touch-ID-验证\"><a href=\"#macOS-安全验证工具链中添加-Touch-ID-验证\" class=\"headerlink\" title=\"macOS 安全验证工具链中添加 Touch ID 验证\"></a>macOS 安全验证工具链中添加 Touch ID 验证</h2><blockquote>\n<p>TIL, macOS 在 /etc/pam.d/sudo 里面增加一行 auth sufficient pam_tid.so 可以给 sudo 加上 TouchID 验证</p>\n</blockquote>\n<p><img src=\"https://tva1.sinaimg.cn/large/008eGmZEly1goxdm0k6iyj30b103ywfl.jpg\"></p>\n<p><img src=\"https://tva1.sinaimg.cn/large/008eGmZEly1goxdmk2iy6j30uu0e0q5i.jpg\"></p>\n<h2 id=\"macOS-的-mds-stores-导致应用程序内存不足的故障解决记录\"><a href=\"#macOS-的-mds-stores-导致应用程序内存不足的故障解决记录\" class=\"headerlink\" title=\"macOS 的 mds_stores 导致应用程序内存不足的故障解决记录\"></a>macOS 的 mds_stores 导致应用程序内存不足的故障解决记录</h2><p>Apple的产品专家两三个小时后给我回电了，提供了解决办法，并将解决方法发送到了我的邮箱。 我猜这个方法应该更可靠，适合当前版本（macOS High Sierra 10.13.1），如下：</p>\n<p>您可以尝试以下方案： </p>\n<p>1）在终端中键入命令 <code>&quot;sudo launchctl load -w /System/Library/LaunchDaemons/com.apple.metadata.mds.plist”</code> </p>\n<p>2）完成后重启电脑 3）确认您的电脑未开启 Time Machine，功能的情况下，执行以下重建命令：</p>\n<p><code>sudo mdutil -i off</code> // &lt;press [return]&gt;</p>\n<p><code>sudo mdutil -E</code> // &lt;press [return]&gt; </p>\n<p><code>sudo mdutil -i on</code> // &lt;press [return]&gt;</p>\n<p> 需要等待完成重建，完成后再尝试确认是否可以解决。</p>\n<h2 id=\"Youtube-download\"><a href=\"#Youtube-download\" class=\"headerlink\" title=\"Youtube-download\"></a>Youtube-download</h2><ol>\n<li><p>安装youtube-dl</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install youtube-dl</span><br></pre></td></tr></table></figure></li>\n<li><p>安装you-get</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">pip install you-get</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>那么需要安装的ffmpeg的库该如何安装呢？可以参看这个仓库：</p>\n<ul>\n<li>​        <a href=\"https://www.luckydesigner.space/wp-content/themes/begin5.2/inc/go.php?url=https://github.com/holzschu/a-Shell-commands\">https://github.com/holzschu/a-Shell-commands</a></li>\n</ul>\n<p>点击对应的链接下载，或者直接点击下载这个链接：</p>\n<ul>\n<li>​        <a href=\"https://www.luckydesigner.space/wp-content/themes/begin5.2/inc/go.php?url=https://github.com/holzschu/a-Shell-commands/releases/download/0.1/ffmpeg.wasm\">https://github.com/holzschu/a-Shell-commands/releases/download/0.1/ffmpeg.wasm</a></li>\n</ul>\n<p>之后打开文件这个app——File App，就会看到它已经在Download这个文件夹里面了，先留着备用。</p>\n<p>然后前往ipad本机，选择a-Shell文件夹，进入后新建一个名为bin的文件夹，如下图所示。</p>\n<p>然后将那个备用的”ffmpeg.wasm”文件，转移到该文件夹即可。</p>\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><p>这样就可以实现下载视频，音频，图片之类的了。</p>\n<p>比如下载小鸡小鸡歌曲，只需要输入以下代码即可：</p>\n<p><code>youtube-dl &quot;ytsearch:小鸡小鸡&quot;</code></p>\n<p>下载完成后，就到File App里面的A-shell查看就可以了，如下图所示。</p>\n<h2 id=\"删除-App-的代码签名（以避免-OCSP-在签名证书校验时通过-http-80-明文发送哈希）\"><a href=\"#删除-App-的代码签名（以避免-OCSP-在签名证书校验时通过-http-80-明文发送哈希）\" class=\"headerlink\" title=\"删除 App 的代码签名（以避免 OCSP 在签名证书校验时通过 http:80 明文发送哈希）\"></a>删除 App 的代码签名（以避免 OCSP 在签名证书校验时通过 http:80 明文发送哈希）</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">codesign --remove-signature foo.app</span><br><span class=\"line\">codesign --remove-signature &lt;#your app’s path#&gt;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"If-you-don’t-like-Big-Sur’s-new-title-style-and-want-to-revert-to-how-it-looks-in-Catalina\"><a href=\"#If-you-don’t-like-Big-Sur’s-new-title-style-and-want-to-revert-to-how-it-looks-in-Catalina\" class=\"headerlink\" title=\"If you don’t like Big Sur’s new title style and want to revert to how it looks in Catalina:\"></a>If you don’t like Big Sur’s new title style and want to revert to how it looks in Catalina:</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write -g NSWindowSupportsAutomaticInlineTitle -bool false</span><br></pre></td></tr></table></figure>\n\n<p>and relaunch Finder.</p>\n"},{"_content":"# Xcode 小技巧\n\n## 在 Xcode 活跃视图显示构建时间\n\n```objective-c\n   defaults write com.apple.dt.Xcode ShowBuildOperationDuration -bool YES\n```\n\n\n\n## 防止 Xcode 崩溃后，再次打开时打开崩溃前的所有工程\n\n```objective-c\n   defaults write com.apple.dt.Xcode ApplePersistenceIgnoreState -bool YES\n```\n\n\n\n## Make Xcode’s Assistant aware of your ViewModels, Views, etc\n\n```objective-c\n   defaults write com.apple.dt.Xcode IDEAdditionalCounterpartSuffixes -array-add \"ViewModel\" \"View\" \"Screen\"\n```\n\n> You can check the current value of this default using defaults read com.apple.dt.Xcode IDEAdditionalCounterpartSuffixes.\n\n\n\n## Xcode 重构时，rename功能关闭代码折叠动画（duration设为0）\n\n```objective-c\n   defaults write com.apple.dt.Xcode CodeFoldingAnimationSpeed -int 0\n```\n\n\n\n\n\n","source":"_posts/2021:03:26:Xcode 小技巧.md","raw":"# Xcode 小技巧\n\n## 在 Xcode 活跃视图显示构建时间\n\n```objective-c\n   defaults write com.apple.dt.Xcode ShowBuildOperationDuration -bool YES\n```\n\n\n\n## 防止 Xcode 崩溃后，再次打开时打开崩溃前的所有工程\n\n```objective-c\n   defaults write com.apple.dt.Xcode ApplePersistenceIgnoreState -bool YES\n```\n\n\n\n## Make Xcode’s Assistant aware of your ViewModels, Views, etc\n\n```objective-c\n   defaults write com.apple.dt.Xcode IDEAdditionalCounterpartSuffixes -array-add \"ViewModel\" \"View\" \"Screen\"\n```\n\n> You can check the current value of this default using defaults read com.apple.dt.Xcode IDEAdditionalCounterpartSuffixes.\n\n\n\n## Xcode 重构时，rename功能关闭代码折叠动画（duration设为0）\n\n```objective-c\n   defaults write com.apple.dt.Xcode CodeFoldingAnimationSpeed -int 0\n```\n\n\n\n\n\n","slug":"2021:03:26:Xcode 小技巧","published":1,"date":"2021-03-26T07:39:47.364Z","updated":"2021-03-26T10:13:58.593Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmvw22yr0004sgnjacf3dkd3","content":"<h1 id=\"Xcode-小技巧\"><a href=\"#Xcode-小技巧\" class=\"headerlink\" title=\"Xcode 小技巧\"></a>Xcode 小技巧</h1><h2 id=\"在-Xcode-活跃视图显示构建时间\"><a href=\"#在-Xcode-活跃视图显示构建时间\" class=\"headerlink\" title=\"在 Xcode 活跃视图显示构建时间\"></a>在 Xcode 活跃视图显示构建时间</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.dt.Xcode ShowBuildOperationDuration -bool YES</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"防止-Xcode-崩溃后，再次打开时打开崩溃前的所有工程\"><a href=\"#防止-Xcode-崩溃后，再次打开时打开崩溃前的所有工程\" class=\"headerlink\" title=\"防止 Xcode 崩溃后，再次打开时打开崩溃前的所有工程\"></a>防止 Xcode 崩溃后，再次打开时打开崩溃前的所有工程</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.dt.Xcode ApplePersistenceIgnoreState -bool YES</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Make-Xcode’s-Assistant-aware-of-your-ViewModels-Views-etc\"><a href=\"#Make-Xcode’s-Assistant-aware-of-your-ViewModels-Views-etc\" class=\"headerlink\" title=\"Make Xcode’s Assistant aware of your ViewModels, Views, etc\"></a>Make Xcode’s Assistant aware of your ViewModels, Views, etc</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.dt.Xcode IDEAdditionalCounterpartSuffixes -array-add &quot;ViewModel&quot; &quot;View&quot; &quot;Screen&quot;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>You can check the current value of this default using defaults read com.apple.dt.Xcode IDEAdditionalCounterpartSuffixes.</p>\n</blockquote>\n<h2 id=\"Xcode-重构时，rename功能关闭代码折叠动画（duration设为0）\"><a href=\"#Xcode-重构时，rename功能关闭代码折叠动画（duration设为0）\" class=\"headerlink\" title=\"Xcode 重构时，rename功能关闭代码折叠动画（duration设为0）\"></a>Xcode 重构时，rename功能关闭代码折叠动画（duration设为0）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.dt.Xcode CodeFoldingAnimationSpeed -int 0</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Xcode-小技巧\"><a href=\"#Xcode-小技巧\" class=\"headerlink\" title=\"Xcode 小技巧\"></a>Xcode 小技巧</h1><h2 id=\"在-Xcode-活跃视图显示构建时间\"><a href=\"#在-Xcode-活跃视图显示构建时间\" class=\"headerlink\" title=\"在 Xcode 活跃视图显示构建时间\"></a>在 Xcode 活跃视图显示构建时间</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.dt.Xcode ShowBuildOperationDuration -bool YES</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"防止-Xcode-崩溃后，再次打开时打开崩溃前的所有工程\"><a href=\"#防止-Xcode-崩溃后，再次打开时打开崩溃前的所有工程\" class=\"headerlink\" title=\"防止 Xcode 崩溃后，再次打开时打开崩溃前的所有工程\"></a>防止 Xcode 崩溃后，再次打开时打开崩溃前的所有工程</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.dt.Xcode ApplePersistenceIgnoreState -bool YES</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"Make-Xcode’s-Assistant-aware-of-your-ViewModels-Views-etc\"><a href=\"#Make-Xcode’s-Assistant-aware-of-your-ViewModels-Views-etc\" class=\"headerlink\" title=\"Make Xcode’s Assistant aware of your ViewModels, Views, etc\"></a>Make Xcode’s Assistant aware of your ViewModels, Views, etc</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.dt.Xcode IDEAdditionalCounterpartSuffixes -array-add &quot;ViewModel&quot; &quot;View&quot; &quot;Screen&quot;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>You can check the current value of this default using defaults read com.apple.dt.Xcode IDEAdditionalCounterpartSuffixes.</p>\n</blockquote>\n<h2 id=\"Xcode-重构时，rename功能关闭代码折叠动画（duration设为0）\"><a href=\"#Xcode-重构时，rename功能关闭代码折叠动画（duration设为0）\" class=\"headerlink\" title=\"Xcode 重构时，rename功能关闭代码折叠动画（duration设为0）\"></a>Xcode 重构时，rename功能关闭代码折叠动画（duration设为0）</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">defaults write com.apple.dt.Xcode CodeFoldingAnimationSpeed -int 0</span><br></pre></td></tr></table></figure>\n\n\n\n\n\n"},{"_content":"本软件尊重并保护所有使用服务用户的个人隐私权。为了给您提供更准确、更有个性化的服务，本软件会按照本隐私权政策的规定使用和披露您的个人信息。但本软件将以高度的勤勉、审慎义务对待这些信息。除本隐私权政策另有规定外，在未征得您事先许可的情况下，本软件不会将这些信息对外披露或向第三方提供。本软件会不时更新本隐私权政策。您在同意本软件服务使用协议之时，即视为您已经同意本隐私权政策全部内容。本隐私权政策属于本软件服务使用协议不可分割的一部分。\n\n1.适用范围\n\na)在您使用本软件网络服务，本软件自动接收并记录的您的手机上的信息，包括但不限于您的健康数据、使用的语言、访问日期和时间、软硬件特征信息及您需求的网页记录等数据；\n\n2.信息的使用\n\na)在获得您的数据之后，本软件会将其上传至服务器，以生成您的排行榜数据，以便您能够更好地使用服务。\n\n3.信息披露\n\na)本软件不会将您的信息披露给不受信任的第三方。\n\nb)根据法律的有关规定，或者行政或司法机构的要求，向第三方或者行政、司法机构披露；\n\nc)如您出现违反中国有关法律、法规或者相关规则的情况，需要向第三方披露；\n\n4.信息存储和交换\n\n本软件收集的有关您的信息和资料将保存在本软件及（或）其关联公司的服务器上，这些信息和资料可能传送至您所在国家、地区或本软件收集信息和资料所在地的境外并在境外被访问、存储和展示。\n\n5.信息安全\n\na)在使用本软件网络服务进行网上交易时，您不可避免的要向交易对方或潜在的交易对方披露自己的个人信息，如联络方式或者邮政地址。请您妥善保护自己的个人信息，仅在必要的情形下向他人提供。如您发现自己的个人信息泄密，请您立即联络本软件客服，以便本软件采取相应措施。\n","source":"_posts/2019-12-03-App Store 隐私政策网址(URL).markdown","raw":"本软件尊重并保护所有使用服务用户的个人隐私权。为了给您提供更准确、更有个性化的服务，本软件会按照本隐私权政策的规定使用和披露您的个人信息。但本软件将以高度的勤勉、审慎义务对待这些信息。除本隐私权政策另有规定外，在未征得您事先许可的情况下，本软件不会将这些信息对外披露或向第三方提供。本软件会不时更新本隐私权政策。您在同意本软件服务使用协议之时，即视为您已经同意本隐私权政策全部内容。本隐私权政策属于本软件服务使用协议不可分割的一部分。\n\n1.适用范围\n\na)在您使用本软件网络服务，本软件自动接收并记录的您的手机上的信息，包括但不限于您的健康数据、使用的语言、访问日期和时间、软硬件特征信息及您需求的网页记录等数据；\n\n2.信息的使用\n\na)在获得您的数据之后，本软件会将其上传至服务器，以生成您的排行榜数据，以便您能够更好地使用服务。\n\n3.信息披露\n\na)本软件不会将您的信息披露给不受信任的第三方。\n\nb)根据法律的有关规定，或者行政或司法机构的要求，向第三方或者行政、司法机构披露；\n\nc)如您出现违反中国有关法律、法规或者相关规则的情况，需要向第三方披露；\n\n4.信息存储和交换\n\n本软件收集的有关您的信息和资料将保存在本软件及（或）其关联公司的服务器上，这些信息和资料可能传送至您所在国家、地区或本软件收集信息和资料所在地的境外并在境外被访问、存储和展示。\n\n5.信息安全\n\na)在使用本软件网络服务进行网上交易时，您不可避免的要向交易对方或潜在的交易对方披露自己的个人信息，如联络方式或者邮政地址。请您妥善保护自己的个人信息，仅在必要的情形下向他人提供。如您发现自己的个人信息泄密，请您立即联络本软件客服，以便本软件采取相应措施。\n","slug":"2019-12-03-App Store 隐私政策网址(URL)","published":1,"date":"2021-03-12T10:15:39.814Z","updated":"2021-03-12T10:15:39.814Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmvw22yr0005sgnj6r0t4a09","content":"<p>本软件尊重并保护所有使用服务用户的个人隐私权。为了给您提供更准确、更有个性化的服务，本软件会按照本隐私权政策的规定使用和披露您的个人信息。但本软件将以高度的勤勉、审慎义务对待这些信息。除本隐私权政策另有规定外，在未征得您事先许可的情况下，本软件不会将这些信息对外披露或向第三方提供。本软件会不时更新本隐私权政策。您在同意本软件服务使用协议之时，即视为您已经同意本隐私权政策全部内容。本隐私权政策属于本软件服务使用协议不可分割的一部分。</p>\n<p>1.适用范围</p>\n<p>a)在您使用本软件网络服务，本软件自动接收并记录的您的手机上的信息，包括但不限于您的健康数据、使用的语言、访问日期和时间、软硬件特征信息及您需求的网页记录等数据；</p>\n<p>2.信息的使用</p>\n<p>a)在获得您的数据之后，本软件会将其上传至服务器，以生成您的排行榜数据，以便您能够更好地使用服务。</p>\n<p>3.信息披露</p>\n<p>a)本软件不会将您的信息披露给不受信任的第三方。</p>\n<p>b)根据法律的有关规定，或者行政或司法机构的要求，向第三方或者行政、司法机构披露；</p>\n<p>c)如您出现违反中国有关法律、法规或者相关规则的情况，需要向第三方披露；</p>\n<p>4.信息存储和交换</p>\n<p>本软件收集的有关您的信息和资料将保存在本软件及（或）其关联公司的服务器上，这些信息和资料可能传送至您所在国家、地区或本软件收集信息和资料所在地的境外并在境外被访问、存储和展示。</p>\n<p>5.信息安全</p>\n<p>a)在使用本软件网络服务进行网上交易时，您不可避免的要向交易对方或潜在的交易对方披露自己的个人信息，如联络方式或者邮政地址。请您妥善保护自己的个人信息，仅在必要的情形下向他人提供。如您发现自己的个人信息泄密，请您立即联络本软件客服，以便本软件采取相应措施。</p>\n","site":{"data":{}},"excerpt":"","more":"<p>本软件尊重并保护所有使用服务用户的个人隐私权。为了给您提供更准确、更有个性化的服务，本软件会按照本隐私权政策的规定使用和披露您的个人信息。但本软件将以高度的勤勉、审慎义务对待这些信息。除本隐私权政策另有规定外，在未征得您事先许可的情况下，本软件不会将这些信息对外披露或向第三方提供。本软件会不时更新本隐私权政策。您在同意本软件服务使用协议之时，即视为您已经同意本隐私权政策全部内容。本隐私权政策属于本软件服务使用协议不可分割的一部分。</p>\n<p>1.适用范围</p>\n<p>a)在您使用本软件网络服务，本软件自动接收并记录的您的手机上的信息，包括但不限于您的健康数据、使用的语言、访问日期和时间、软硬件特征信息及您需求的网页记录等数据；</p>\n<p>2.信息的使用</p>\n<p>a)在获得您的数据之后，本软件会将其上传至服务器，以生成您的排行榜数据，以便您能够更好地使用服务。</p>\n<p>3.信息披露</p>\n<p>a)本软件不会将您的信息披露给不受信任的第三方。</p>\n<p>b)根据法律的有关规定，或者行政或司法机构的要求，向第三方或者行政、司法机构披露；</p>\n<p>c)如您出现违反中国有关法律、法规或者相关规则的情况，需要向第三方披露；</p>\n<p>4.信息存储和交换</p>\n<p>本软件收集的有关您的信息和资料将保存在本软件及（或）其关联公司的服务器上，这些信息和资料可能传送至您所在国家、地区或本软件收集信息和资料所在地的境外并在境外被访问、存储和展示。</p>\n<p>5.信息安全</p>\n<p>a)在使用本软件网络服务进行网上交易时，您不可避免的要向交易对方或潜在的交易对方披露自己的个人信息，如联络方式或者邮政地址。请您妥善保护自己的个人信息，仅在必要的情形下向他人提供。如您发现自己的个人信息泄密，请您立即联络本软件客服，以便本软件采取相应措施。</p>\n"},{"title":"Hello World","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-03-30T10:18:35.164Z","updated":"2021-03-30T10:18:35.165Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmvw22ys0006sgnj4pc5cell","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"_content":"# Terminal Tips\n\n## 常用系统命令\n\n```shell\nshutdown -r now // 重启\nshutdown now    // 关机\n\npmset -g                   // 显示电源管理设置信息\nsudo pmset displaysleep 15 // 设置显示器无活动15分钟后关闭\nsudo pmset sleep 30        // 计算机无活动30分钟后休眠\n```\n\n\n\n## 快捷键\n\n1. Command + L：清空一行\n2. Command + K：清空全部\n\n## 使用 sudo 快速执行上一条命令\n\n```shell\nsudo !!\n```\n\n> 如果由于你忘了使用sudo而导致命令行返回一个错误，只需输入sudo !!就可以用sudo来执行上一条指令。\n\n\n\n","source":"_posts/2021-03-26-Terminal Tips.md","raw":"# Terminal Tips\n\n## 常用系统命令\n\n```shell\nshutdown -r now // 重启\nshutdown now    // 关机\n\npmset -g                   // 显示电源管理设置信息\nsudo pmset displaysleep 15 // 设置显示器无活动15分钟后关闭\nsudo pmset sleep 30        // 计算机无活动30分钟后休眠\n```\n\n\n\n## 快捷键\n\n1. Command + L：清空一行\n2. Command + K：清空全部\n\n## 使用 sudo 快速执行上一条命令\n\n```shell\nsudo !!\n```\n\n> 如果由于你忘了使用sudo而导致命令行返回一个错误，只需输入sudo !!就可以用sudo来执行上一条指令。\n\n\n\n","slug":"2021-03-26-Terminal Tips","published":1,"date":"2021-03-26T08:01:31.157Z","updated":"2021-03-26T10:13:56.614Z","title":"","comments":1,"layout":"post","photos":[],"link":"","_id":"ckmvw22yt0007sgnj3ljqhqig","content":"<h1 id=\"Terminal-Tips\"><a href=\"#Terminal-Tips\" class=\"headerlink\" title=\"Terminal Tips\"></a>Terminal Tips</h1><h2 id=\"常用系统命令\"><a href=\"#常用系统命令\" class=\"headerlink\" title=\"常用系统命令\"></a>常用系统命令</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shutdown -r now // 重启</span><br><span class=\"line\">shutdown now    // 关机</span><br><span class=\"line\"></span><br><span class=\"line\">pmset -g                   // 显示电源管理设置信息</span><br><span class=\"line\">sudo pmset displaysleep 15 // 设置显示器无活动15分钟后关闭</span><br><span class=\"line\">sudo pmset sleep 30        // 计算机无活动30分钟后休眠</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><ol>\n<li>Command + L：清空一行</li>\n<li>Command + K：清空全部</li>\n</ol>\n<h2 id=\"使用-sudo-快速执行上一条命令\"><a href=\"#使用-sudo-快速执行上一条命令\" class=\"headerlink\" title=\"使用 sudo 快速执行上一条命令\"></a>使用 sudo 快速执行上一条命令</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo !!</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>如果由于你忘了使用sudo而导致命令行返回一个错误，只需输入sudo !!就可以用sudo来执行上一条指令。</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Terminal-Tips\"><a href=\"#Terminal-Tips\" class=\"headerlink\" title=\"Terminal Tips\"></a>Terminal Tips</h1><h2 id=\"常用系统命令\"><a href=\"#常用系统命令\" class=\"headerlink\" title=\"常用系统命令\"></a>常用系统命令</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">shutdown -r now // 重启</span><br><span class=\"line\">shutdown now    // 关机</span><br><span class=\"line\"></span><br><span class=\"line\">pmset -g                   // 显示电源管理设置信息</span><br><span class=\"line\">sudo pmset displaysleep 15 // 设置显示器无活动15分钟后关闭</span><br><span class=\"line\">sudo pmset sleep 30        // 计算机无活动30分钟后休眠</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"快捷键\"><a href=\"#快捷键\" class=\"headerlink\" title=\"快捷键\"></a>快捷键</h2><ol>\n<li>Command + L：清空一行</li>\n<li>Command + K：清空全部</li>\n</ol>\n<h2 id=\"使用-sudo-快速执行上一条命令\"><a href=\"#使用-sudo-快速执行上一条命令\" class=\"headerlink\" title=\"使用 sudo 快速执行上一条命令\"></a>使用 sudo 快速执行上一条命令</h2><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo !!</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>如果由于你忘了使用sudo而导致命令行返回一个错误，只需输入sudo !!就可以用sudo来执行上一条指令。</p>\n</blockquote>\n"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}